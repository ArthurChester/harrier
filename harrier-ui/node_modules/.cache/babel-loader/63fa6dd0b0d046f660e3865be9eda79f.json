{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\single-page\\home\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\single-page\\home\\home.vue","mtime":1681468306527},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport utils from '@/common/utils';\nimport * as echarts from 'echarts';\nimport InforCard from '_c/info-card-new';\nimport InfoCircle from '_c/info-circle';\nimport CountTo from '_c/count-to';\nimport { ChartPie, ChartBar } from '_c/charts';\nimport Example from \"./example.vue\";\nvar RESOURCE_PATH = '/firstPage';\nexport default {\n  name: 'home',\n  components: {\n    InfoCircle: InfoCircle,\n    InforCard: InforCard,\n    CountTo: CountTo,\n    ChartPie: ChartPie,\n    ChartBar: ChartBar,\n    Example: Example\n  },\n  created: function created() {\n    var _this = this;\n    this.$nextTick(function () {\n      setTimeout(function () {\n        _this.getBar();\n        _this.queryNodeList();\n        _this.queryPlatformList();\n      }, 20);\n    });\n  },\n  data: function data() {\n    return {\n      platformStartTime: utils.fmtDate(new Date(new Date().getTime() - 3 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss'),\n      platformEndTime: utils.fmtDate(new Date(), 'yyyy-MM-dd hh:mm:ss'),\n      nodeStartTime: utils.fmtDate(new Date(new Date().getTime() - 3 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss'),\n      nodeEndTime: utils.fmtDate(new Date(), 'yyyy-MM-dd hh:mm:ss'),\n      nodeFormBean: {},\n      timeFormBean: {\n        show: false\n      },\n      intervalDataspace: '',\n      timeList: [{\n        value: '10',\n        label: '近六个月'\n      }, {\n        value: '20',\n        label: '近一年'\n      }],\n      jobBean: {},\n      haveNode: false,\n      inforCardData: [{\n        title: '平台总数',\n        name: 'sumPlatforms',\n        iconUrl: 'platformC',\n        count: 0,\n        color: '#2d8cf0'\n      }, {\n        title: '应用总数',\n        name: 'sumSystems',\n        iconUrl: 'systemC',\n        count: 0,\n        color: '#19be6b'\n      }, {\n        title: '作业总数',\n        name: 'sumJobs',\n        iconUrl: 'jobC',\n        count: 0,\n        color: '#ed3f14'\n      }, {\n        title: '未完成平台',\n        name: 'sumUndonePlatforms',\n        iconUrl: 'unPlatformC',\n        count: 0,\n        color: '#E0E7FA'\n      }, {\n        title: '未完成应用',\n        name: 'sumUndoneSystems',\n        iconUrl: 'unSystemC',\n        count: 0,\n        color: '#D9F3E7'\n      }, {\n        title: '未完成作业',\n        name: 'sumUndoneJobs',\n        iconUrl: 'unJobC',\n        count: 0,\n        color: '#FCEBE3'\n      }],\n      pieData: [{\n        value: 335,\n        name: '直接访问'\n      }, {\n        value: 310,\n        name: '邮件营销'\n      }, {\n        value: 234,\n        name: '联盟广告'\n      }, {\n        value: 135,\n        name: '视频广告'\n      }, {\n        value: 1548,\n        name: '搜索引擎'\n      }],\n      barData: {\n        Mon: 13253,\n        Tue: 34235,\n        Wed: 26321,\n        Thu: 12340,\n        Fri: 24643,\n        Sat: 1322,\n        Sun: 1324\n      },\n      showCarousel: false,\n      jobData: [],\n      dataMap: {},\n      myBarGraphOption: {},\n      majorNodeSetting: {\n        loop: false,\n        autoplay: false,\n        autoplaySpeed: 20000,\n        dots: 'none',\n        radiusDot: false,\n        trigger: 'click',\n        arrow: 'hover'\n      },\n      childNodeSetting: {\n        loop: false,\n        autoplay: false,\n        autoplaySpeed: 20000,\n        dots: 'none',\n        radiusDot: false,\n        trigger: 'click',\n        arrow: 'hover'\n      },\n      setting: {\n        loop: false,\n        autoplay: false,\n        autoplaySpeed: 20000,\n        dots: 'none',\n        radiusDot: false,\n        trigger: 'click',\n        arrow: 'hover'\n      },\n      clusterstats: {},\n      majorNodeList: [],\n      childNodeList: [],\n      platformList: [],\n      announcementList: [],\n      nodeList: [],\n      value1: 0,\n      value2: 0,\n      value3: 0,\n      value4: 0,\n      graph7: null,\n      graph8: null\n    };\n  },\n  methods: {\n    init: function init() {\n      this.setting = {\n        loop: true,\n        autoplay: true,\n        autoplaySpeed: 20000,\n        dots: 'none',\n        radiusDot: false,\n        trigger: 'click',\n        arrow: 'hover'\n      };\n      this.getPsjStats();\n      this.getClusterStats();\n      this.graph8 = this.$echarts.init(document.getElementById('main8'));\n      this.graph7 = this.$echarts.init(document.getElementById('main7'));\n    },\n    getBar: function getBar() {\n      var _this2 = this;\n      // 各平台应用作业量\n      var sumAllPatformJobConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/sumAllPatformJob ',\n        params: {}\n      };\n      this.$ajax(sumAllPatformJobConfig).then(function (resp) {\n        if (resp.data) {\n          _this2.jobData = resp.data;\n          var obj = {};\n          var xAxisArr = {};\n          for (var i = 1; i <= Math.ceil(_this2.jobData.length / 10 % 10); i++) {\n            var tmp = {};\n            tmp[i] = [];\n            var xAxis = {};\n            xAxis[i] = [];\n            var k = _this2.jobData.length <= 10 * i ? _this2.jobData.length : 10 * i;\n            for (var j = (i - 1) * 10; j < k; j++) {\n              tmp[i][j] = {\n                name: _this2.jobData[j].platform,\n                value: _this2.jobData[j].num\n              };\n              xAxis[i][j] = _this2.jobData[j].platform;\n            }\n            tmp[i] = tmp[i].filter(function (d) {\n              return d;\n            });\n            Object.assign(obj, tmp);\n            xAxis[i] = xAxis[i].filter(function (d) {\n              return d;\n            });\n            Object.assign(xAxisArr, xAxis);\n          }\n          _this2.dataMap.jobCount = obj;\n          _this2.dataMap.count = Math.ceil(_this2.jobData.length / 10 % 10);\n          _this2.dataMap.xAxisArr = xAxisArr;\n          var myBar = _this2.$echarts.init(document.getElementById('main6'));\n          myBar.setOption(_this2.myBarGraph(_this2.dataMap));\n        }\n      });\n    },\n    myBarGraph: function myBarGraph(dataMap) {\n      var yArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n      this.myBarGraphOption = {\n        baseOption: {\n          timeline: {\n            axisType: 'category',\n            autoPlay: true,\n            playInterval: 3000,\n            data: yArr.splice(0, dataMap.count),\n            label: {\n              formatter: function formatter(s) {\n                return '';\n              }\n            },\n            lineStyle: {\n              // 时间轴\n              show: true,\n              color: 'rgba(225,225,225,0)'\n            },\n            checkpointStyle: {\n              // 时间轴上的点\n              symbol: 'circle',\n              color: '#316bf3',\n              borderColor: 'rgba(49,107,243,0.5)'\n            },\n            controlStyle: {\n              // 控制\n              show: false,\n              color: '#343434',\n              borderColor: '#343434',\n              showPlayBtn: false // 播放按钮\n            },\n\n            emphasis: {\n              controlStyle: {\n                // hover样式\n                color: 'rgba(225,225,225,0.8)',\n                borderColor: 'rgba(225,225,225,0.8)'\n              }\n            }\n          },\n          title: {\n            subtext: '' // 小标题,\n          },\n\n          tooltip: {},\n          legend: {\n            left: 'right',\n            data: []\n          },\n          calculable: true,\n          grid: {\n            top: 50,\n            bottom: 80,\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'shadow',\n                label: {\n                  show: true,\n                  formatter: function formatter(params) {\n                    return params.value.replace('\\n', '');\n                  }\n                }\n              }\n            }\n          },\n          xAxis: [{\n            'type': 'category',\n            'axisLabel': {\n              'interval': 0\n            },\n            splitLine: {\n              show: false\n            }\n          }],\n          yAxis: [{\n            type: 'value',\n            name: '作业数'\n          }],\n          series: [{\n            name: '作业数',\n            type: 'bar',\n            color: '#3858F9',\n            barWidth: 30,\n            label: {\n              show: true,\n              position: 'top',\n              textStyle: {\n                color: '#3858F9',\n                fontSize: 12\n              }\n            }\n          }]\n        },\n        options: [{\n          xAxis: [{\n            data: dataMap.xAxisArr[1]\n          }],\n          series: [{\n            data: dataMap.jobCount[1]\n          }]\n        }, {\n          xAxis: [{\n            data: dataMap.xAxisArr[2]\n          }],\n          series: [{\n            data: dataMap.jobCount[2]\n          }]\n        }, {\n          xAxis: [{\n            data: dataMap.xAxisArr[3]\n          }],\n          series: [{\n            data: dataMap.jobCount[3]\n          }]\n        }, {\n          xAxis: [{\n            data: dataMap.xAxisArr[4]\n          }],\n          series: [{\n            data: dataMap.jobCount[4]\n          }]\n        }, {\n          xAxis: [{\n            data: dataMap.xAxisArr[5]\n          }],\n          series: [{\n            data: dataMap.jobCount[5]\n          }]\n        }]\n      };\n      return this.myBarGraphOption;\n    },\n    changePlatform: function changePlatform(param0, param1) {\n      var platform = this.platformList[param1].value;\n      this.getPlatformconcData(platform); // 平台作业状态折线图\n    },\n    changeNode: function changeNode(param0, param1) {\n      var node = this.nodeList[param1];\n      this.getNodeData(node); // 节点作业状态折线图\n    },\n    // 查询节点名称数据\n    queryNodeList: function queryNodeList() {\n      var _this3 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/ListAllWorker'\n      };\n      this.nodeList = [];\n      this.haveNode = false;\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          _this3.nodeList.push(data);\n        });\n        if (_this3.nodeList.length == 0) {\n          _this3.haveNode = true;\n        }\n        _this3.getNodeData(_this3.nodeList[0]);\n      });\n    },\n    queryPlatformList: function queryPlatformList() {\n      var _this4 = this;\n      this.platformList = [];\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/ListAllPlatform',\n        params: {}\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.status && resp.status === 200 && resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1;\n            temp.value = data1;\n            temp.label = data1;\n            _this4.platformList.push(temp);\n          });\n          _this4.getPlatformconcData(_this4.platformList[0].value);\n        }\n      });\n    },\n    getNodeData: function getNodeData(node) {\n      var _this5 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/serverJobStatus',\n        params: {\n          start: this.nodeStartTime,\n          node: node,\n          end: this.nodeEndTime\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        var option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['runningNum'],\n            top: '7%'\n          },\n          xAxis: {\n            type: 'category',\n            data: resp.data.timeList\n          },\n          yAxis: {\n            type: 'value'\n          },\n          grid: {\n            x: 60,\n            y: 60,\n            x2: 60,\n            y2: 60\n          },\n          series: [{\n            data: resp.data.running,\n            type: 'line',\n            symbol: 'none',\n            lineStyle: {\n              color: '#3858F9'\n            },\n            areaStyle: {\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [{\n                  offset: 0,\n                  color: '#3858F9'\n                }, {\n                  offset: 1,\n                  color: 'white'\n                }]\n              }\n            }\n          }]\n        };\n        _this5.graph8.setOption(option, true);\n        _this5.graph8.resize();\n      });\n    },\n    getPlatformconcData: function getPlatformconcData(platform) {\n      var _this6 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/platformJobStatus',\n        params: {\n          start: this.platformStartTime,\n          platform: platform,\n          end: this.platformEndTime\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        var option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['runningNum', 'dispatcherNum', 'pendingNum'],\n            top: '7%',\n            x: '5%'\n          },\n          xAxis: {\n            type: 'category',\n            data: resp.data['timeList']\n          },\n          yAxis: {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value}'\n            }\n          },\n          grid: {\n            x: 60,\n            y: 60,\n            x2: 60,\n            y2: 60\n          },\n          series: [{\n            name: 'runningNum',\n            data: resp.data['running'],\n            type: 'line',\n            markPoint: {\n              data: [{\n                type: 'max',\n                name: '峰值:{value}'\n              }]\n            }\n          }, {\n            name: 'dispatcherNum',\n            data: resp.data['dispatcher'],\n            type: 'line',\n            markPoint: {\n              data: [{\n                type: 'max',\n                name: '峰值:{value}'\n              }]\n            }\n          }, {\n            name: 'pendingNum',\n            data: resp.data['pending'],\n            type: 'line',\n            markPoint: {\n              data: [{\n                type: 'max',\n                name: '峰值:{value}'\n              }]\n            }\n          }]\n        };\n        _this6.graph7.setOption(option, true);\n        _this6.graph7.resize();\n      });\n    },\n    getPsjStats: function getPsjStats() {\n      var _this7 = this;\n      var psjStatsConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/psjStats',\n        params: {}\n      };\n      this.$ajax(psjStatsConfig).then(function (resp) {\n        if (resp.data) {\n          var psjStatsKeys = Object.keys(resp.data);\n          var psjStatsValues = Object.values(resp.data);\n          for (var i = 0; i < _this7.inforCardData.length; i++) {\n            for (var j = 0; j < psjStatsKeys.length; j++) {\n              if (psjStatsKeys[j] === _this7.inforCardData[i].name) {\n                _this7.inforCardData[i].count = psjStatsValues[j];\n              }\n            }\n          }\n        }\n      });\n    },\n    getPercent: function getPercent(num, total) {\n      num = parseFloat(num);\n      total = parseFloat(total);\n      if (isNaN(num) || isNaN(total)) {\n        return '-';\n      }\n      return total <= 0 ? 0 : Math.round(num / total * 10000) / 100.0;\n    },\n    getClusterStats: function getClusterStats() {\n      var _this8 = this;\n      this.clusterstats = {};\n      var workerDataList = [];\n      var masterDataList = [];\n      this.majorNodeList = [];\n      this.childNodeList = [];\n      var clusterStatsConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/clusterStats',\n        params: {}\n      };\n      this.$ajax(clusterStatsConfig).then(function (resp) {\n        if (resp.data) {\n          var data = resp.data;\n          for (var i = 0; i < data.length; i++) {\n            if (i === data.length - 1) {\n              _this8.clusterstats = JSON.parse(data[i].clusterstats);\n              _this8.clusterstats.serverPercent = _this8.getPercent(_this8.clusterstats.runservernum, _this8.clusterstats.allservernum);\n              _this8.clusterstats.cpuPercent = _this8.getPercent(_this8.clusterstats.usedclustercpu, _this8.clusterstats.allclustercpu);\n              _this8.clusterstats.memoryPercent = _this8.getPercent(_this8.clusterstats.usedclustermem, _this8.clusterstats.allclustermem);\n              _this8.clusterstats.usedclustermem = _this8.getTwoNumber(_this8.clusterstats.usedclustermem);\n              _this8.clusterstats.allservernum = _this8.getTwoNumber(_this8.clusterstats.allservernum);\n              _this8.clusterstats.usedclustercpu = _this8.getTwoNumber(_this8.clusterstats.usedclustercpu);\n              _this8.clusterstats.allclustercpu = _this8.getTwoNumber(_this8.clusterstats.allclustercpu);\n              _this8.clusterstats.usedclustermem = _this8.getTwoNumber(_this8.clusterstats.usedclustermem);\n              _this8.clusterstats.allclustermem = _this8.getTwoNumber(_this8.clusterstats.allclustermem);\n              break;\n            }\n            if (data[i].type === 'Worker-Server') {\n              var worderData = data[i];\n              worderData.cpuPercent = _this8.getPercent(worderData.usedcpu, worderData.allcpu);\n              worderData.memoryPercent = _this8.getPercent(worderData.usedmem, worderData.allmem);\n              worderData.usedcpu = _this8.getTwoNumber(worderData.usedcpu);\n              worderData.allcpu = _this8.getTwoNumber(worderData.allcpu);\n              worderData.usedmem = _this8.getTwoNumber(worderData.usedmem);\n              worderData.allmem = _this8.getTwoNumber(worderData.allmem);\n              workerDataList.push(worderData);\n            }\n            if (data[i].type === 'Master-Server') {\n              var masterData = data[i];\n              masterData.cpuPercent = _this8.getPercent(masterData.usedcpu, masterData.allcpu);\n              masterData.memoryPercent = _this8.getPercent(masterData.usedmem, masterData.allmem);\n              masterData.usedcpu = _this8.getTwoNumber(masterData.usedcpu);\n              masterData.allcpu = _this8.getTwoNumber(masterData.allcpu);\n              masterData.usedmem = _this8.getTwoNumber(masterData.usedmem);\n              masterData.allmem = _this8.getTwoNumber(masterData.allmem);\n              masterDataList.push(masterData);\n            }\n          }\n          _this8.getMajorNodeList(masterDataList);\n          _this8.getChildNodeList(workerDataList);\n          _this8.showCarousel = true;\n        }\n      });\n    },\n    getTwoNumber: function getTwoNumber(num) {\n      var s = num + '';\n      if (s.indexOf('.')) {\n        var str = s.substring(0, s.indexOf('.') + 3);\n        return str;\n      } else {\n        return str;\n      }\n    },\n    getMajorNodeList: function getMajorNodeList(majorNodeData) {\n      for (var i = 0; i < majorNodeData.length; i = i + 2) {\n        var majorNode = [];\n        majorNode.push(majorNodeData[i]);\n        if (majorNodeData.length > i + 1) {\n          majorNode.push(majorNodeData[i + 1]);\n        }\n        this.majorNodeList.push(majorNode);\n      }\n      console.log(this.majorNodeList);\n    },\n    getChildNodeList: function getChildNodeList(childNodeData) {\n      for (var i = 0; i < childNodeData.length; i = i + 2) {\n        var childNode = [];\n        childNode.push(childNodeData[i]);\n        if (childNodeData.length > i + 1) {\n          childNode.push(childNodeData[i + 1]);\n        }\n        this.childNodeList.push(childNode);\n      }\n    },\n    platformSearch: function platformSearch(type) {\n      this.timeFormBean.show = true;\n      this.timeFormBean.type = type;\n      if (type === 'platform') {\n        this.timeFormBean.title = '平台作业时间筛选';\n        this.timeFormBean.startTime = this.platformStartTime;\n        this.timeFormBean.endTime = this.platformEndTime;\n      } else {\n        this.timeFormBean.title = '节点作业时间筛选';\n        this.timeFormBean.startTime = this.nodeStartTime;\n        this.timeFormBean.endTime = this.nodeEndTime;\n      }\n    },\n    timeSave: function timeSave() {\n      var starttime = this.timeFormBean.startTime;\n      var endtime = this.timeFormBean.endTime;\n      var t = (endtime - starttime) / (1000 * 3600);\n      if (starttime === '') {\n        this.$Message.warning('请输入开始时间');\n      } else if (endtime === '') {\n        this.$Message.warning('请输入结束时间');\n      } else if (starttime > endtime) {\n        this.$Message.warning('开始时间大于结束时间');\n      } else if (t > 3) {\n        this.$Message.warning('时间差值超过3小时');\n      } else {\n        this.timeFormBean.show = false;\n        if (this.timeFormBean.type === 'platform') {\n          this.platformStartTime = utils.fmtDate(this.timeFormBean.startTime, 'yyyy-MM-dd hh:mm:ss');\n          this.platformEndTime = utils.fmtDate(this.timeFormBean.endTime, 'yyyy-MM-dd hh:mm:ss');\n          this.getPlatformconcData(this.platformList[this.value1].value); // 平台作业状态折线图\n        } else {\n          this.nodeStartTime = utils.fmtDate(this.timeFormBean.startTime, 'yyyy-MM-dd hh:mm:ss');\n          this.nodeEndTime = utils.fmtDate(this.timeFormBean.endTime, 'yyyy-MM-dd hh:mm:ss');\n          this.getNodeData(this.nodeList[this.value2]);\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"names":["utils","echarts","InforCard","InfoCircle","CountTo","ChartPie","ChartBar","Example","RESOURCE_PATH","name","components","created","_this","$nextTick","setTimeout","getBar","queryNodeList","queryPlatformList","data","platformStartTime","fmtDate","Date","getTime","platformEndTime","nodeStartTime","nodeEndTime","nodeFormBean","timeFormBean","show","intervalDataspace","timeList","value","label","jobBean","haveNode","inforCardData","title","iconUrl","count","color","pieData","barData","Mon","Tue","Wed","Thu","Fri","Sat","Sun","showCarousel","jobData","dataMap","myBarGraphOption","majorNodeSetting","loop","autoplay","autoplaySpeed","dots","radiusDot","trigger","arrow","childNodeSetting","setting","clusterstats","majorNodeList","childNodeList","platformList","announcementList","nodeList","value1","value2","value3","value4","graph7","graph8","methods","init","getPsjStats","getClusterStats","$echarts","document","getElementById","_this2","sumAllPatformJobConfig","method","url","params","$ajax","then","resp","obj","xAxisArr","i","Math","ceil","length","tmp","xAxis","k","j","platform","num","filter","d","Object","assign","jobCount","myBar","setOption","myBarGraph","yArr","baseOption","timeline","axisType","autoPlay","playInterval","splice","formatter","s","lineStyle","checkpointStyle","symbol","borderColor","controlStyle","showPlayBtn","emphasis","subtext","tooltip","legend","left","calculable","grid","top","bottom","axisPointer","type","replace","splitLine","yAxis","series","barWidth","position","textStyle","fontSize","options","changePlatform","param0","param1","getPlatformconcData","changeNode","node","getNodeData","_this3","loadConfig","forEach","push","_this4","status","data1","temp","key","_this5","start","end","option","x","y","x2","y2","running","areaStyle","colorStops","offset","resize","_this6","axisLabel","markPoint","_this7","psjStatsConfig","psjStatsKeys","keys","psjStatsValues","values","getPercent","total","parseFloat","isNaN","round","_this8","workerDataList","masterDataList","clusterStatsConfig","JSON","parse","serverPercent","runservernum","allservernum","cpuPercent","usedclustercpu","allclustercpu","memoryPercent","usedclustermem","allclustermem","getTwoNumber","worderData","usedcpu","allcpu","usedmem","allmem","masterData","getMajorNodeList","getChildNodeList","indexOf","str","substring","majorNodeData","majorNode","console","log","childNodeData","childNode","platformSearch","startTime","endTime","timeSave","starttime","endtime","t","$Message","warning","mounted"],"sources":["src/view/single-page/home/home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Row :gutter=\"20\">\r\n      <Col :xs=\"12\" :md=\"8\" :lg=\"4\" v-for=\"(infor, i) in inforCardData\" :key=\"`infor-${i}`\" style=\"height: 144px;padding-bottom: 10px\">\r\n        <infor-card style=\"border-radius: 10px\" shadow :color=\"infor.color\" :iconUrl=\"infor.iconUrl\" :backImgUrl=\"infor.backImgUrl\">\r\n          <count-to :end=\"infor.count\"  :count-class=\" i>2? 'count-style-black':'count-style' \"/>\r\n          <p :style=\"i>2?'color:#0B1131':'color: #FFFFFF'  \">{{ infor.title }}</p>\r\n        </infor-card>\r\n      </Col>\r\n    </Row>\r\n    <Row :gutter=\"20\" style=\"margin-top: 10px;\">\r\n      <Col :md=\"24\" :lg=\"12\" style=\"margin-bottom: 10px;\">\r\n        <Card shadow style=\"border-radius: 10px\">\r\n          <Row :gutter=\"20\" style=\"margin-top: 10px;height:52px\">\r\n            <Col :md=\"24\" :lg=\"18\" style=\"margin-bottom: 20px;\">\r\n            <p class=\"carousel-title\">集群资源利用率统计</p>\r\n            </Col>\r\n            <Col :md=\"24\" :lg=\"6\" style=\"margin-bottom: 20px;\">\r\n            </Col>\r\n          </Row>\r\n          <div style=\"width: 100%;height:296px\">\r\n            <Row :gutter=\"20\" style=\"margin-left:3% ;\">\r\n              <Col :md=\"24\" :lg=\"6\" >\r\n                <p class=\"circle-title\" >\r\n                  <span class=\"circlr-dot\" style=\"background-color:#FF8E16\"></span>集群就绪节点</p>\r\n                <Row class=\"circle-row\" >\r\n                  <div style=\"display:flex;text-align:center;padding:10px;\">\r\n                    <i-circle style=\"margin:auto;color:#FF8E16\" stroke-color=\"#FF8E16\" :percent=\"clusterstats.serverPercent\" :size=\"80\">\r\n                      <span class=\"demo-Circle-inner\" style=\"font-size:28px\">{{clusterstats.serverPercent}}<span style=\"font-size:16px\">%</span>\r\n                      </span>\r\n                    </i-circle>\r\n                    <div style=\"margin:auto\">\r\n                      <p><span style=\"font-size:18px\">{{clusterstats.runservernum}}</span><span style=\"font-size:12px\">/{{clusterstats.allservernum}}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </Row>\r\n              </Col>\r\n              <Col :md=\"24\" :lg=\"18\">\r\n                <p class=\"circle-title\" >\r\n                  <span class=\"circlr-dot\" style=\"background-color:#2589FF\"></span>主节点资源利用率\r\n                </p>\r\n                <Row class=\"circle-row\" >\r\n                  <Col :xs=\"12\"  :lg=\"24\" >\r\n                    <Carousel\r\n                      v-if=\"showCarousel\"\r\n                      :autoplay=\"majorNodeSetting.autoplay\"\r\n                      :autoplay-speed=\"majorNodeSetting.autoplaySpeed\"\r\n                      v-model=\"value3\"\r\n                      :loop=\"majorNodeSetting.loop\"\r\n                      :dots=\"majorNodeSetting.dots\"\r\n                      :arrow=\"majorNodeSetting.arrow\"\r\n                      >\r\n                      <div>\r\n                        <div v-for=\"(item,index) in majorNodeList\" :key=\"index\" style=\"width:100%\">\r\n                          <CarouselItem>\r\n                            <div style=\"display: inline-flex; text-align: center;width:49%;\">\r\n                              <info-circle color=\"#2589FF\" :name=\"item[0].name\" :cpuPercent=\"item[0].cpuPercent\"\r\n                              :usedcpu=\"item[0].usedcpu\" :allcpu=\"item[0].allcpu\" :ip=\"item[0].ip\" :memoryPercent = item[0].memoryPercent :usedmem=\"item[0].usedmem\" :allmem=\"item[0].allmem\">\r\n                              </info-circle>\r\n                            </div>\r\n                            <div style=\"display: inline-flex; text-align: center;width:49%\" >\r\n                              <info-circle color=\"#2589FF\" :name=\"item[1].name\" :cpuPercent=\"item[1].cpuPercent\" :usedcpu=\"item[1].usedcpu\" :allcpu=\"item[1].allcpu\" :ip=\"item[1].ip\" :memoryPercent = item[1].memoryPercent :usedmem=\"item[1].usedmem\" :allmem=\"item[1].allmem\" v-if=\"item.length == 2\">\r\n                              </info-circle>\r\n                            </div>\r\n                          </CarouselItem>\r\n                        </div>\r\n                      </div>\r\n                    </Carousel>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row :gutter=\"20\" style=\"margin-top: 10px;margin-left:2%;\">\r\n              <Col :md=\"24\" :lg=\"6\" style=\"margin-bottom: 20px;\">\r\n              <p class=\"circle-title show-one \">\r\n                <span class=\"circlr-dot\" style=\"background-color:#15C75B\"></span>集群计算资源总利用率</p>\r\n              <Row class=\"circle-row\" >\r\n                <Col :md=\"24\" :lg=\"12\" style=\"text-align:center;padding:5px\">\r\n                  <i-circle :percent=\"clusterstats.cpuPercent\" :size=\"50\" stroke-color=\"#15C75B\" >\r\n                    <span class=\"demo-Circle-inner\" style=\"color:#15C75B\">{{clusterstats.cpuPercent}}%</span>\r\n                  </i-circle>\r\n                  <p style=\"font-size:14px;font-weight: 400\">cpu</p>\r\n                  <p style=\"font-size: 12px;color: #B5BBCD;font-weight: 400;\">{{clusterstats.usedclustercpu}}/{{clusterstats.allclustercpu}}</p>\r\n\r\n                </Col>\r\n                <Col :md=\"24\" :lg=\"12\" style=\"text-align:center;padding:5px\">\r\n                    <i-circle :percent=\"clusterstats.memoryPercent\" :size=\"50\" stroke-color=\"#15C75B\">\r\n                      <span class=\"demo-Circle-inner\" style=\"color:#15C75B\">{{clusterstats.memoryPercent}}%</span>\r\n                    </i-circle>\r\n                    <p style=\"font-size:14px;font-weight: 400\">内存</p>\r\n                    <p style=\"font-size: 12px;color: #B5BBCD;font-weight: 400;\">{{clusterstats.usedclustermem}}/{{clusterstats.allclustermem}}</p>\r\n                </Col>\r\n              </Row>\r\n              </Col>\r\n              <Col :md=\"24\" :lg=\"18\" style=\"margin-bottom: 20px;\">\r\n              <p class=\"circle-title\" >\r\n                <span class=\"circlr-dot\" style=\"background-color:#7B4CFE;\"></span>子节点资源利用率</p>\r\n              <Row class=\"circle-row\" >\r\n                <Col :xs=\"12\"  :lg=\"24\" >\r\n                  <Carousel\r\n                    v-if=\"showCarousel\"\r\n                    :autoplay=\"childNodeSetting.autoplay\"\r\n                    :autoplay-speed=\"childNodeSetting.autoplaySpeed\"\r\n                    v-model=\"value4\"\r\n                    :loop=\"childNodeSetting.loop\"\r\n                    :dots=\"childNodeSetting.dots\"\r\n                    :arrow=\"childNodeSetting.arrow\"\r\n                  >\r\n                    <div>\r\n                      <div v-for=\"(item,index) in childNodeList\" :key=\"index\" style=\"width:100%\">\r\n                        <CarouselItem  >\r\n                          <div style=\"display: inline-flex; text-align: center;width:49%\">\r\n                            <info-circle color=\"#7B4CFE\" :name=\"item[0].name\" :cpuPercent=\"item[0].cpuPercent\"\r\n                              :usedcpu=\"item[0].usedcpu\" :allcpu=\"item[0].allcpu\" :ip=\"item[0].ip\" :memoryPercent = item[0].memoryPercent :usedmem=\"item[0].usedmem\" :allmem=\"item[0].allmem\">\r\n                            </info-circle>\r\n                          </div>\r\n                          <div style=\"display: inline-flex; text-align: center;width:49%\" >\r\n                            <info-circle color=\"#7B4CFE\" :name=\"item[1].name\" :cpuPercent=\"item[1].cpuPercent\"\r\n                              :usedcpu=\"item[1].usedcpu\" :allcpu=\"item[1].allcpu\" :ip=\"item[1].ip\" :memoryPercent = item[1].memoryPercent :usedmem=\"item[1].usedmem\" :allmem=\"item[1].allmem\" v-if=\"item.length == 2\">\r\n                            </info-circle>\r\n                          </div>\r\n                        </CarouselItem>\r\n                      </div>\r\n                    </div>\r\n                  </Carousel>\r\n                </Col>\r\n              </Row>\r\n              </Col>\r\n            </Row>\r\n        </div>\r\n        </Card>\r\n      </Col>\r\n      <Col :md=\"24\" :lg=\"12\" style=\"margin-bottom: 10px;\">\r\n        <Card shadow style=\"border-radius: 10px\">\r\n          <Row :gutter=\"20\" style=\"margin-top: 10px;\">\r\n            <Col :md=\"24\" :lg=\"18\" style=\"margin-bottom: 20px;\">\r\n            <p class=\"carousel-title\">各平台应用作业量</p>\r\n            </Col>\r\n          </Row>\r\n          <div id=\"main6\" ref=\"main6\" style=\"width: 100%;height:300px\"></div>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row :gutter=\"20\" style=\"margin-top: 10px;\">\r\n      <Col :md=\"24\" :lg=\"12\" style=\"margin-bottom: 10px;\">\r\n        <Card shadow style=\"border-radius: 10px\">\r\n          <Row :gutter=\"20\" style=\"margin-top: 10px;\">\r\n            <Col :md=\"24\" :lg=\"18\" style=\"margin-bottom: 20px;\">\r\n              <Carousel\r\n                :autoplay=\"setting.autoplay\"\r\n                :autoplay-speed=\"setting.autoplaySpeed\"\r\n                v-model=\"value1\"\r\n                :loop=\"setting.loop\"\r\n                :dots=\"setting.dots\"\r\n                :arrow=\"setting.arrow\"\r\n                @on-change=\"changePlatform\"\r\n                >\r\n                  <div v-for=\"(item,index) in platformList\" :key=\"index\">\r\n                    <CarouselItem>\r\n                      <div class=\"carousel-title\">\r\n                        <span>{{item.value}}</span>\r\n                        <span>—平台作业状态折线图</span>\r\n                      </div>\r\n                    </CarouselItem>\r\n                  </div>\r\n              </Carousel>\r\n            </Col>\r\n            <Col :md=\"24\" :lg=\"6\" style=\"margin-bottom: 20px;\">\r\n              <Button type=\"primary\"  @click=\"platformSearch('platform')\">时间筛选</Button>\r\n            </Col>\r\n          </Row>\r\n          <div id=\"main7\" ref=\"main7\" style=\"width:100%;height:320px\"></div>\r\n        </Card>\r\n      </Col>\r\n      <Col :md=\"24\" :lg=\"12\" style=\"margin-bottom: 10px;\">\r\n         <Card shadow style=\"border-radius: 10px\">\r\n          <Row :gutter=\"20\" style=\"margin-top: 10px;\">\r\n            <Col :md=\"24\" :lg=\"18\" style=\"margin-bottom: 20px;\">\r\n              <Carousel\r\n              :autoplay=\"setting.autoplay\"\r\n              :autoplay-speed=\"setting.autoplaySpeed\"\r\n              v-model=\"value2\"\r\n              :loop=\"setting.loop\"\r\n              :dots=\"setting.dots\"\r\n              :arrow=\"setting.arrow\"\r\n              @on-change=\"changeNode\"\r\n              >\r\n                <div v-for=\"(item,index) in nodeList\" :key=\"index\">\r\n                  <CarouselItem>\r\n                    <div >\r\n                      <Row class=\"carousel-title\">{{item}}—节点作业状态折线图</Row>\r\n                    </div>\r\n                  </CarouselItem>\r\n                </div>\r\n              </Carousel>\r\n            </Col>\r\n            <Col :md=\"24\" :lg=\"6\" style=\"margin-bottom: 20px;\">\r\n              <Button type=\"primary\"  @click=\"platformSearch('node')\">时间筛选</Button>\r\n            </Col>\r\n          </Row>\r\n           <!-- 节点作业状态折线图 -->\r\n          <div id=\"main8\" ref=\"main8\"  style=\"width: 100%;height:320px\"></div>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal\r\n    v-model=\"timeFormBean.show\"\r\n    :title=\"timeFormBean.title\"\r\n    :mask-closable=\"false\"\r\n    >\r\n    <div>\r\n      <div>\r\n        <Form :label-width=\"80\"  inline>\r\n          <Row>\r\n            <Col span=\"24\">\r\n              <FormItem  label=\"开始时间\">\r\n                <DatePicker :transfer=\"true\" type=\"datetime\" parse=\"yyyy-MM-dd HH:mm:ss\" format=\"yyyy-MM-dd HH:mm:ss\" v-model=\"timeFormBean.startTime\"></DatePicker>\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"24\">\r\n              <FormItem  label=\"结束时间\">\r\n                <DatePicker :transfer=\"true\" type=\"datetime\" parse=\"yyyy-MM-dd HH:mm:ss\" format=\"yyyy-MM-dd HH:mm:ss\" v-model=\"timeFormBean.endTime\"></DatePicker>\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button type=\"primary\"  @click=\"timeSave\">确定</Button>\r\n            <Button type=\"primary\"  @click=\"timeFormBean.show=false\">取消</Button>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n    <div slot=\"footer\"></div>\r\n  </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport * as echarts from 'echarts'\r\nimport InforCard from '_c/info-card-new'\r\nimport InfoCircle from '_c/info-circle'\r\nimport CountTo from '_c/count-to'\r\nimport { ChartPie, ChartBar } from '_c/charts'\r\nimport Example from './example.vue'\r\nconst RESOURCE_PATH = '/firstPage'\r\nexport default {\r\n  name: 'home',\r\n  components: {\r\n    InfoCircle,\r\n    InforCard,\r\n    CountTo,\r\n    ChartPie,\r\n    ChartBar,\r\n    Example\r\n  },\r\n  created () {\r\n    this.$nextTick(() => {\r\n      setTimeout(() => {\r\n        this.getBar()\r\n        this.queryNodeList()\r\n        this.queryPlatformList()\r\n      }, 20)\r\n    })\r\n  },\r\n  data () {\r\n    return {\r\n      platformStartTime: utils.fmtDate(new Date(new Date().getTime() - 3 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss'),\r\n      platformEndTime: utils.fmtDate(new Date(), 'yyyy-MM-dd hh:mm:ss'),\r\n      nodeStartTime: utils.fmtDate(new Date(new Date().getTime() - 3 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss'),\r\n      nodeEndTime: utils.fmtDate(new Date(), 'yyyy-MM-dd hh:mm:ss'),\r\n      nodeFormBean: {},\r\n      timeFormBean: { show: false },\r\n      intervalDataspace: '',\r\n      timeList: [ { value: '10', label: '近六个月' }, { value: '20', label: '近一年' } ],\r\n      jobBean: {},\r\n      haveNode: false,\r\n      inforCardData: [\r\n        { title: '平台总数', name: 'sumPlatforms', iconUrl: 'platformC', count: 0, color: '#2d8cf0' },\r\n        { title: '应用总数', name: 'sumSystems', iconUrl: 'systemC', count: 0, color: '#19be6b' },\r\n        { title: '作业总数', name: 'sumJobs', iconUrl: 'jobC', count: 0, color: '#ed3f14' },\r\n        { title: '未完成平台', name: 'sumUndonePlatforms', iconUrl: 'unPlatformC', count: 0, color: '#E0E7FA' },\r\n        { title: '未完成应用', name: 'sumUndoneSystems', iconUrl: 'unSystemC', count: 0, color: '#D9F3E7' },\r\n        { title: '未完成作业', name: 'sumUndoneJobs', iconUrl: 'unJobC', count: 0, color: '#FCEBE3' }\r\n      ],\r\n      pieData: [\r\n        { value: 335, name: '直接访问' },\r\n        { value: 310, name: '邮件营销' },\r\n        { value: 234, name: '联盟广告' },\r\n        { value: 135, name: '视频广告' },\r\n        { value: 1548, name: '搜索引擎' }\r\n      ],\r\n      barData: {\r\n        Mon: 13253,\r\n        Tue: 34235,\r\n        Wed: 26321,\r\n        Thu: 12340,\r\n        Fri: 24643,\r\n        Sat: 1322,\r\n        Sun: 1324\r\n      },\r\n      showCarousel: false,\r\n      jobData: [],\r\n      dataMap: {},\r\n      myBarGraphOption: {},\r\n      majorNodeSetting: {\r\n        loop: false,\r\n        autoplay: false,\r\n        autoplaySpeed: 20000,\r\n        dots: 'none',\r\n        radiusDot: false,\r\n        trigger: 'click',\r\n        arrow: 'hover'\r\n      },\r\n      childNodeSetting: {\r\n        loop: false,\r\n        autoplay: false,\r\n        autoplaySpeed: 20000,\r\n        dots: 'none',\r\n        radiusDot: false,\r\n        trigger: 'click',\r\n        arrow: 'hover'\r\n      },\r\n      setting: {\r\n        loop: false,\r\n        autoplay: false,\r\n        autoplaySpeed: 20000,\r\n        dots: 'none',\r\n        radiusDot: false,\r\n        trigger: 'click',\r\n        arrow: 'hover'\r\n      },\r\n      clusterstats: {},\r\n      majorNodeList: [],\r\n      childNodeList: [],\r\n      platformList: [],\r\n      announcementList: [],\r\n      nodeList: [],\r\n      value1: 0,\r\n      value2: 0,\r\n      value3: 0,\r\n      value4: 0,\r\n      graph7: null,\r\n      graph8: null\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.setting = {\r\n        loop: true,\r\n        autoplay: true,\r\n        autoplaySpeed: 20000,\r\n        dots: 'none',\r\n        radiusDot: false,\r\n        trigger: 'click',\r\n        arrow: 'hover'\r\n      }\r\n      this.getPsjStats()\r\n      this.getClusterStats()\r\n      this.graph8 = this.$echarts.init(document.getElementById('main8'))\r\n      this.graph7 = this.$echarts.init(document.getElementById('main7'))\r\n    },\r\n    getBar () { // 各平台应用作业量\r\n      const sumAllPatformJobConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/sumAllPatformJob ',\r\n        params: {}\r\n      }\r\n      this.$ajax(sumAllPatformJobConfig).then(resp => {\r\n        if (resp.data) {\r\n          this.jobData = resp.data\r\n          let obj = {}\r\n          let xAxisArr = {}\r\n          for (let i = 1; i <= Math.ceil(this.jobData.length / 10 % 10); i++) {\r\n            let tmp = {}\r\n            tmp[i] = []\r\n            let xAxis = {}\r\n            xAxis[i] = []\r\n            let k = this.jobData.length <= 10 * i ? this.jobData.length : 10 * i\r\n            for (let j = (i - 1) * 10; j < k; j++) {\r\n              tmp[i][j] = {\r\n                name: this.jobData[j].platform,\r\n                value: this.jobData[j].num\r\n              }\r\n              xAxis[i][j] = this.jobData[j].platform\r\n            }\r\n            tmp[i] = tmp[i].filter(d => d)\r\n            Object.assign(obj, tmp)\r\n            xAxis[i] = xAxis[i].filter(d => d)\r\n            Object.assign(xAxisArr, xAxis)\r\n          }\r\n          this.dataMap.jobCount = obj\r\n          this.dataMap.count = Math.ceil(this.jobData.length / 10 % 10)\r\n          this.dataMap.xAxisArr = xAxisArr\r\n          let myBar = this.$echarts.init(document.getElementById('main6'))\r\n          myBar.setOption(this.myBarGraph(this.dataMap))\r\n        }\r\n      })\r\n    },\r\n    myBarGraph (dataMap) {\r\n      let yArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n      this.myBarGraphOption = {\r\n        baseOption: {\r\n          timeline: {\r\n            axisType: 'category',\r\n            autoPlay: true,\r\n            playInterval: 3000,\r\n            data: yArr.splice(0, dataMap.count),\r\n            label: {\r\n              formatter: function (s) {\r\n                return ''\r\n              }\r\n            },\r\n            lineStyle: { // 时间轴\r\n              show: true,\r\n              color: 'rgba(225,225,225,0)'\r\n            },\r\n            checkpointStyle: { // 时间轴上的点\r\n              symbol: 'circle',\r\n              color: '#316bf3',\r\n              borderColor: 'rgba(49,107,243,0.5)'\r\n            },\r\n            controlStyle: { // 控制\r\n              show: false,\r\n              color: '#343434',\r\n              borderColor: '#343434',\r\n              showPlayBtn: false // 播放按钮\r\n            },\r\n            emphasis: {\r\n              controlStyle: { // hover样式\r\n                color: 'rgba(225,225,225,0.8)',\r\n                borderColor: 'rgba(225,225,225,0.8)'\r\n              }\r\n            }\r\n          },\r\n          title: {\r\n            subtext: '' // 小标题,\r\n          },\r\n          tooltip: {\r\n\r\n          },\r\n          legend: {\r\n            left: 'right',\r\n            data: []\r\n          },\r\n          calculable: true,\r\n          grid: {\r\n            top: 50,\r\n            bottom: 80,\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'shadow',\r\n                label: {\r\n                  show: true,\r\n                  formatter: function (params) {\r\n                    return params.value.replace('\\n', '')\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          xAxis: [\r\n            {\r\n              'type': 'category',\r\n              'axisLabel': { 'interval': 0 },\r\n              splitLine: { show: false }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '作业数'\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '作业数',\r\n              type: 'bar',\r\n              color: '#3858F9',\r\n              barWidth: 30,\r\n              label: {\r\n                show: true,\r\n                position: 'top',\r\n                textStyle: {\r\n                  color: '#3858F9',\r\n                  fontSize: 12\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        options: [\r\n          {\r\n            xAxis: [\r\n              { data: dataMap.xAxisArr[1] }\r\n            ],\r\n            series: [\r\n              { data: dataMap.jobCount[1] }\r\n            ]\r\n          },\r\n          {\r\n            xAxis: [\r\n              { data: dataMap.xAxisArr[2] }\r\n            ],\r\n            series: [\r\n              { data: dataMap.jobCount[2] }\r\n            ]\r\n          },\r\n          {\r\n            xAxis: [\r\n              { data: dataMap.xAxisArr[3] }\r\n            ],\r\n            series: [\r\n              { data: dataMap.jobCount[3] }\r\n            ]\r\n          },\r\n          {\r\n            xAxis: [\r\n              { data: dataMap.xAxisArr[4] }\r\n            ],\r\n            series: [\r\n              { data: dataMap.jobCount[4] }\r\n            ]\r\n          },\r\n          {\r\n            xAxis: [\r\n              { data: dataMap.xAxisArr[5] }\r\n            ],\r\n            series: [\r\n              { data: dataMap.jobCount[5] }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n      return this.myBarGraphOption\r\n    },\r\n    changePlatform (param0, param1) {\r\n      let platform = this.platformList[param1].value\r\n      this.getPlatformconcData(platform) // 平台作业状态折线图\r\n    },\r\n    changeNode (param0, param1) {\r\n      let node = this.nodeList[param1]\r\n      this.getNodeData(node) // 节点作业状态折线图\r\n    },\r\n    // 查询节点名称数据\r\n    queryNodeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/ListAllWorker'\r\n      }\r\n      this.nodeList = []\r\n      this.haveNode = false\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.forEach(data => {\r\n          this.nodeList.push(data)\r\n        })\r\n        if (this.nodeList.length == 0) {\r\n          this.haveNode = true\r\n        }\r\n        this.getNodeData(this.nodeList[0])\r\n      })\r\n    },\r\n    queryPlatformList () {\r\n      this.platformList = []\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/ListAllPlatform',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200 && resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1\r\n            temp.value = data1\r\n            temp.label = data1\r\n            this.platformList.push(temp)\r\n          })\r\n          this.getPlatformconcData(this.platformList[0].value)\r\n        }\r\n      })\r\n    },\r\n    getNodeData (node) {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/serverJobStatus',\r\n        params: {\r\n          start: this.nodeStartTime,\r\n          node: node,\r\n          end: this.nodeEndTime\r\n        }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        let option = {\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['runningNum'],\r\n            top: '7%'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: resp.data.timeList\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          grid: {\r\n            x: 60,\r\n            y: 60,\r\n            x2: 60,\r\n            y2: 60\r\n          },\r\n          series: [{\r\n            data: resp.data.running,\r\n            type: 'line',\r\n            symbol: 'none',\r\n            lineStyle: {\r\n              color: '#3858F9'\r\n            },\r\n            areaStyle: {\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  { offset: 0, color: '#3858F9' },\r\n                  { offset: 1, color: 'white' }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n          ]\r\n        }\r\n        this.graph8.setOption(option, true)\r\n        this.graph8.resize()\r\n      })\r\n    },\r\n    getPlatformconcData (platform) {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/platformJobStatus',\r\n        params: {\r\n          start: this.platformStartTime,\r\n          platform: platform,\r\n          end: this.platformEndTime\r\n        }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        let option = {\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['runningNum', 'dispatcherNum', 'pendingNum'],\r\n            top: '7%',\r\n            x: '5%'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: resp.data['timeList']\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          grid: {\r\n            x: 60,\r\n            y: 60,\r\n            x2: 60,\r\n            y2: 60\r\n          },\r\n\r\n          series: [{\r\n            name: 'runningNum',\r\n            data: resp.data['running'],\r\n            type: 'line',\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '峰值:{value}' }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            name: 'dispatcherNum',\r\n            data: resp.data['dispatcher'],\r\n            type: 'line',\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '峰值:{value}' }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            name: 'pendingNum',\r\n            data: resp.data['pending'],\r\n            type: 'line',\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '峰值:{value}' }\r\n              ]\r\n            }\r\n          }]\r\n        }\r\n        this.graph7.setOption(option, true)\r\n        this.graph7.resize()\r\n      })\r\n    },\r\n    getPsjStats () {\r\n      const psjStatsConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/psjStats',\r\n        params: {}\r\n      }\r\n      this.$ajax(psjStatsConfig).then(resp => {\r\n        if (resp.data) {\r\n          let psjStatsKeys = Object.keys(resp.data)\r\n          let psjStatsValues = Object.values(resp.data)\r\n          for (let i = 0; i < this.inforCardData.length; i++) {\r\n            for (let j = 0; j < psjStatsKeys.length; j++) {\r\n              if (psjStatsKeys[j] === this.inforCardData[i].name) {\r\n                this.inforCardData[i].count = psjStatsValues[j]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getPercent (num, total) {\r\n      num = parseFloat(num)\r\n      total = parseFloat(total)\r\n      if (isNaN(num) || isNaN(total)) {\r\n        return '-'\r\n      }\r\n      return total <= 0 ? 0 : Math.round((num / total) * 10000) / 100.0\r\n    },\r\n    getClusterStats () {\r\n      this.clusterstats = {}\r\n      let workerDataList = []\r\n      let masterDataList = []\r\n      this.majorNodeList = []\r\n      this.childNodeList = []\r\n      const clusterStatsConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/clusterStats',\r\n        params: {}\r\n      }\r\n      this.$ajax(clusterStatsConfig).then(resp => {\r\n        if (resp.data) {\r\n          let data = resp.data\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (i === data.length - 1) {\r\n              this.clusterstats = JSON.parse(data[i].clusterstats)\r\n              this.clusterstats.serverPercent = this.getPercent(this.clusterstats.runservernum, this.clusterstats.allservernum)\r\n              this.clusterstats.cpuPercent = this.getPercent(this.clusterstats.usedclustercpu, this.clusterstats.allclustercpu)\r\n              this.clusterstats.memoryPercent = this.getPercent(this.clusterstats.usedclustermem, this.clusterstats.allclustermem)\r\n              this.clusterstats.usedclustermem = this.getTwoNumber(this.clusterstats.usedclustermem)\r\n              this.clusterstats.allservernum = this.getTwoNumber(this.clusterstats.allservernum)\r\n              this.clusterstats.usedclustercpu = this.getTwoNumber(this.clusterstats.usedclustercpu)\r\n              this.clusterstats.allclustercpu = this.getTwoNumber(this.clusterstats.allclustercpu)\r\n              this.clusterstats.usedclustermem = this.getTwoNumber(this.clusterstats.usedclustermem)\r\n              this.clusterstats.allclustermem = this.getTwoNumber(this.clusterstats.allclustermem)\r\n              break\r\n            }\r\n            if (data[i].type === 'Worker-Server') {\r\n              let worderData = data[i]\r\n              worderData.cpuPercent = this.getPercent(worderData.usedcpu, worderData.allcpu)\r\n              worderData.memoryPercent = this.getPercent(worderData.usedmem, worderData.allmem)\r\n\r\n              worderData.usedcpu = this.getTwoNumber(worderData.usedcpu)\r\n              worderData.allcpu = this.getTwoNumber(worderData.allcpu)\r\n\r\n              worderData.usedmem = this.getTwoNumber(worderData.usedmem)\r\n              worderData.allmem = this.getTwoNumber(worderData.allmem)\r\n              workerDataList.push(worderData)\r\n            }\r\n            if (data[i].type === 'Master-Server') {\r\n              let masterData = data[i]\r\n              masterData.cpuPercent = this.getPercent(masterData.usedcpu, masterData.allcpu)\r\n              masterData.memoryPercent = this.getPercent(masterData.usedmem, masterData.allmem)\r\n\r\n              masterData.usedcpu = this.getTwoNumber(masterData.usedcpu)\r\n              masterData.allcpu = this.getTwoNumber(masterData.allcpu)\r\n\r\n              masterData.usedmem = this.getTwoNumber(masterData.usedmem)\r\n              masterData.allmem = this.getTwoNumber(masterData.allmem)\r\n              masterDataList.push(masterData)\r\n            }\r\n          }\r\n          this.getMajorNodeList(masterDataList)\r\n          this.getChildNodeList(workerDataList)\r\n          this.showCarousel = true\r\n        }\r\n      })\r\n    },\r\n    getTwoNumber (num) {\r\n      var s = num + ''\r\n      if (s.indexOf('.')) {\r\n        var str = s.substring(0, s.indexOf('.') + 3)\r\n        return str\r\n      } else {\r\n        return str\r\n      }\r\n    },\r\n    getMajorNodeList (majorNodeData) {\r\n      for (let i = 0; i < majorNodeData.length; i = i + 2) {\r\n        let majorNode = []\r\n        majorNode.push(majorNodeData[i])\r\n        if (majorNodeData.length > i + 1) {\r\n          majorNode.push(majorNodeData[i + 1])\r\n        }\r\n        this.majorNodeList.push(majorNode)\r\n      }\r\n      console.log(this.majorNodeList)\r\n    },\r\n    getChildNodeList (childNodeData) {\r\n      for (let i = 0; i < childNodeData.length; i = i + 2) {\r\n        let childNode = []\r\n        childNode.push(childNodeData[i])\r\n        if (childNodeData.length > i + 1) {\r\n          childNode.push(childNodeData[i + 1])\r\n        }\r\n        this.childNodeList.push(childNode)\r\n      }\r\n    },\r\n    platformSearch (type) {\r\n      this.timeFormBean.show = true\r\n      this.timeFormBean.type = type\r\n      if (type === 'platform') {\r\n        this.timeFormBean.title = '平台作业时间筛选'\r\n        this.timeFormBean.startTime = this.platformStartTime\r\n        this.timeFormBean.endTime = this.platformEndTime\r\n      } else {\r\n        this.timeFormBean.title = '节点作业时间筛选'\r\n        this.timeFormBean.startTime = this.nodeStartTime\r\n        this.timeFormBean.endTime = this.nodeEndTime\r\n      }\r\n    },\r\n    timeSave () {\r\n      let starttime = this.timeFormBean.startTime\r\n      let endtime = this.timeFormBean.endTime\r\n      let t = (endtime - starttime) / (1000 * 3600)\r\n      if (starttime === '') {\r\n        this.$Message.warning('请输入开始时间')\r\n      } else if (endtime === '') {\r\n        this.$Message.warning('请输入结束时间')\r\n      } else if (starttime > endtime) {\r\n        this.$Message.warning('开始时间大于结束时间')\r\n      } else if (t > 3) {\r\n        this.$Message.warning('时间差值超过3小时')\r\n      } else {\r\n        this.timeFormBean.show = false\r\n        if (this.timeFormBean.type === 'platform') {\r\n          this.platformStartTime = utils.fmtDate(this.timeFormBean.startTime, 'yyyy-MM-dd hh:mm:ss')\r\n          this.platformEndTime = utils.fmtDate(this.timeFormBean.endTime, 'yyyy-MM-dd hh:mm:ss')\r\n          this.getPlatformconcData(this.platformList[this.value1].value) // 平台作业状态折线图\r\n        } else {\r\n          this.nodeStartTime = utils.fmtDate(this.timeFormBean.startTime, 'yyyy-MM-dd hh:mm:ss')\r\n          this.nodeEndTime = utils.fmtDate(this.timeFormBean.endTime, 'yyyy-MM-dd hh:mm:ss')\r\n          this.getNodeData(this.nodeList[this.value2])\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.count-style{\r\n  font-size: 32px;\r\n  color: #FFFFFF;\r\n}\r\n.count-style-black{\r\n  font-size: 32px;\r\n  color: #0B1131;\r\n}\r\n.carousel-title {\r\n  margin-left: 5%;\r\n  color:#516b91;\r\n  font-size:18px;\r\n  font-weight:600\r\n}\r\n.show-one {\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden\r\n}\r\n.circlr-dot {\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    vertical-align: middle;\r\n    margin-right: 4px;\r\n    display: inline-block\r\n}\r\n.circle-title {\r\n  font-size: 14px;\r\n  color: #000000;\r\n  font-weight: 400;\r\n}\r\n.circle-row {\r\n  background:#F8FAFD;\r\n  height:100px;\r\n  margin-top:10px\r\n}\r\n</style>\r\n"],"mappings":";;;;;AAgPA,OAAAA,KAAA;AACA,YAAAC,OAAA;AACA,OAAAC,SAAA;AACA,OAAAC,UAAA;AACA,OAAAC,OAAA;AACA,SAAAC,QAAA,EAAAC,QAAA;AACA,OAAAC,OAAA;AACA,IAAAC,aAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAP,UAAA,EAAAA,UAAA;IACAD,SAAA,EAAAA,SAAA;IACAE,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,OAAA,EAAAA;EACA;EACAI,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,SAAA;MACAC,UAAA;QACAF,KAAA,CAAAG,MAAA;QACAH,KAAA,CAAAI,aAAA;QACAJ,KAAA,CAAAK,iBAAA;MACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,iBAAA,EAAAnB,KAAA,CAAAoB,OAAA,KAAAC,IAAA,KAAAA,IAAA,GAAAC,OAAA;MACAC,eAAA,EAAAvB,KAAA,CAAAoB,OAAA,KAAAC,IAAA;MACAG,aAAA,EAAAxB,KAAA,CAAAoB,OAAA,KAAAC,IAAA,KAAAA,IAAA,GAAAC,OAAA;MACAG,WAAA,EAAAzB,KAAA,CAAAoB,OAAA,KAAAC,IAAA;MACAK,YAAA;MACAC,YAAA;QAAAC,IAAA;MAAA;MACAC,iBAAA;MACAC,QAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA;QAAAD,KAAA;QAAAC,KAAA;MAAA;MACAC,OAAA;MACAC,QAAA;MACAC,aAAA,GACA;QAAAC,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,KAAA;QAAA3B,IAAA;QAAA4B,OAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,OAAA,GACA;QAAAT,KAAA;QAAAtB,IAAA;MAAA,GACA;QAAAsB,KAAA;QAAAtB,IAAA;MAAA,GACA;QAAAsB,KAAA;QAAAtB,IAAA;MAAA,GACA;QAAAsB,KAAA;QAAAtB,IAAA;MAAA,GACA;QAAAsB,KAAA;QAAAtB,IAAA;MAAA,EACA;MACAgC,OAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,YAAA;MACAC,OAAA;MACAC,OAAA;MACAC,gBAAA;MACAC,gBAAA;QACAC,IAAA;QACAC,QAAA;QACAC,aAAA;QACAC,IAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,gBAAA;QACAP,IAAA;QACAC,QAAA;QACAC,aAAA;QACAC,IAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAE,OAAA;QACAR,IAAA;QACAC,QAAA;QACAC,aAAA;QACAC,IAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAG,YAAA;MACAC,aAAA;MACAC,aAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,QAAA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA,WAAAA,KAAA;MACA,KAAAd,OAAA;QACAR,IAAA;QACAC,QAAA;QACAC,aAAA;QACAC,IAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACA,KAAAiB,WAAA;MACA,KAAAC,eAAA;MACA,KAAAJ,MAAA,QAAAK,QAAA,CAAAH,IAAA,CAAAI,QAAA,CAAAC,cAAA;MACA,KAAAR,MAAA,QAAAM,QAAA,CAAAH,IAAA,CAAAI,QAAA,CAAAC,cAAA;IACA;IACAlE,MAAA,WAAAA,OAAA;MAAA,IAAAmE,MAAA;MAAA;MACA,IAAAC,sBAAA;QACAC,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;MACA;MACA,KAAAC,KAAA,CAAAJ,sBAAA,EAAAK,IAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAvE,IAAA;UACAgE,MAAA,CAAAhC,OAAA,GAAAuC,IAAA,CAAAvE,IAAA;UACA,IAAAwE,GAAA;UACA,IAAAC,QAAA;UACA,SAAAC,CAAA,MAAAA,CAAA,IAAAC,IAAA,CAAAC,IAAA,CAAAZ,MAAA,CAAAhC,OAAA,CAAA6C,MAAA,aAAAH,CAAA;YACA,IAAAI,GAAA;YACAA,GAAA,CAAAJ,CAAA;YACA,IAAAK,KAAA;YACAA,KAAA,CAAAL,CAAA;YACA,IAAAM,CAAA,GAAAhB,MAAA,CAAAhC,OAAA,CAAA6C,MAAA,SAAAH,CAAA,GAAAV,MAAA,CAAAhC,OAAA,CAAA6C,MAAA,QAAAH,CAAA;YACA,SAAAO,CAAA,IAAAP,CAAA,YAAAO,CAAA,GAAAD,CAAA,EAAAC,CAAA;cACAH,GAAA,CAAAJ,CAAA,EAAAO,CAAA;gBACA1F,IAAA,EAAAyE,MAAA,CAAAhC,OAAA,CAAAiD,CAAA,EAAAC,QAAA;gBACArE,KAAA,EAAAmD,MAAA,CAAAhC,OAAA,CAAAiD,CAAA,EAAAE;cACA;cACAJ,KAAA,CAAAL,CAAA,EAAAO,CAAA,IAAAjB,MAAA,CAAAhC,OAAA,CAAAiD,CAAA,EAAAC,QAAA;YACA;YACAJ,GAAA,CAAAJ,CAAA,IAAAI,GAAA,CAAAJ,CAAA,EAAAU,MAAA,WAAAC,CAAA;cAAA,OAAAA,CAAA;YAAA;YACAC,MAAA,CAAAC,MAAA,CAAAf,GAAA,EAAAM,GAAA;YACAC,KAAA,CAAAL,CAAA,IAAAK,KAAA,CAAAL,CAAA,EAAAU,MAAA,WAAAC,CAAA;cAAA,OAAAA,CAAA;YAAA;YACAC,MAAA,CAAAC,MAAA,CAAAd,QAAA,EAAAM,KAAA;UACA;UACAf,MAAA,CAAA/B,OAAA,CAAAuD,QAAA,GAAAhB,GAAA;UACAR,MAAA,CAAA/B,OAAA,CAAAb,KAAA,GAAAuD,IAAA,CAAAC,IAAA,CAAAZ,MAAA,CAAAhC,OAAA,CAAA6C,MAAA;UACAb,MAAA,CAAA/B,OAAA,CAAAwC,QAAA,GAAAA,QAAA;UACA,IAAAgB,KAAA,GAAAzB,MAAA,CAAAH,QAAA,CAAAH,IAAA,CAAAI,QAAA,CAAAC,cAAA;UACA0B,KAAA,CAAAC,SAAA,CAAA1B,MAAA,CAAA2B,UAAA,CAAA3B,MAAA,CAAA/B,OAAA;QACA;MACA;IACA;IACA0D,UAAA,WAAAA,WAAA1D,OAAA;MACA,IAAA2D,IAAA;MACA,KAAA1D,gBAAA;QACA2D,UAAA;UACAC,QAAA;YACAC,QAAA;YACAC,QAAA;YACAC,YAAA;YACAjG,IAAA,EAAA4F,IAAA,CAAAM,MAAA,IAAAjE,OAAA,CAAAb,KAAA;YACAN,KAAA;cACAqF,SAAA,WAAAA,UAAAC,CAAA;gBACA;cACA;YACA;YACAC,SAAA;cAAA;cACA3F,IAAA;cACAW,KAAA;YACA;YACAiF,eAAA;cAAA;cACAC,MAAA;cACAlF,KAAA;cACAmF,WAAA;YACA;YACAC,YAAA;cAAA;cACA/F,IAAA;cACAW,KAAA;cACAmF,WAAA;cACAE,WAAA;YACA;;YACAC,QAAA;cACAF,YAAA;gBAAA;gBACApF,KAAA;gBACAmF,WAAA;cACA;YACA;UACA;UACAtF,KAAA;YACA0F,OAAA;UACA;;UACAC,OAAA,GAEA;UACAC,MAAA;YACAC,IAAA;YACA/G,IAAA;UACA;UACAgH,UAAA;UACAC,IAAA;YACAC,GAAA;YACAC,MAAA;YACAN,OAAA;cACApE,OAAA;cACA2E,WAAA;gBACAC,IAAA;gBACAvG,KAAA;kBACAJ,IAAA;kBACAyF,SAAA,WAAAA,UAAA/B,MAAA;oBACA,OAAAA,MAAA,CAAAvD,KAAA,CAAAyG,OAAA;kBACA;gBACA;cACA;YACA;UACA;UACAvC,KAAA,GACA;YACA;YACA;cAAA;YAAA;YACAwC,SAAA;cAAA7G,IAAA;YAAA;UACA,EACA;UACA8G,KAAA,GACA;YACAH,IAAA;YACA9H,IAAA;UACA,EACA;UACAkI,MAAA,GACA;YACAlI,IAAA;YACA8H,IAAA;YACAhG,KAAA;YACAqG,QAAA;YACA5G,KAAA;cACAJ,IAAA;cACAiH,QAAA;cACAC,SAAA;gBACAvG,KAAA;gBACAwG,QAAA;cACA;YACA;UACA;QAEA;QACAC,OAAA,GACA;UACA/C,KAAA,GACA;YAAA/E,IAAA,EAAAiC,OAAA,CAAAwC,QAAA;UAAA,EACA;UACAgD,MAAA,GACA;YAAAzH,IAAA,EAAAiC,OAAA,CAAAuD,QAAA;UAAA;QAEA,GACA;UACAT,KAAA,GACA;YAAA/E,IAAA,EAAAiC,OAAA,CAAAwC,QAAA;UAAA,EACA;UACAgD,MAAA,GACA;YAAAzH,IAAA,EAAAiC,OAAA,CAAAuD,QAAA;UAAA;QAEA,GACA;UACAT,KAAA,GACA;YAAA/E,IAAA,EAAAiC,OAAA,CAAAwC,QAAA;UAAA,EACA;UACAgD,MAAA,GACA;YAAAzH,IAAA,EAAAiC,OAAA,CAAAuD,QAAA;UAAA;QAEA,GACA;UACAT,KAAA,GACA;YAAA/E,IAAA,EAAAiC,OAAA,CAAAwC,QAAA;UAAA,EACA;UACAgD,MAAA,GACA;YAAAzH,IAAA,EAAAiC,OAAA,CAAAuD,QAAA;UAAA;QAEA,GACA;UACAT,KAAA,GACA;YAAA/E,IAAA,EAAAiC,OAAA,CAAAwC,QAAA;UAAA,EACA;UACAgD,MAAA,GACA;YAAAzH,IAAA,EAAAiC,OAAA,CAAAuD,QAAA;UAAA;QAEA;MAEA;MACA,YAAAtD,gBAAA;IACA;IACA6F,cAAA,WAAAA,eAAAC,MAAA,EAAAC,MAAA;MACA,IAAA/C,QAAA,QAAAlC,YAAA,CAAAiF,MAAA,EAAApH,KAAA;MACA,KAAAqH,mBAAA,CAAAhD,QAAA;IACA;IACAiD,UAAA,WAAAA,WAAAH,MAAA,EAAAC,MAAA;MACA,IAAAG,IAAA,QAAAlF,QAAA,CAAA+E,MAAA;MACA,KAAAI,WAAA,CAAAD,IAAA;IACA;IACA;IACAtI,aAAA,WAAAA,cAAA;MAAA,IAAAwI,MAAA;MACA,IAAAC,UAAA;QACArE,MAAA;QACAC,GAAA,EAAA7E,aAAA;MACA;MACA,KAAA4D,QAAA;MACA,KAAAlC,QAAA;MACA,KAAAqD,KAAA,CAAAkE,UAAA,EAAAjE,IAAA,WAAAC,IAAA;QACAA,IAAA,CAAAvE,IAAA,CAAAwI,OAAA,WAAAxI,IAAA;UACAsI,MAAA,CAAApF,QAAA,CAAAuF,IAAA,CAAAzI,IAAA;QACA;QACA,IAAAsI,MAAA,CAAApF,QAAA,CAAA2B,MAAA;UACAyD,MAAA,CAAAtH,QAAA;QACA;QACAsH,MAAA,CAAAD,WAAA,CAAAC,MAAA,CAAApF,QAAA;MACA;IACA;IACAnD,iBAAA,WAAAA,kBAAA;MAAA,IAAA2I,MAAA;MACA,KAAA1F,YAAA;MACA,IAAAuF,UAAA;QACArE,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;MACA;MACA,KAAAC,KAAA,CAAAkE,UAAA,EAAAjE,IAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAoE,MAAA,IAAApE,IAAA,CAAAoE,MAAA,YAAApE,IAAA,CAAAvE,IAAA;UACAuE,IAAA,CAAAvE,IAAA,CAAAwI,OAAA,WAAAI,KAAA;YACA,IAAAC,IAAA;YACAA,IAAA,CAAAC,GAAA,GAAAF,KAAA;YACAC,IAAA,CAAAhI,KAAA,GAAA+H,KAAA;YACAC,IAAA,CAAA/H,KAAA,GAAA8H,KAAA;YACAF,MAAA,CAAA1F,YAAA,CAAAyF,IAAA,CAAAI,IAAA;UACA;UACAH,MAAA,CAAAR,mBAAA,CAAAQ,MAAA,CAAA1F,YAAA,IAAAnC,KAAA;QACA;MACA;IACA;IACAwH,WAAA,WAAAA,YAAAD,IAAA;MAAA,IAAAW,MAAA;MACA,IAAAR,UAAA;QACArE,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;UACA4E,KAAA,OAAA1I,aAAA;UACA8H,IAAA,EAAAA,IAAA;UACAa,GAAA,OAAA1I;QACA;MACA;MACA,KAAA8D,KAAA,CAAAkE,UAAA,EAAAjE,IAAA,WAAAC,IAAA;QACA,IAAA2E,MAAA;UACArC,OAAA;YACApE,OAAA;UACA;UACAqE,MAAA;YACA9G,IAAA;YACAkH,GAAA;UACA;UACAnC,KAAA;YACAsC,IAAA;YACArH,IAAA,EAAAuE,IAAA,CAAAvE,IAAA,CAAAY;UACA;UACA4G,KAAA;YACAH,IAAA;UACA;UACAJ,IAAA;YACAkC,CAAA;YACAC,CAAA;YACAC,EAAA;YACAC,EAAA;UACA;UACA7B,MAAA;YACAzH,IAAA,EAAAuE,IAAA,CAAAvE,IAAA,CAAAuJ,OAAA;YACAlC,IAAA;YACAd,MAAA;YACAF,SAAA;cACAhF,KAAA;YACA;YACAmI,SAAA;cACAnI,KAAA;gBACAgG,IAAA;gBACA8B,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAG,UAAA,GACA;kBAAAC,MAAA;kBAAArI,KAAA;gBAAA,GACA;kBAAAqI,MAAA;kBAAArI,KAAA;gBAAA;cAEA;YACA;UACA;QAEA;QACA0H,MAAA,CAAAvF,MAAA,CAAAkC,SAAA,CAAAwD,MAAA;QACAH,MAAA,CAAAvF,MAAA,CAAAmG,MAAA;MACA;IACA;IACAzB,mBAAA,WAAAA,oBAAAhD,QAAA;MAAA,IAAA0E,MAAA;MACA,IAAArB,UAAA;QACArE,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;UACA4E,KAAA,OAAA/I,iBAAA;UACAiF,QAAA,EAAAA,QAAA;UACA+D,GAAA,OAAA5I;QACA;MACA;MACA,KAAAgE,KAAA,CAAAkE,UAAA,EAAAjE,IAAA,WAAAC,IAAA;QACA,IAAA2E,MAAA;UACArC,OAAA;YACApE,OAAA;UACA;UACAqE,MAAA;YACA9G,IAAA;YACAkH,GAAA;YACAiC,CAAA;UACA;UACApE,KAAA;YACAsC,IAAA;YACArH,IAAA,EAAAuE,IAAA,CAAAvE,IAAA;UACA;UACAwH,KAAA;YACAH,IAAA;YACAwC,SAAA;cACA1D,SAAA;YACA;UACA;UACAc,IAAA;YACAkC,CAAA;YACAC,CAAA;YACAC,EAAA;YACAC,EAAA;UACA;UAEA7B,MAAA;YACAlI,IAAA;YACAS,IAAA,EAAAuE,IAAA,CAAAvE,IAAA;YACAqH,IAAA;YACAyC,SAAA;cACA9J,IAAA,GACA;gBAAAqH,IAAA;gBAAA9H,IAAA;cAAA;YAEA;UACA,GACA;YACAA,IAAA;YACAS,IAAA,EAAAuE,IAAA,CAAAvE,IAAA;YACAqH,IAAA;YACAyC,SAAA;cACA9J,IAAA,GACA;gBAAAqH,IAAA;gBAAA9H,IAAA;cAAA;YAEA;UACA,GACA;YACAA,IAAA;YACAS,IAAA,EAAAuE,IAAA,CAAAvE,IAAA;YACAqH,IAAA;YACAyC,SAAA;cACA9J,IAAA,GACA;gBAAAqH,IAAA;gBAAA9H,IAAA;cAAA;YAEA;UACA;QACA;QACAqK,MAAA,CAAArG,MAAA,CAAAmC,SAAA,CAAAwD,MAAA;QACAU,MAAA,CAAArG,MAAA,CAAAoG,MAAA;MACA;IACA;IACAhG,WAAA,WAAAA,YAAA;MAAA,IAAAoG,MAAA;MACA,IAAAC,cAAA;QACA9F,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;MACA;MACA,KAAAC,KAAA,CAAA2F,cAAA,EAAA1F,IAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAvE,IAAA;UACA,IAAAiK,YAAA,GAAA3E,MAAA,CAAA4E,IAAA,CAAA3F,IAAA,CAAAvE,IAAA;UACA,IAAAmK,cAAA,GAAA7E,MAAA,CAAA8E,MAAA,CAAA7F,IAAA,CAAAvE,IAAA;UACA,SAAA0E,CAAA,MAAAA,CAAA,GAAAqF,MAAA,CAAA9I,aAAA,CAAA4D,MAAA,EAAAH,CAAA;YACA,SAAAO,CAAA,MAAAA,CAAA,GAAAgF,YAAA,CAAApF,MAAA,EAAAI,CAAA;cACA,IAAAgF,YAAA,CAAAhF,CAAA,MAAA8E,MAAA,CAAA9I,aAAA,CAAAyD,CAAA,EAAAnF,IAAA;gBACAwK,MAAA,CAAA9I,aAAA,CAAAyD,CAAA,EAAAtD,KAAA,GAAA+I,cAAA,CAAAlF,CAAA;cACA;YACA;UACA;QACA;MACA;IACA;IACAoF,UAAA,WAAAA,WAAAlF,GAAA,EAAAmF,KAAA;MACAnF,GAAA,GAAAoF,UAAA,CAAApF,GAAA;MACAmF,KAAA,GAAAC,UAAA,CAAAD,KAAA;MACA,IAAAE,KAAA,CAAArF,GAAA,KAAAqF,KAAA,CAAAF,KAAA;QACA;MACA;MACA,OAAAA,KAAA,YAAA3F,IAAA,CAAA8F,KAAA,CAAAtF,GAAA,GAAAmF,KAAA;IACA;IACA1G,eAAA,WAAAA,gBAAA;MAAA,IAAA8G,MAAA;MACA,KAAA7H,YAAA;MACA,IAAA8H,cAAA;MACA,IAAAC,cAAA;MACA,KAAA9H,aAAA;MACA,KAAAC,aAAA;MACA,IAAA8H,kBAAA;QACA3G,MAAA;QACAC,GAAA,EAAA7E,aAAA;QACA8E,MAAA;MACA;MACA,KAAAC,KAAA,CAAAwG,kBAAA,EAAAvG,IAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAvE,IAAA;UACA,IAAAA,IAAA,GAAAuE,IAAA,CAAAvE,IAAA;UACA,SAAA0E,CAAA,MAAAA,CAAA,GAAA1E,IAAA,CAAA6E,MAAA,EAAAH,CAAA;YACA,IAAAA,CAAA,KAAA1E,IAAA,CAAA6E,MAAA;cACA6F,MAAA,CAAA7H,YAAA,GAAAiI,IAAA,CAAAC,KAAA,CAAA/K,IAAA,CAAA0E,CAAA,EAAA7B,YAAA;cACA6H,MAAA,CAAA7H,YAAA,CAAAmI,aAAA,GAAAN,MAAA,CAAAL,UAAA,CAAAK,MAAA,CAAA7H,YAAA,CAAAoI,YAAA,EAAAP,MAAA,CAAA7H,YAAA,CAAAqI,YAAA;cACAR,MAAA,CAAA7H,YAAA,CAAAsI,UAAA,GAAAT,MAAA,CAAAL,UAAA,CAAAK,MAAA,CAAA7H,YAAA,CAAAuI,cAAA,EAAAV,MAAA,CAAA7H,YAAA,CAAAwI,aAAA;cACAX,MAAA,CAAA7H,YAAA,CAAAyI,aAAA,GAAAZ,MAAA,CAAAL,UAAA,CAAAK,MAAA,CAAA7H,YAAA,CAAA0I,cAAA,EAAAb,MAAA,CAAA7H,YAAA,CAAA2I,aAAA;cACAd,MAAA,CAAA7H,YAAA,CAAA0I,cAAA,GAAAb,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAA0I,cAAA;cACAb,MAAA,CAAA7H,YAAA,CAAAqI,YAAA,GAAAR,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAAqI,YAAA;cACAR,MAAA,CAAA7H,YAAA,CAAAuI,cAAA,GAAAV,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAAuI,cAAA;cACAV,MAAA,CAAA7H,YAAA,CAAAwI,aAAA,GAAAX,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAAwI,aAAA;cACAX,MAAA,CAAA7H,YAAA,CAAA0I,cAAA,GAAAb,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAA0I,cAAA;cACAb,MAAA,CAAA7H,YAAA,CAAA2I,aAAA,GAAAd,MAAA,CAAAe,YAAA,CAAAf,MAAA,CAAA7H,YAAA,CAAA2I,aAAA;cACA;YACA;YACA,IAAAxL,IAAA,CAAA0E,CAAA,EAAA2C,IAAA;cACA,IAAAqE,UAAA,GAAA1L,IAAA,CAAA0E,CAAA;cACAgH,UAAA,CAAAP,UAAA,GAAAT,MAAA,CAAAL,UAAA,CAAAqB,UAAA,CAAAC,OAAA,EAAAD,UAAA,CAAAE,MAAA;cACAF,UAAA,CAAAJ,aAAA,GAAAZ,MAAA,CAAAL,UAAA,CAAAqB,UAAA,CAAAG,OAAA,EAAAH,UAAA,CAAAI,MAAA;cAEAJ,UAAA,CAAAC,OAAA,GAAAjB,MAAA,CAAAe,YAAA,CAAAC,UAAA,CAAAC,OAAA;cACAD,UAAA,CAAAE,MAAA,GAAAlB,MAAA,CAAAe,YAAA,CAAAC,UAAA,CAAAE,MAAA;cAEAF,UAAA,CAAAG,OAAA,GAAAnB,MAAA,CAAAe,YAAA,CAAAC,UAAA,CAAAG,OAAA;cACAH,UAAA,CAAAI,MAAA,GAAApB,MAAA,CAAAe,YAAA,CAAAC,UAAA,CAAAI,MAAA;cACAnB,cAAA,CAAAlC,IAAA,CAAAiD,UAAA;YACA;YACA,IAAA1L,IAAA,CAAA0E,CAAA,EAAA2C,IAAA;cACA,IAAA0E,UAAA,GAAA/L,IAAA,CAAA0E,CAAA;cACAqH,UAAA,CAAAZ,UAAA,GAAAT,MAAA,CAAAL,UAAA,CAAA0B,UAAA,CAAAJ,OAAA,EAAAI,UAAA,CAAAH,MAAA;cACAG,UAAA,CAAAT,aAAA,GAAAZ,MAAA,CAAAL,UAAA,CAAA0B,UAAA,CAAAF,OAAA,EAAAE,UAAA,CAAAD,MAAA;cAEAC,UAAA,CAAAJ,OAAA,GAAAjB,MAAA,CAAAe,YAAA,CAAAM,UAAA,CAAAJ,OAAA;cACAI,UAAA,CAAAH,MAAA,GAAAlB,MAAA,CAAAe,YAAA,CAAAM,UAAA,CAAAH,MAAA;cAEAG,UAAA,CAAAF,OAAA,GAAAnB,MAAA,CAAAe,YAAA,CAAAM,UAAA,CAAAF,OAAA;cACAE,UAAA,CAAAD,MAAA,GAAApB,MAAA,CAAAe,YAAA,CAAAM,UAAA,CAAAD,MAAA;cACAlB,cAAA,CAAAnC,IAAA,CAAAsD,UAAA;YACA;UACA;UACArB,MAAA,CAAAsB,gBAAA,CAAApB,cAAA;UACAF,MAAA,CAAAuB,gBAAA,CAAAtB,cAAA;UACAD,MAAA,CAAA3I,YAAA;QACA;MACA;IACA;IACA0J,YAAA,WAAAA,aAAAtG,GAAA;MACA,IAAAiB,CAAA,GAAAjB,GAAA;MACA,IAAAiB,CAAA,CAAA8F,OAAA;QACA,IAAAC,GAAA,GAAA/F,CAAA,CAAAgG,SAAA,IAAAhG,CAAA,CAAA8F,OAAA;QACA,OAAAC,GAAA;MACA;QACA,OAAAA,GAAA;MACA;IACA;IACAH,gBAAA,WAAAA,iBAAAK,aAAA;MACA,SAAA3H,CAAA,MAAAA,CAAA,GAAA2H,aAAA,CAAAxH,MAAA,EAAAH,CAAA,GAAAA,CAAA;QACA,IAAA4H,SAAA;QACAA,SAAA,CAAA7D,IAAA,CAAA4D,aAAA,CAAA3H,CAAA;QACA,IAAA2H,aAAA,CAAAxH,MAAA,GAAAH,CAAA;UACA4H,SAAA,CAAA7D,IAAA,CAAA4D,aAAA,CAAA3H,CAAA;QACA;QACA,KAAA5B,aAAA,CAAA2F,IAAA,CAAA6D,SAAA;MACA;MACAC,OAAA,CAAAC,GAAA,MAAA1J,aAAA;IACA;IACAmJ,gBAAA,WAAAA,iBAAAQ,aAAA;MACA,SAAA/H,CAAA,MAAAA,CAAA,GAAA+H,aAAA,CAAA5H,MAAA,EAAAH,CAAA,GAAAA,CAAA;QACA,IAAAgI,SAAA;QACAA,SAAA,CAAAjE,IAAA,CAAAgE,aAAA,CAAA/H,CAAA;QACA,IAAA+H,aAAA,CAAA5H,MAAA,GAAAH,CAAA;UACAgI,SAAA,CAAAjE,IAAA,CAAAgE,aAAA,CAAA/H,CAAA;QACA;QACA,KAAA3B,aAAA,CAAA0F,IAAA,CAAAiE,SAAA;MACA;IACA;IACAC,cAAA,WAAAA,eAAAtF,IAAA;MACA,KAAA5G,YAAA,CAAAC,IAAA;MACA,KAAAD,YAAA,CAAA4G,IAAA,GAAAA,IAAA;MACA,IAAAA,IAAA;QACA,KAAA5G,YAAA,CAAAS,KAAA;QACA,KAAAT,YAAA,CAAAmM,SAAA,QAAA3M,iBAAA;QACA,KAAAQ,YAAA,CAAAoM,OAAA,QAAAxM,eAAA;MACA;QACA,KAAAI,YAAA,CAAAS,KAAA;QACA,KAAAT,YAAA,CAAAmM,SAAA,QAAAtM,aAAA;QACA,KAAAG,YAAA,CAAAoM,OAAA,QAAAtM,WAAA;MACA;IACA;IACAuM,QAAA,WAAAA,SAAA;MACA,IAAAC,SAAA,QAAAtM,YAAA,CAAAmM,SAAA;MACA,IAAAI,OAAA,QAAAvM,YAAA,CAAAoM,OAAA;MACA,IAAAI,CAAA,IAAAD,OAAA,GAAAD,SAAA;MACA,IAAAA,SAAA;QACA,KAAAG,QAAA,CAAAC,OAAA;MACA,WAAAH,OAAA;QACA,KAAAE,QAAA,CAAAC,OAAA;MACA,WAAAJ,SAAA,GAAAC,OAAA;QACA,KAAAE,QAAA,CAAAC,OAAA;MACA,WAAAF,CAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;MACA;QACA,KAAA1M,YAAA,CAAAC,IAAA;QACA,SAAAD,YAAA,CAAA4G,IAAA;UACA,KAAApH,iBAAA,GAAAnB,KAAA,CAAAoB,OAAA,MAAAO,YAAA,CAAAmM,SAAA;UACA,KAAAvM,eAAA,GAAAvB,KAAA,CAAAoB,OAAA,MAAAO,YAAA,CAAAoM,OAAA;UACA,KAAA3E,mBAAA,MAAAlF,YAAA,MAAAG,MAAA,EAAAtC,KAAA;QACA;UACA,KAAAP,aAAA,GAAAxB,KAAA,CAAAoB,OAAA,MAAAO,YAAA,CAAAmM,SAAA;UACA,KAAArM,WAAA,GAAAzB,KAAA,CAAAoB,OAAA,MAAAO,YAAA,CAAAoM,OAAA;UACA,KAAAxE,WAAA,MAAAnF,QAAA,MAAAE,MAAA;QACA;MACA;IACA;EACA;EACAgK,OAAA,WAAAA,QAAA;IACA,KAAA1J,IAAA;EACA;AAEA"}]}