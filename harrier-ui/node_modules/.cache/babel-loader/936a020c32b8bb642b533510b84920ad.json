{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Table.vue","mtime":1681468306539},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.split\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nimport store from '@/store/index';\nimport common from '@/mixins/common';\nimport { Circle } from 'iview';\nimport SAuthButton from '_c/s-auth-button';\nvar platforms = store.getters.getPlatforms;\nvar RESOURCE_PATH = '/udsJob';\nexport default {\n  components: {\n    SAuthButton: SAuthButton\n  },\n  mixins: [common],\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    var validatePlatform = function validatePlatform(rule, value, callback) {\n      if (!_this.formBean.platform) {\n        callback(new Error('请输入数据！'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      jobDetailBean: {},\n      jobDrawer: {\n        show: false\n      },\n      upAndDownstream: {\n        show: false\n      },\n      upstreamData: [],\n      downstreamData: [],\n      serverData: [],\n      forceStartFormBean: {},\n      loadingBatchFC: false,\n      ctrlloadingBatchFCDisable: true,\n      loadingBatchA: false,\n      ctrlloadingBatchADisable: true,\n      jobtypeList: {\n        'D': '日',\n        'C': '定时',\n        'W': '周',\n        'M': '月'\n      },\n      streamTypeList: {},\n      dbControlList: {},\n      loadingvitual: false,\n      loadingdisable: false,\n      res: {\n        isAgree: true\n      },\n      confirm: {\n        show: false,\n        job: '',\n        row: null\n      },\n      confirmDisable: {\n        show: false,\n        row: {}\n      },\n      confirmVi: {\n        show: false,\n        row: {}\n      },\n      confirmBatchActive: {\n        show: false,\n        isAgree: false\n      },\n      confirmBatchForceStart: {\n        show: false,\n        isAgree: false\n      },\n      platformData: [],\n      dropdownItems: [{\n        val: 'invoke'\n      }, {\n        val: '补数'\n      }, {\n        val: '置虚或实'\n      }, {\n        val: '启用禁用'\n      }, {\n        val: 'kill作业'\n      }],\n      //, {val: '查看脚本'}\n      systemData: [],\n      jobstatusData: [],\n      formBean: {},\n      udsJobStyle: {\n        status: 'black'\n      },\n      request: {\n        batchActive: {\n          method: 'POST',\n          url: '/udsjob/batchActive'\n        },\n        batchForceStart: {\n          method: 'POST',\n          url: '/udsjob/batchForceStart'\n        },\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      gridColumns: [{\n        type: 'selection',\n        width: 36,\n        align: 'center'\n        // fixed: 'left'\n      }, {\n        title: '平台名',\n        ellipsis: true,\n        width: 90,\n        sortable: true,\n        key: 'platform'\n      }, {\n        title: '应用名',\n        ellipsis: true,\n        align: 'left',\n        width: 90,\n        sortable: true,\n        className: 'uds-job-column',\n        key: 'systems'\n      }, {\n        title: '作业名',\n        key: 'job',\n        ellipsis: false,\n        // tooltip: true,\n        sortable: true,\n        minWidth: 150,\n        className: 'uds-job-column',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n              color: row.enable ? '' : 'red'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, row.job)]);\n        }\n      }, {\n        title: '执行节点',\n        ellipsis: false,\n        tooltip: true,\n        minWidth: 110,\n        maxWidth: 130,\n        sortable: true,\n        key: 'serverName',\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.serverName ? row.serverName : '')]);\n        }\n      }, {\n        title: '类型',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 70,\n        maxWidth: 80,\n        // align: 'center',\n        sortable: true,\n        key: 'jobType',\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginLeft: '5px',\n              color: '#3399ff'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (row.jobType == 'M' || row.jobType == 'W') {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'frequency',\n                    jobData: row\n                  }, _this.getPageParam()));\n                } else if (row.jobType == 'C') {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'trigger',\n                    jobData: row\n                  }, _this.getPageParam()));\n                } else {\n                  _this.$Message.warning('日作业不存在定时或频度信息。');\n                }\n              }\n            }\n          }, _this.jobtypeList[row.jobType])]);\n        }\n      }, {\n        title: '状态',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 80,\n        maxWidth: 100,\n        sortable: true,\n        key: 'lastStatus'\n      }, {\n        title: '开始时间',\n        ellipsis: false,\n        tooltip: false,\n        width: 170,\n        sortable: true,\n        key: 'startTime'\n        /* render: (h, {column, index, row}) => {\r\n          let startArr = ['', '']\r\n          if (row.startTime) {\r\n            startArr = row.startTime.split(' ')\r\n          }\r\n          return h('div', [\r\n            h('div', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              }\r\n            }, startArr[0]),\r\n            h('div', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              }\r\n            }, startArr[1])])\r\n        } */\n      }, {\n        title: '结束时间',\n        ellipsis: false,\n        tooltip: false,\n        width: 170,\n        sortable: true,\n        key: 'endTime',\n        render: function render(h, _ref4) {\n          var column = _ref4.column,\n            index = _ref4.index,\n            row = _ref4.row;\n          var endArr = ['', ''];\n          if (row.endTime) {\n            endArr = row.endTime.split(' ');\n          }\n          return h('div', [h('div', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.lastStatus === 'Running' ? '' : row.endTime)]);\n        }\n      },\n      /* render: (h, {column, index, row}) => {\r\n          let endArr = ['', '']\r\n          if (row.endTime) {\r\n            endArr = row.endTime.split(' ')\r\n          }\r\n          return h('div', [\r\n            h('div', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              }\r\n            }, row.lastStatus === 'Running' ? '' : endArr[0]),\r\n            h('div', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              }\r\n            }, row.lastStatus === 'Running' ? '' : endArr[1])])\r\n        }\r\n      }, */\n      {\n        title: 'TXDate',\n        ellipsis: false,\n        tooltip: true,\n        width: 100,\n        sortable: true,\n        key: 'jobDate',\n        render: function render(h, _ref5) {\n          var column = _ref5.column,\n            index = _ref5.index,\n            row = _ref5.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.jobDate.substring(0, 10))]);\n        }\n      }, {\n        title: '虚作业',\n        ellipsis: false,\n        tooltip: false,\n        align: 'center',\n        width: 70,\n        key: 'virtualEnable',\n        render: function render(h, _ref6) {\n          var column = _ref6.column,\n            index = _ref6.index,\n            row = _ref6.row;\n          var enableStatus = row.virtualEnable == 1 ? '是' : '否';\n          var colors = row.virtualEnable == 1 ? 'red' : 'green';\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px',\n              color: colors\n            }\n          }, enableStatus)]);\n        }\n      }, {\n        title: '上下游',\n        width: 60,\n        align: 'center',\n        render: function render(h, _ref7) {\n          var column = _ref7.column,\n            index = _ref7.index,\n            row = _ref7.row;\n          return h('div', [h('Button', {\n            props: {\n              // icon: 'shuffle'\n              icon: 'md-swap'\n            },\n            style: {\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              backgroundColor: 'transparent'\n            },\n            on: {\n              click: function click() {\n                _this.upAndDownstream.show = true;\n                _this.getUpstreamData(row.job, null, row);\n                _this.getDownstreamData(row.job, null, row);\n              }\n            }\n          }, '')]);\n        }\n      }, {\n        title: '依赖',\n        width: 50,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref8) {\n          var column = _ref8.column,\n            index = _ref8.index,\n            row = _ref8.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-arrow-back'\n            },\n            style: {\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              backgroundColor: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    jobData: row,\n                    statusName: 'dep',\n                    curTab: 'Table'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobData: row,\n                    statusName: 'dep',\n                    curTab: 'Table'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, '')]);\n        }\n      },\n      // {\n      //   title: '作业画像',\n      //   width: 70,\n      //   align: 'center',\n      //   render: (h, { column, index, row }) => {\n      //     return h('div', [\n      //       h('Button', {\n      //         props: {\n      //           icon: 'ios-image'\n      //         },\n      //         style: {\n      //           // marginRight: '5px'\n      //           margin: '0px',\n      //           fontSize: '20px',\n      //           border: 0,\n      //           padding: '4px 8px',\n      //           color: '#03399b',\n      //           background: 'transparent'\n      //         },\n      //         on: {\n      //           click: () => {\n      //             let id = row.job\n      //             if (this.transData.jobStatus) {\n      //               this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\n      //             } else {\n      //               this.$emit('switch', Object.assign({}, { id: id, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\n      //             }\n      //           }\n      //         }\n      //       }, '')\n      //     ])\n      //   }\n      // },\n      {\n        title: '运行记录',\n        width: 80,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref9) {\n          var column = _ref9.column,\n            index = _ref9.index,\n            row = _ref9.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-reorder'\n            },\n            style: {\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              backgroundColor: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    jobData: row,\n                    statusName: 'jobRecord',\n                    curTab: 'Table'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobData: row,\n                    statusName: 'jobRecord',\n                    curTab: 'Table'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, '')]);\n        }\n      }, {\n        title: '脚本',\n        width: 50,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref10) {\n          var column = _ref10.column,\n            index = _ref10.index,\n            row = _ref10.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-search'\n            },\n            style: {\n              // marginRight: '5px'\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'script',\n                    jobData: row\n                  }, _this.getPageParam()));\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'script',\n                    jobData: row\n                  }, _this.getPageParam()));\n                }\n              }\n            }\n          }, '')]);\n        }\n      },\n      /* {\r\n        title: '上游',\r\n        width: 36,\r\n        // fixed: 'right',\r\n        render: (h, {column, index, row}) => {\r\n          return h('div', [\r\n            h('a', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              },\r\n              on: {\r\n                click: () => {\r\n                  let id = row.job\r\n                  if (this.transData.jobStatus) {\r\n                    this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                  } else {\r\n                    this.$emit('switch', Object.assign({}, {id: id, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }\r\n            }, '查看')\r\n          ])\r\n        }\r\n      }, */\n      /* {\r\n        title: '下游',\r\n        width: 50,\r\n        // fixed: 'right',\r\n        render: (h, {column, index, row}) => {\r\n          return h('div', [\r\n            h('a', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info'\r\n              },\r\n              style: {\r\n                // marginRight: '5px'\r\n              },\r\n              on: {\r\n                click: () => {\r\n                  let id = row.job\r\n                  if (this.transData.jobStatus) {\r\n                    this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                  } else {\r\n                    this.$emit('switch', Object.assign({}, {id: id, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }\r\n            }, '查看')\r\n          ])\r\n        }\r\n      }, */\n      /* {\r\n        title: '状态',\r\n        width: 36,\r\n        //fixed: 'right',\r\n        render: (h, {column,index, row}) => {\r\n          return h('div', [\r\n            h('a', {\r\n              props: {\r\n                size: 'small',\r\n                type: 'info',\r\n              },\r\n              style: {\r\n                //marginRight: '5px'\r\n              },\r\n              on: {\r\n                click :() => {\r\n                  let id = row.job;\r\n                  this.$emit('switch', Object.assign({},{id: id,statusName: \"status\",jobData: row},this.getPageParam())); //提交form事件，在parent中显示form\r\n                }\r\n              }\r\n            }, '修改')\r\n          ])\r\n        }\r\n      }, */\n      {\n        title: '属性',\n        width: 50,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref11) {\n          var column = _ref11.column,\n            index = _ref11.index,\n            row = _ref11.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-create'\n            },\n            style: {\n              // marginRight: '5px'\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                if (!row.enable) {\n                  _this.$Message.error({\n                    content: '当前作业状态为禁用,不能修改作业属性',\n                    duration: 10,\n                    closable: true\n                  });\n                  return;\n                }\n                var id = row.job;\n                if (!(row.lastStatus === 'SUCCESS' || row.lastStatus === 'FAILURE' || row.lastStatus === 'READY')) {\n                  _this.$Message.error({\n                    content: '当前作业状态不为SUCCESS或FAILURE或READY,不能修改作业属性',\n                    duration: 15,\n                    closable: true\n                  });\n                  return;\n                }\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'attr',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'attr',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, '')]);\n        }\n      }, {\n        title: '操作',\n        width: 60,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref12) {\n          var column = _ref12.column,\n            index = _ref12.index,\n            row = _ref12.row;\n          return h('Dropdown', {\n            props: {\n              trigger: 'click',\n              placement: 'bottom-end',\n              transfer: true\n            },\n            style: {\n              paddingRight: '3px'\n            },\n            on: {\n              'on-click': function onClick(value) {\n                var flag = value;\n                _this.execOpt(flag, row, index, column);\n              }\n            }\n          }, [h('a', [/* h('span', '更多'), */\n          h('Button', {\n            props: {\n              icon: 'ios-more'\n            },\n            style: {\n              // marginRight: '5px'\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            }\n          })]), h('DropdownMenu', {\n            slot: 'list'\n          }, _this.dropdownItems.map(function (data) {\n            return h('DropdownItem', {\n              props: {\n                name: data.val\n              },\n              style: {\n                color: '#3399ff'\n                // paddingLeft: '2px',\n                // paddingRight: '3px'\n              }\n            }, data.val);\n          }))]);\n        }\n      }],\n      // gridData: [{platform: \"BDP\", system: \"DLA\", job: \"BDP_DLA_TEST\",serverName: \"SERVER1\", jobType:\"D\", lastStatus:\"Pending\",\n      // startTime: \"2019-06-31 8:00:00\", endTime:  \"2019-06-31 8:00:00\",jobDate: \"2019-06-31\"}],\n      gridData: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      isRequirePlatform: true,\n      ruleValidate: {\n        // platform: [\n        //   { required: true, message: '请输入数据！', trigger: 'change' }\n        // ]\n        platform: [{\n          validator: validatePlatform,\n          trigger: 'change'\n        }]\n      },\n      forceStartRuleValidate: {\n        multiBatch: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        jobDate: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        serverName: [{\n          required: true,\n          message: '请输入数据！'\n        }]\n      },\n      fromto: '1'\n    };\n  },\n  methods: {\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      if (this.transData.currentPage) {\n        this.formBean = this.transData.formBean;\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      if (window.sessionStorage.getItem('errorlist_udsjob') || this.transData.jobStatus) {\n        this.fromto = '0';\n        // this.transData.jobStatus\n        if (window.sessionStorage.getItem('errorlist_udsjob') == '0') {\n          this.formBean.enable = 0;\n        } else {\n          this.formBean.enable = 1;\n          if (this.transData.formBean && (this.transData.formBean.lastStatus || this.transData.formBean.lastStatus.length == 0)) {\n            this.formBean.lastStatus = this.transData.formBean.lastStatus;\n          } else {\n            this.formBean.lastStatus = window.sessionStorage.getItem('errorlist_udsjob');\n          }\n          if (this.transData.jobData) {\n            this.formBean.platform = this.transData.jobData.platform;\n          }\n          // if (this.transData.jobData.platform) {\n          //  this.formBean.platform = this.transData.jobData.platform;\n          // }\n        }\n      }\n      /* if (!this.formBean.platform) {\r\n        console.log(this.formBean.platform)\r\n        if (!platforms.includes('ROLE_ADMIN')) {\r\n          this.formBean.platform = platforms[0]\r\n          this.querySystem()\r\n        }\r\n      } */\n      // console.log(this.transData.jobStatus);\n      // this.queryPlatform();\n      // this.search();\n    },\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n     * 下载\r\n     **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n     * 查询\r\n     **/\n    search: function search() {\n      var _this2 = this;\n      if (window.sessionStorage.getItem('errorlist_udsjob') || this.transData.jobStatus) {\n        var prevTab = '';\n        var backParam = {};\n        if (this.transData.statusName === 'table') {\n          backParam.statusName = this.transData.prevTab;\n        } else {\n          backParam.statusName = this.transData.statusName;\n        }\n        backParam.udsjobsearch = '1';\n        this.$emit('switch', Object.assign({}, backParam));\n      } else {\n        this.$emit('switch', Object.assign({}, {\n          statusName: 'table'\n        }));\n      }\n      this.$refs.udsjobForm.validate(function (valid) {\n        if (!valid && _this2.fromto == '1') return;\n        var params = {};\n        Object.assign(params, _this2.formBean);\n        params.current = _this2.page.current;\n        params.size = _this2.page.size;\n        for (var key in params) {\n          if (key === 'job') {\n            if (params[key] && params[key] !== '') {\n              params[key] = '%' + params[key].trim().toUpperCase() + '%';\n            } else {\n              delete params[key];\n            }\n          }\n          if (key === 'systems' && params[key]) {\n            params[key] = params[key].trim().toUpperCase();\n          }\n        }\n        var httpConfig = {\n          method: 'GET',\n          url: RESOURCE_PATH + '/selectAll',\n          params: params\n        };\n        _this2.$ajax(httpConfig).then(function (resp) {\n          if (resp.data.total && resp.data.total > 0) {\n            if (resp.data.rows && resp.data.rows.length === 0) {\n              _this2.page.current = 1;\n              _this2.search();\n            }\n          }\n          _this2.gridData = resp.data.rows;\n          _this2.page.total = resp.data.total;\n        });\n      });\n    },\n    findServer: function findServer() {\n      var _this3 = this;\n      var param = {};\n      param.location = 'all';\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/getServer',\n        params: param\n      };\n      this.serverData = [];\n      this.$ajax(loadConfig).then(function (resp) {\n        // let sData = []\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data.serverName;\n          tmp.label = data.serverName;\n          // sData.push(tmp)\n          _this3.serverData.push(tmp);\n        });\n      });\n    },\n    execOpt: function execOpt(flag, row, index, column) {\n      if (flag == 'invoke') {\n        var id = row.job;\n        if (!row.enable) {\n          this.$Message.warning({\n            content: '该作业已被禁用，无法invoke',\n            duration: 5,\n            closable: true\n          });\n          return;\n        }\n        if (this.transData.jobStatus) {\n          this.$emit('switch', Object.assign({}, {\n            id: id,\n            jobStatus: this.transData.jobStatus,\n            statusName: 'invoke',\n            jobData: row\n          }, this.getPageParam()));\n        } else {\n          this.$emit('switch', Object.assign({}, {\n            id: id,\n            statusName: 'invoke',\n            jobData: row\n          }, this.getPageParam()));\n        }\n      } else if (flag == '补数') {\n        var _id = row.job;\n        if (!row.enable) {\n          this.$Message.warning({\n            content: '该作业已被禁用，无法补数',\n            duration: 5,\n            closable: true\n          });\n          return;\n        }\n        if (this.transData.jobStatus) {\n          this.$emit('switch', Object.assign({}, {\n            id: _id,\n            jobStatus: this.transData.jobStatus,\n            statusName: 'forcestart',\n            jobData: row\n          }, this.getPageParam()));\n        } else {\n          this.$emit('switch', Object.assign({}, {\n            id: _id,\n            statusName: 'forcestart',\n            jobData: row\n          }, this.getPageParam()));\n        }\n      } else if (flag == '置虚或实') {\n        if (row.virtualEnable == 1) {\n          var _id2 = row.job;\n          this.changeJobVEnable({\n            virtualEnable: row.virtualEnable,\n            job: _id2\n          }, index, row);\n        } else {\n          this.confirmV(row, index);\n        }\n      } else if (flag == '启用禁用') {\n        if (row.lastStatus == 'SUCCESS' || row.lastStatus == 'READY' || row.lastStatus == 'FAILURE') {\n          if (row.enable) {\n            this.confirmD(row, index);\n          } else {\n            var _id3 = row.job;\n            var enable = row.enable ? 0 : 1;\n            this.changeJobEnable({\n              enable: enable,\n              job: _id3\n            }, index, row);\n          }\n        } else {\n          this.$Message.warning({\n            content: '当前该作业状态:' + row.lastStatus + '无法禁用',\n            duration: 3,\n            closable: true\n          });\n        }\n      } else if (flag == '查看脚本') {\n        var _id4 = row.job;\n        if (this.transData.jobStatus) {\n          this.$emit('switch', Object.assign({}, {\n            id: _id4,\n            jobStatus: this.transData.jobStatus,\n            statusName: 'script',\n            jobData: row\n          }, this.getPageParam()));\n        } else {\n          this.$emit('switch', Object.assign({}, {\n            id: _id4,\n            statusName: 'script',\n            jobData: row\n          }, this.getPageParam()));\n        }\n      } else if (flag == 'kill作业') {\n        this.confirmBtn(row);\n      }\n    },\n    handleTreeData: function handleTreeData(data) {\n      var _this4 = this;\n      data.forEach(function (data, index) {\n        data.expand = false;\n        var udsjob = data.udsJobMenu; // lastStatus jobDate jobType\n        var depStatus = udsjob.depIsEnable ? '启用' : '禁用';\n        data.title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus;\n        if (data.children.length == 0) {\n          data.expand = false;\n          data.children = [];\n        } else {\n          _this4.handleTreeData(data.children);\n        }\n      });\n    },\n    renderContent: function renderContent(h, _ref13) {\n      var _this5 = this;\n      var root = _ref13.root,\n        node = _ref13.node,\n        data = _ref13.data;\n      var col = '#515a6e';\n      if (data.udsJob) {\n        if (!data.udsJob.enable) {\n          // 作业禁用\n          col = 'red';\n        }\n      }\n      return h('span', {\n        style: {\n          display: 'inline-block',\n          width: '100%'\n        }\n      }, [h('span', [h('a', {\n        style: {\n          color: col\n        },\n        class: {\n          treeTitle: true\n        },\n        on: {\n          click: function click() {\n            var job = data.id ? data.id : data.title;\n            _this5.jobDetailBean = {};\n            var params = {};\n            params.job = job;\n            params.platform = data.udsJobMenu.platform;\n            params.systems = data.udsJobMenu.systems;\n            var httpConfig = {\n              method: 'GET',\n              url: RESOURCE_PATH + '/selectJobDetail',\n              params: params\n            };\n            _this5.$ajax(httpConfig).then(function (resp) {\n              _this5.jobDetailBean = resp.data.rows;\n              _this5.jobDrawer.show = true;\n            });\n          }\n        }\n      }, data.title)])]);\n    },\n    // 上游\n    getUpstreamData: function getUpstreamData(job, level, row) {\n      var _this6 = this;\n      if (!level) {\n        this.upstreamData = [];\n        var obj = {\n          title: job,\n          loading: false,\n          expand: false,\n          children: [],\n          platform: row.platform,\n          systems: row.systems\n        };\n        this.upstreamData.push(obj);\n      }\n      var params = {};\n      params.job = job;\n      params.level = level || '1';\n      params.platform = row.platform;\n      params.systems = row.systems;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/allUpjobList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        // console.log('上游')\n        // console.log(resp.data)\n        if (resp.status && resp.status === 200) {\n          var tmpUpobsTree = _this6.upstreamData;\n          tmpUpobsTree[0].expand = true;\n          // let treeData = []\n          if (resp.data.length > 0) {\n            resp.data.forEach(function (data, index) {\n              resp.data[index].loading = false;\n              var udsjob = data.udsJobMenu; // lastStatus jobDate jobType\n              var depStatus = udsjob.depIsEnable ? '启用' : '禁用';\n              resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus;\n              if (data.children.length == 0) {\n                data.children = [];\n                data.expand = false;\n              } else {\n                data.expand = false;\n                _this6.handleTreeData(data.children);\n              }\n            });\n            tmpUpobsTree[0].children = resp.data;\n            _this6.upstreamData = tmpUpobsTree;\n          }\n        }\n      });\n    },\n    loadUpData: function loadUpData(item, callback) {\n      var _this7 = this;\n      var params = {};\n      params.job = item.id ? item.id : item.title;\n      params.level = '1';\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/allUpjobList',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        var data = [];\n        var tmp = {};\n        if (resp.data.length == 0) {\n          _this7.$Message.info('该作业已经没有上游了');\n        }\n        resp.data.forEach(function (node) {\n          var udsjob = node.udsJobMenu; // lastStatus jobDate jobType\n          tmp = {};\n          var depStatus = udsjob.depIsEnable ? '启用' : '禁用';\n          tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus;\n          // tmp.title = node.id\n          tmp.id = node.id;\n          tmp.loading = false;\n          tmp.children = [];\n          data.push(tmp);\n        });\n        callback(data);\n      });\n    },\n    // 下游\n    getDownstreamData: function getDownstreamData(job, level, row) {\n      var _this8 = this;\n      if (!level) {\n        this.downstreamData = [];\n        var obj = {\n          title: job,\n          loading: false,\n          expand: false,\n          children: [],\n          platform: row.platform,\n          systems: row.systems\n        };\n        this.downstreamData.push(obj);\n      }\n      var params = {};\n      params.job = job;\n      params.level = level || '1';\n      params.platform = row.platform;\n      params.systems = row.systems;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/allDownjobList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        // console.log('下游')\n        // console.log(resp.data)\n        if (resp.status && resp.status === 200) {\n          var tmpDownobsTree = _this8.downstreamData;\n          tmpDownobsTree[0].expand = true;\n          // let treeData = []\n          if (resp.data.length > 0) {\n            resp.data.forEach(function (data, index) {\n              resp.data[index].loading = false;\n              var udsjob = data.udsJobMenu; // lastStatus jobDate jobType\n              var depStatus = udsjob.depIsEnable ? '启用' : '禁用';\n              resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus;\n              if (data.children.length == 0) {\n                data.children = [];\n                data.expand = false;\n              } else {\n                data.expand = false;\n                _this8.handleTreeData(data.children);\n              }\n            });\n            tmpDownobsTree[0].children = resp.data;\n            _this8.downstreamData = tmpDownobsTree;\n          }\n        }\n      });\n    },\n    // renderDownContent\n    loadDownData: function loadDownData(item, callback) {\n      var _this9 = this;\n      var params = {};\n      params.job = item.id ? item.id : item.title;\n      params.level = '1';\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/allDownjobList',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        var data = [];\n        var tmp = {};\n        if (resp.data.length == 0) {\n          _this9.$Message.info('该作业已经没有下游了');\n        }\n        resp.data.forEach(function (node) {\n          var udsjob = node.udsJobMenu; // lastStatus jobDate jobType\n          var depStatus = udsjob.depIsEnable ? '启用' : '禁用';\n          tmp = {};\n          tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus;\n          // tmp.title = node.id\n          tmp.id = node.id;\n          tmp.loading = false;\n          tmp.children = [];\n          data.push(tmp);\n        });\n        callback(data);\n      });\n    },\n    /**\r\n     * 清空\r\n     **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n     * 新增\r\n     **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n     * 删除\r\n     **/\n    del: function del() {\n      var _this10 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.platform;\n      });\n      ids.forEach(function (id) {\n        _this10.request.delReq.url = RESOURCE_PATH + '/' + id;\n        _this10.request.delReq.method = 'DELETE';\n        _this10.$ajax(_this10.request.delReq).then(function (resp) {\n          _this10.search();\n        });\n      });\n    },\n    /**\r\n    *改变作业是否enable状态\r\n    **/\n    changeJobEnable: function changeJobEnable(params, index, row) {\n      var _this11 = this;\n      // console.log(this.$store.getters.getBreadcrumb);\n      // params.authps = row.platform + row.system\n      params.platform = row.platform;\n      params.systems = row.systems;\n      params.job = row.job;\n      var httpConfig = {\n        method: 'POST',\n        url: '/udsJobConfig/setEnable',\n        data: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this11.loadingdisable = false;\n        if (resp.status && resp.status == 200) {\n          _this11.gridData[index].enable = params.enable;\n          _this11.confirmDisable.show = false;\n        }\n      });\n    },\n    /**\r\n    *改变作业是否虚作业状态\r\n    **/\n    changeJobVEnable: function changeJobVEnable(params, index, row) {\n      var _this12 = this;\n      if (params.virtualEnable === 1) {\n        params.virtualEnable = 0;\n      } else if (params.virtualEnable === 0) {\n        params.virtualEnable = 1;\n      }\n      // params.authps = row.platform + row.system\n      params.platform = row.platform;\n      params.systems = row.systems;\n      params.job = row.job;\n      params.virtual = params.virtualEnable;\n      var httpConfig = {\n        method: 'POST',\n        url: '/udsJobConfig/setVirtual',\n        data: params\n      };\n      // httpConfig.method = 'PUT'\n      // httpConfig.url = '/udsjobconfig/' + params.job\n      this.$ajax(httpConfig).then(function (resp) {\n        _this12.loadingvitual = false;\n        if (resp.status && resp.status == 200) {\n          _this12.gridData[index].virtualEnable = params.virtualEnable;\n          _this12.confirmVi.show = false;\n        }\n      });\n    },\n    /**\r\n     * 数据复选事件\r\n     **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    /**\r\n     * 改变页码事件\r\n     **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n     * 改变分页大小事件\r\n     **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    /**\r\n     * 列排序\r\n     **/\n    changeSort: function changeSort(column) {\n      var classcon = window.event.currentTarget.className;\n      var sort, order;\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\n        order = 'ASC';\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\n        order = 'DESC';\n      }\n      // console.log(\"column,key,order\"+ column.key );\n      this.formBean.order = order;\n      this.formBean.sort = column.key;\n      this.search();\n    },\n    // harrier getPlatformList\n    getPlatformList: function getPlatformList() {\n      var _this13 = this;\n      // let loadConfig = {\n      //   method: 'GET',\n      //   url: '/udsSystem/listQuery'\n      // }\n      // this.$ajax(loadConfig)\n      //   .then(resp => {\n      //     let platformList = []\n      //     resp.data.forEach(data => {\n      //       platformList.push(data.platform)\n      //       // this.formBean.platform = \"UDS\";\n      //     })\n      //     platformList = Array.from(new Set(platformList))\n      //     platformList.forEach(data => {\n      //       let tmp = {}\n      //       tmp.value = data\n      //       tmp.label = data\n      //       this.platformData.push(tmp)\n      //       // this.formBean.platform = \"UDS\";\n      //     })\n      //     this.search()\n      //   })\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this13.platformData.push(tmp);\n      });\n      this.search();\n      this.queryJobstatus();\n    },\n    // harrier getSystemList\n    getSystemList: function getSystemList() {\n      var _this14 = this;\n      // let loadConfig = {\n      //   method: 'GET',\n      //   url: '/udsSystem/listQuery'\n      // }\n      // this.systemData = []\n      // this.$refs.refsystem.setQuery('')\n      // if (this.formBean.platform) {\n      //   this.$ajax(loadConfig)\n      //     .then(resp => {\n      //       resp.data.forEach(data => {\n      //         if (this.formBean.platform === data.platform && data.systems !== '*') {\n      //           let tmp = {}\n      //           tmp.value = data.systems\n      //           tmp.label = data.systems\n      //           this.systemData.push(tmp)\n      //         }\n      //       })\n      //     })\n      // }\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this14.systemData.push(tmp);\n        });\n      }\n    },\n    // harrier test end\n    queryPlatform: function queryPlatform() {\n      var _this15 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getPlatformList'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this15.platformData.push(tmp);\n          // this.formBean.platform = \"UDS\";\n        });\n\n        _this15.search();\n        _this15.queryjobtypeList();\n        _this15.queryDBControList();\n        _this15.queryStreamTypeList();\n      });\n    },\n    querySystem: function querySystem() {\n      var _this16 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getSysList',\n        params: {\n          platform: this.formBean.platform\n        }\n      };\n      // modify by jcjin 20200528 for systemData返回值由对象调整为集合\n      //    this.$ajax(loadConfig)\n      //      .then(resp => {\n      //        if (this.transData.formBean && this.transData.formBean.system) {\n      //        this.formBean.system = this.transData.formBean.system;\n      //      } else {\n      //        this.formBean.system = \"\";\n      //      }\n      //      this.systemData = resp.data;\n      //\n      //    })\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data;\n            tmp.label = data;\n            _this16.systemData.push(tmp);\n          });\n        });\n      }\n    },\n    queryJobstatus: function queryJobstatus() {\n      var _this17 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/mDictionary/selectDicCode',\n        params: {\n          dicCode: 'jobStatus'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this17.jobstatusData = [];\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data.dicValue;\n          tmp.label = data.dicValue;\n          _this17.jobstatusData.push(tmp);\n          // this.formBean.platform = \"UDS\";\n        });\n      });\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.formBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    confirmBtn: function confirmBtn(row) {\n      if (!(row.lastStatus == 'Running')) {\n        this.$Message.error({\n          content: '当前作业状态不为Running',\n          duration: 15,\n          closable: true\n        });\n        return;\n      }\n      this.confirm.job = row.job;\n      this.confirm.row = row;\n      this.confirm.show = true;\n      // let id = row.job\n      // this.$emit('switch', Object.assign({}, { id: id, statusName: 'killjob', jobData: row }, this.getPageParam()))\n    },\n    confirmV: function confirmV(row, index) {\n      this.confirmVi.show = true;\n      this.confirmVi.row = row;\n      this.confirmVi.index = index;\n    },\n    vitualJob: function vitualJob() {\n      if (!this.res.isAgree == true) {\n        this.$Message.warning({\n          content: '请同意 我承担该操作的一切后果!'\n        });\n        return;\n      }\n      var id = this.confirmVi.row.job;\n      this.loadingvitual = true;\n      this.changeJobVEnable({\n        virtualEnable: this.confirmVi.row.virtualEnable,\n        job: id\n      }, this.confirmVi.index, this.confirmVi.row);\n    },\n    vitualCancel: function vitualCancel() {\n      this.confirmVi.show = false;\n    },\n    confirmD: function confirmD(row, index) {\n      this.confirmDisable.show = true;\n      this.confirmDisable.row = row;\n      this.confirmDisable.index = index;\n    },\n    disableJob: function disableJob() {\n      if (!this.res.isAgree == true) {\n        this.$Message.warning({\n          content: '请同意 我承担该操作的一切后果!'\n        });\n        return;\n      }\n      var id = this.confirmDisable.row.job;\n      var enable = this.confirmDisable.row.enable ? 0 : 1;\n      this.loadingdisable = true;\n      this.changeJobEnable({\n        isAgree: this.res.isAgree,\n        enable: enable,\n        job: id\n      }, this.confirmDisable.index, this.confirmDisable.row);\n    },\n    disableCancel: function disableCancel() {\n      this.confirmDisable.show = false;\n    },\n    confirmCancel: function confirmCancel() {\n      this.confirm.job = '';\n      this.confirm.row = null;\n      this.confirm.show = false;\n    },\n    confirmBatchForceStartCancel: function confirmBatchForceStartCancel() {\n      this.confirmBatchForceStart.show = false;\n    },\n    batchForceStartConfirm: function batchForceStartConfirm() {\n      // this.findServer()\n      this.confirmBatchForceStart.show = true;\n    },\n    batchForceStart: function batchForceStart() {\n      var _this18 = this;\n      this.$refs.confirmBatchForceStartForm.validate(function (valid) {\n        if (!valid) return;\n        if (!_this18.confirmBatchForceStart.isAgree) {\n          _this18.$Message.warning({\n            content: '请同意 我承担该操作的一切后果!'\n          });\n          return;\n        }\n        var selectSystems = Array.from(_this18.selection, function (e) {\n          return e.platform + e.system;\n        });\n        if (selectSystems.length < 1) {\n          _this18.$Message.warning('请至少选择一行');\n          return;\n        }\n        var authSystems = store.getters.getSystems;\n        var isExist = true;\n        if (authSystems.indexOf('ROLE_ADMIN') == -1) {\n          // 非系统管理员\n          for (var i = 0; i < selectSystems.length; i++) {\n            for (var j = 0; j < authSystems.length; j++) {\n              if (selectSystems[i] == authSystems[j]) {\n                isExist = false;\n              }\n            }\n            if (isExist) {\n              _this18.$Message.warning('该用户没有' + selectSystems[i] + '权限');\n              return true;\n            }\n          }\n        }\n        var ids = Array.from(_this18.selection, function (e) {\n          return e.job;\n        });\n        var jobArr = '';\n        ids.forEach(function (id) {\n          if (jobArr == '') {\n            jobArr = id;\n          } else {\n            jobArr = jobArr + '/' + id;\n          }\n        });\n        var params = {};\n        Object.assign(params, _this18.forceStartFormBean);\n        params.datalist = _this18.selection;\n        params.reqparams = {};\n        params.requesttype = 'lo';\n        params.udsjob = _this18.forceStartFormBean;\n        params.reqparams = _this18.forceStartFormBean;\n        params.reqparams.jobDate = utils.fmtDate(_this18.forceStartFormBean.jobDate, 'yyyyMMdd');\n        params.reqparams.serverName = _this18.forceStartFormBean.serverName;\n        params.reqparams.jobArr = jobArr;\n        params.authps = selectSystems[0]; // this.formBean.platform + this.formBean.system;\n        // alert(params.authps);\n        _this18.loadingBatchFC = true;\n        var httpConfig = {\n          method: 'POST',\n          url: RESOURCE_PATH + '/batchForcestart',\n          data: params\n        };\n        _this18.$ajax(httpConfig).then(function (resp) {\n          setTimeout(function () {\n            _this18.loading = false;\n          }, 2000);\n          if (resp.data.returnCode != null && resp.data.returnCode !== 'undefined' && resp.data.returnCode === 'fail') {\n            _this18.loadingBatchFC = false;\n            // this.ctrlloadingBatchFCDisable = true\n            return;\n          }\n          if (resp.data === 'success') {\n            _this18.ctrlloadingBatchFCDisable = true;\n            _this18.ctrlloadingBatchADisable = true;\n            _this18.loadingBatchFC = false;\n            _this18.ctrlloadingBatchFCDisable = true;\n            _this18.confirmBatchForceStart.show = false;\n            _this18.search();\n          }\n        });\n      });\n    },\n    confirmBatchActiveCancel: function confirmBatchActiveCancel() {\n      this.confirmBatchActive.show = false;\n    },\n    batchActiveConfirm: function batchActiveConfirm() {\n      this.confirmBatchActive.show = true;\n    },\n    batchActive: function batchActive() {\n      var _this19 = this;\n      if (!this.confirmBatchActive.isAgree) {\n        this.$Message.warning({\n          content: '请同意 我承担该操作的一切后果!'\n        });\n        return;\n      }\n      var selectSystems = Array.from(this.selection, function (e) {\n        return e.platform + e.system;\n      });\n      if (selectSystems.length < 1) {\n        this.$Message.warning('请至少选择一行');\n        return;\n      }\n      var authSystems = store.getters.getSystems;\n      var isExist = true;\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\n        // 非系统管理员\n        for (var i = 0; i < selectSystems.length; i++) {\n          for (var j = 0; j < authSystems.length; j++) {\n            if (selectSystems[i] == authSystems[j]) {\n              isExist = false;\n            }\n          }\n          if (isExist) {\n            this.$Message.warning('该用户没有' + selectSystems[i] + '权限');\n            return true;\n          }\n        }\n      }\n      var ids = Array.from(this.selection, function (e) {\n        return e.job;\n      });\n      var jobArr = '';\n      ids.forEach(function (id) {\n        if (jobArr == '') {\n          jobArr = id;\n        } else {\n          jobArr = jobArr + '/' + id;\n        }\n      });\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.jobArr = jobArr;\n      params.authps = selectSystems[0]; // this.formBean.platform + this.formBean.system;\n      this.loadingBatchA = true;\n      // alert(params.authps);\n      var httpConfig = {\n        method: 'POST',\n        url: RESOURCE_PATH + '/batchActive',\n        data: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this19.ctrlloadingBatchFCDisable = true;\n        _this19.ctrlloadingBatchADisable = true;\n        _this19.confirmBatchActive.show = false;\n        _this19.loadingBatchA = false;\n        _this19.search();\n      });\n    },\n    killJob: function killJob() {\n      var _this20 = this;\n      var row = this.confirm.row;\n      var params = {};\n      params.platform = row.platform;\n      params.systems = row.systems;\n      params.job = row.job;\n      params.jobdate = row.jobDate;\n      params.multibatch = row.multiBatch;\n\n      // let row = this.confirm.row\n      // let params = this.confirm.row\n      // params.authps = row.platform + row.system\n      // console.log(this.$store.getters.getBreadcrumb);\n      var httpConfig = {\n        method: 'POST',\n        url: RESOURCE_PATH + '/killJob',\n        data: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status == 200) {\n          if (resp.data === 1) {\n            _this20.confirm.show = false;\n            _this20.$Message.success({\n              content: 'kill作业：' + row.job + '成功！',\n              duration: 15,\n              closable: true\n            });\n            _this20.search();\n          } else {\n            _this20.$Message.error({\n              content: 'kill作业：' + row.job + '失败！',\n              duration: 15,\n              closable: true\n            });\n          }\n          _this20.confirm.show = false;\n        }\n      });\n    },\n    queryjobtypeList: function queryjobtypeList() {\n      var _this21 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'jobtype'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this21.jobtypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this21.jobtypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    queryDBControList: function queryDBControList() {\n      var _this22 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'location'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this22.dbControlList = {};\n        resp.data.rows.forEach(function (data) {\n          _this22.dbControlList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    queryStreamTypeList: function queryStreamTypeList() {\n      var _this23 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'stream_type'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this23.streamTypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this23.streamTypeList[data.dicValue] = data.dicName;\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getPlatformList();\n    // this.queryPlatform()\n    // this.findServer()\n    // 作业列表菜单权限控制\n    // const authSystems = this.$store.getters.getSystems\n    /* const authSystems = sessionStorage.systems.split(',')\r\n    if (authSystems.includes('ROLE_ADMIN') ||\r\n      authSystems.includes('ROLE_PLAT')) {\r\n      } else {\r\n      this.dropdownItems = [{ val: '补数' }, { val: '置虚或实' }]\r\n    } */\n\n    // console.log(this.$refs.uptree.getSelectedNodes())\n  },\n\n  watch: {\n    selection: function selection(val) {\n      if (val.length != 0) {\n        this.ctrlloadingBatchFCDisable = false;\n        this.ctrlloadingBatchADisable = false;\n      } else {\n        this.ctrlloadingBatchFCDisable = true;\n        this.ctrlloadingBatchADisable = true;\n      }\n    },\n    /*  作业列表修改属性后重新查询数据库  */\n    transData: function transData(val, oldVal) {\n      var _this24 = this;\n      if (this.transData.showTable) {\n        this.$refs.udsjobForm.validate(function (valid) {\n          if (!valid && _this24.fromto == '1') return;\n          var params = {};\n          Object.assign(params, _this24.formBean);\n          params.current = _this24.page.current;\n          params.size = _this24.page.size;\n          for (var key in params) {\n            if (key === 'job') {\n              if (params[key] && params[key] !== '') {\n                params[key] = '%' + params[key].trim().toUpperCase() + '%';\n              } else {\n                delete params[key];\n              }\n            }\n            if (key == 'system' && params[key]) {\n              params[key] = params[key].trim().toUpperCase();\n            }\n          }\n          var httpConfig = {\n            method: 'GET',\n            url: RESOURCE_PATH + '/selectAll',\n            params: params\n          };\n          _this24.$ajax(httpConfig).then(function (resp) {\n            // console.log(resp);\n            if (resp.data.total && resp.data.total > 0) {\n              if (resp.data.rows && resp.data.rows.length === 0) {\n                _this24.page.current = 1;\n                _this24.search();\n              }\n            }\n            _this24.gridData = resp.data.rows;\n            _this24.page.total = resp.data.total;\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"names":["utils","store","common","Circle","SAuthButton","platforms","getters","getPlatforms","RESOURCE_PATH","components","mixins","props","transData","type","Object","default","_default","data","_this","validatePlatform","rule","value","callback","formBean","platform","Error","jobDetailBean","jobDrawer","show","upAndDownstream","upstreamData","downstreamData","serverData","forceStartFormBean","loadingBatchFC","ctrlloadingBatchFCDisable","loadingBatchA","ctrlloadingBatchADisable","jobtypeList","streamTypeList","dbControlList","loadingvitual","loadingdisable","res","isAgree","confirm","job","row","confirmDisable","confirmVi","confirmBatchActive","confirmBatchForceStart","platformData","dropdownItems","val","systemData","jobstatusData","udsJobStyle","status","request","batchActive","method","url","batchForceStart","delReq","addReq","gridColumns","width","align","title","ellipsis","sortable","key","className","minWidth","render","h","_ref","column","index","size","style","color","enable","on","click","id","jobStatus","$emit","assign","statusName","jobData","getPageParam","tooltip","maxWidth","_ref2","serverName","_ref3","marginLeft","jobType","$Message","warning","_ref4","endArr","endTime","split","lastStatus","_ref5","jobDate","substring","_ref6","enableStatus","virtualEnable","colors","marginRight","_ref7","icon","margin","fontSize","border","padding","backgroundColor","getUpstreamData","getDownstreamData","_ref8","curTab","_ref9","_ref10","background","_ref11","error","content","duration","closable","_ref12","trigger","placement","transfer","paddingRight","onClick","flag","execOpt","slot","map","name","gridData","selection","page","current","total","opt","isRequirePlatform","ruleValidate","validator","forceStartRuleValidate","multiBatch","required","message","fromto","methods","init","currentPage","pageSize","window","sessionStorage","getItem","length","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","err","e","f","console","download","params","search","_this2","prevTab","backParam","udsjobsearch","$refs","udsjobForm","validate","valid","trim","toUpperCase","httpConfig","$ajax","then","resp","rows","findServer","_this3","param","location","loadConfig","forEach","tmp","label","push","changeJobVEnable","confirmV","confirmD","changeJobEnable","confirmBtn","handleTreeData","_this4","expand","udsjob","udsJobMenu","depStatus","depIsEnable","children","renderContent","_ref13","_this5","root","node","col","udsJob","display","class","treeTitle","systems","level","_this6","obj","loading","tmpUpobsTree","loadUpData","item","_this7","info","_this8","tmpDownobsTree","loadDownData","_this9","clear","add","del","_this10","ids","Array","from","_this11","_this12","virtual","select","changePage","changePageSize","changeSort","classcon","event","currentTarget","sort","order","indexOf","getPlatformList","_this13","platformList","$store","getUserPlatform","queryJobstatus","getSystemList","_this14","refsystem","setQuery","userSystemList","getUserSystem","userSystem","queryPlatform","_this15","queryjobtypeList","queryDBControList","queryStreamTypeList","querySystem","_this16","_this17","dicCode","dicValue","filterMethod","option","vitualJob","vitualCancel","disableJob","disableCancel","confirmCancel","confirmBatchForceStartCancel","batchForceStartConfirm","_this18","confirmBatchForceStartForm","selectSystems","system","authSystems","getSystems","isExist","i","j","jobArr","datalist","reqparams","requesttype","fmtDate","authps","setTimeout","returnCode","confirmBatchActiveCancel","batchActiveConfirm","_this19","killJob","_this20","jobdate","multibatch","success","_this21","dicName","_this22","_this23","mounted","watch","oldVal","_this24","showTable"],"sources":["src/view/spdb/job/jobList/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\" style=\"margin-top:20px;\">\r\n      <Form ref=\"udsjobForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\">\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <FormItem prop=\"platform\" label=\"平台名\">\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value+''\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"作业状态\">\r\n              <Select filterable v-model=\"formBean.lastStatus\" clearable>\r\n                <Option v-for=\"item in jobstatusData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"作业名\">\r\n              <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.job\" placeholder=\"支持模糊查询\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"1\">&nbsp;</Col>\r\n          <Col span=\"8\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n              <!-- <S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n              <S-AuthButton type=\"primary\" icon=\"ios-trash-outline\" @click=\"del\" :requestConfig=request.delReq>删除</S-AuthButton> -->\r\n              <!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button> -->\r\n              <!--  icon=\"md-add\"  -->\r\n              <!-- <s-auth-button :loading=\"loadingBatchA\" :disabled=\"ctrlloadingBatchADisable\" type=\"primary\" @click=\"batchActiveConfirm\" :requestConfig=request.batchActive>批量重调</s-auth-button> -->\r\n              <!--\r\n                <S-AuthButton :loading=\"loadingBatchFC\" :disabled=\"ctrlloadingBatchFCDisable\" type=\"primary\" @click=\"batchForceStartConfirm\" :requestConfig=request.batchForceStart>批量补数</S-AuthButton>\r\n              -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-table\" id=\"joblistTable\">\r\n      <Table  size=\"small\"  :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\" @on-sort-change=\"changeSort\">\r\n      </Table>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-page\">\r\n      <Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\"  show-total show-sizer show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" ></Page>\r\n    </div>\r\n\r\n    <Modal id=\"confirmM\"\r\n      v-model=\"confirm.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert type=\"warning\" >确认kill作业:{{confirm.job}}</Alert>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"killJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"confirmD\"\r\n      v-model=\"confirmDisable.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Form  ref=\"confirmDisableForm\" :label-width=\"100\"  inline>\r\n          <Alert class=\"m-warn-con\" type=\"warning\" >禁用作业后，该作业不再运行</Alert>\r\n          <Alert class=\"m-warn-con\" type=\"warning\" >禁用作业影响该作业的触发作业运行</Alert>\r\n          <Checkbox class=\"m-warn-con\" v-model=\"res.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n        </Form>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" :loading=\"loadingdisable\" @click=\"disableJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"disableCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"confirmBatchActive\"\r\n      v-model=\"confirmBatchActive.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >批量重调会检查依赖，触发下游作业执行，确认是否进行批量重调?</Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"confirmBatchActive.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"batchActive\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmBatchActiveCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n  <Modal id=\"confirmBatchForceStart\"\r\n      v-model=\"confirmBatchForceStart.show\"\r\n      :mask-closable=\"false\"\r\n      width='50%'\r\n      title=\"提示\">\r\n      <div>\r\n        <div>\r\n          <Form ref=\"confirmBatchForceStartForm\" :model=\"forceStartFormBean\" :rules=\"forceStartRuleValidate\" :label-width=\"100\"   inline>\r\n            <Row>\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"jobDate\" label=\"补数日期\">\r\n                  <DatePicker style=\"width:96%\" type=\"date\" multiple  format=\"yyyyMMdd\" v-model=\"forceStartFormBean.jobDate\" ></DatePicker>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n\t\t\t      <Row>\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"multiBatch\" label=\"批次号\">\r\n                  <Input style=\"width:110%\" v-model=\"forceStartFormBean.multiBatch\" />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row >\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"serverName\" label=\"执行节点\">\r\n                    <Select style=\"width:100%\" filterable v-model=\"forceStartFormBean.serverName\" clearable placeholder=\"请选择\">\r\n                      <Option v-for=\"item in serverData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n              </Col>\r\n\r\n              <Col span=\"14\" >\r\n                <FormItem>\r\n                  <Alert type=\"warning\" > 提示:udsslavedep是交换的节点，专门跑Datastage的。perl脚本选udsslave即可</Alert>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >确认是否进行批量补数?</Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"confirmBatchForceStart.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"batchForceStart\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmBatchForceStartCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"confirmV\"\r\n      v-model=\"confirmVi.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >\r\n            <span style=\"font-weight:bold\">友情提示:</span><br/>\r\n            <div style=\"margin-left:4%\">\r\n              1.置虚作业后，不再执行该作业的脚本<br/>\r\n              2.使用该作业数据的下游也无法获取该作业最新数据<br/>\r\n              3.请应用关注下游作业影响，建议同步通知下游负责人<br/>\r\n           </div>\r\n        </Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"res.isAgree\" >我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" :loading=\"loadingvitual\" @click=\"vitualJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"vitualCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"upAndDownstream\"\r\n\t\t\tv-model=\"upAndDownstream.show\"\r\n\t\t\ttitle=\"上下游信息\"\r\n\t\t\twidth='75%'\r\n\t\t\t>\r\n      <div style=\"max-height:60vh;overflow-y:scroll;overflow-x:hidden\">\r\n        <div style=\"background:#eee;padding: 10px;\">\r\n          <Card>\r\n            <p slot=\"title\">上游作业信息</p>\r\n            <Tree :data=\"upstreamData\" :load-data=\"loadUpData\" :render=\"renderContent\" expand-node></Tree>\r\n          </Card>\r\n        </div>\r\n        <div style=\"background:#eee;padding: 10px\">\r\n          <Card>\r\n            <p slot=\"title\">下游作业信息</p>\r\n            <Tree :data=\"downstreamData\" :load-data=\"loadDownData\" :render=\"renderContent\" expand-node></Tree>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\r\n    <!-- 作业详情信息预览抽屉 -->\r\n    <Drawer width=\"50\" v-model=\"jobDrawer.show\" title=\"作业详细信息\" id=\"drawerClass\">\r\n      <div>\r\n        <div class=\"jobdetailclass\">\r\n          <Card>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              平台名:<span class=\"span\">{{jobDetailBean.platform}} </span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              应用名:<span class=\"span\"> {{jobDetailBean.systems}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              作业名:<span class=\"span\">{{jobDetailBean.job}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              作业最后执行状态:<span class=\"span\">{{jobDetailBean.lastStatus}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              最后执行作业日期:<span class=\"span\">{{jobDetailBean.jobDate}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              执行节点:<span class=\"span\">{{jobDetailBean.serverName}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              进入pending状态的时间:<span class=\"span\">{{jobDetailBean.pendingTime}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              进入dispatcherTime状态的时间:<span class=\"span\"> {{jobDetailBean.dispatcherTime}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              开始执行时间:<span class=\"span\">{{jobDetailBean.startTime}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              结束时间:<span class=\"span\">{{jobDetailBean.endTime}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              批次号:<span class=\"span\">{{jobDetailBean.multiBatch}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              触发方式:<span class=\"span\">{{streamTypeList[jobDetailBean.streamType]}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              执行次数:<span class=\"span\">{{jobDetailBean.numTimes}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              当前重调次数:<span class=\"span\">{{jobDetailBean.callAgainNum}}</span>\r\n            </Col>\r\n          </Row>\r\n          </Card>\r\n        </div>\r\n\r\n        <!-- <Divider/> -->\r\n        <div class=\"jobdetailclass\">\r\n          <Card>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              作业中文名:<span class=\"span\">{{jobDetailBean.jobName}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              作业类型:<span class=\"span\" v-text=\"jobDetailBean.jobType == 'D'? '日':jobDetailBean.jobType== 'C'? '定时':jobDetailBean.jobType== 'W'? '周': '月'\">{{jobDetailBean.jobType}}</span>\r\n            </Col>\r\n          </Row>\r\n           <Row>\r\n             <Col span=\"12\">\r\n              最大重调次数:<span class=\"span\">{{jobDetailBean.callAgainMaxNum}}</span>\r\n            </Col>\r\n            <!-- <Col span=\"12\">\r\n              偏移天数:<span class=\"span\">{{jobDetailBean.offsetDay}}</span>\r\n            </Col> -->\r\n            <Col span=\"12\">\r\n              窗口执行时间:<span class=\"span\">{{jobDetailBean.timewindow}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              虚作业:<span v-text=\"jobDetailBean.virtualEnable == 1?'是':'否'\" class=\"span\">{{jobDetailBean.virtualEnable}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              优先级:<span class=\"span\">{{jobDetailBean.priority}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              是否可用:<span v-text=\"jobDetailBean.enable ?'是':'否'\" class=\"span\">{{jobDetailBean.enable}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              逻辑集群:<span class=\"span\">{{dbControlList[jobDetailBean.dbControl]}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              是否检测时间:<span v-text=\"jobDetailBean.checkFrequency == 1?'是':'否'\" class=\"span\">{{jobDetailBean.checkFrequency}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              检测是否采用时间触发:<span v-text=\"jobDetailBean.checkTimeTrigger == 1?'是':'否'\" class=\"span\">{{jobDetailBean.checkTimeTrigger}}</span>\r\n            </Col>\r\n          </Row>\r\n          <!-- <Row>\r\n            <Col span=\"12\">\r\n              是否启用streamFile检测触发:<span class=\"span\">{{jobDetailBean.checkStreamSelf}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              是否检测权重:<span class=\"span\">{{jobDetailBean.checkWeight}}</span>\r\n            </Col>\r\n          </Row> -->\r\n        </Card>\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\nimport common from '@/mixins/common'\r\nimport { Circle } from 'iview'\r\nimport SAuthButton from '_c/s-auth-button'\r\nconst platforms = store.getters.getPlatforms\r\nconst RESOURCE_PATH = '/udsJob'\r\n\r\nexport default {\r\n  components: {\r\n    SAuthButton\r\n  },\r\n  mixins: [ common ],\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const validatePlatform = (rule, value, callback) => {\r\n      if (!this.formBean.platform) {\r\n        callback(new Error('请输入数据！'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      jobDetailBean: {},\r\n      jobDrawer: {\r\n        show: false\r\n      },\r\n      upAndDownstream: {\r\n        show: false\r\n      },\r\n      upstreamData: [],\r\n      downstreamData: [],\r\n      serverData: [],\r\n      forceStartFormBean: {},\r\n      loadingBatchFC: false,\r\n      ctrlloadingBatchFCDisable: true,\r\n      loadingBatchA: false,\r\n      ctrlloadingBatchADisable: true,\r\n      jobtypeList: { 'D': '日', 'C': '定时', 'W': '周', 'M': '月' },\r\n      streamTypeList: {},\r\n      dbControlList: {},\r\n      loadingvitual: false,\r\n      loadingdisable: false,\r\n      res: { isAgree: true },\r\n      confirm: {\r\n        show: false,\r\n        job: '',\r\n        row: null\r\n      },\r\n      confirmDisable: {\r\n        show: false,\r\n        row: {}\r\n      },\r\n      confirmVi: {\r\n        show: false,\r\n        row: {}\r\n      },\r\n      confirmBatchActive: {\r\n        show: false,\r\n        isAgree: false\r\n      },\r\n      confirmBatchForceStart: {\r\n        show: false,\r\n        isAgree: false\r\n      },\r\n      platformData: [],\r\n      dropdownItems: [{ val: 'invoke' }, { val: '补数' }, { val: '置虚或实' }, { val: '启用禁用' }, { val: 'kill作业' }], //, {val: '查看脚本'}\r\n      systemData: [],\r\n      jobstatusData: [],\r\n      formBean: {},\r\n      udsJobStyle: {\r\n        status: 'black'\r\n      },\r\n      request: {\r\n        batchActive: {\r\n          method: 'POST',\r\n          url: '/udsjob/batchActive'\r\n        },\r\n        batchForceStart: {\r\n          method: 'POST',\r\n          url: '/udsjob/batchForceStart'\r\n        },\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n\r\n        {\r\n          type: 'selection',\r\n          width: 36,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          ellipsis: true,\r\n          width: 90,\r\n          sortable: true,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          ellipsis: true,\r\n          align: 'left',\r\n          width: 90,\r\n          sortable: true,\r\n          className: 'uds-job-column',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          ellipsis: false,\r\n          // tooltip: true,\r\n          sortable: true,\r\n          minWidth: 150,\r\n          className: 'uds-job-column',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  color: row.enable ? '' : 'red'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '类型',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 70,\r\n          maxWidth: 80,\r\n          // align: 'center',\r\n          sortable: true,\r\n          key: 'jobType',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginLeft: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'frequency', jobData: row }, this.getPageParam()))\r\n                    } else if (row.jobType == 'C') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'trigger', jobData: row }, this.getPageParam()))\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'startTime'\r\n          /* render: (h, {column, index, row}) => {\r\n            let startArr = ['', '']\r\n            if (row.startTime) {\r\n              startArr = row.startTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, startArr[0]),\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, startArr[1])])\r\n          } */\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        /* render: (h, {column, index, row}) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : endArr[0]),\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : endArr[1])])\r\n          }\r\n        }, */\r\n        {\r\n          title: 'TXDate',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 100,\r\n          sortable: true,\r\n          key: 'jobDate',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.jobDate.substring(0, 10))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '虚作业',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          align: 'center',\r\n          width: 70,\r\n          key: 'virtualEnable',\r\n          render: (h, { column, index, row }) => {\r\n            let enableStatus = row.virtualEnable == 1 ? '是' : '否'\r\n            let colors = row.virtualEnable == 1 ? 'red' : 'green'\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: colors\r\n                }\r\n              }, enableStatus)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '上下游',\r\n          width: 60,\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  // icon: 'shuffle'\r\n                  icon: 'md-swap'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.upAndDownstream.show = true\r\n                    this.getUpstreamData(row.job, null, row)\r\n                    this.getDownstreamData(row.job, null, row)\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '依赖',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-arrow-back'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'dep', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'dep', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '作业画像',\r\n        //   width: 70,\r\n        //   align: 'center',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           icon: 'ios-image'\r\n        //         },\r\n        //         style: {\r\n        //           // marginRight: '5px'\r\n        //           margin: '0px',\r\n        //           fontSize: '20px',\r\n        //           border: 0,\r\n        //           padding: '4px 8px',\r\n        //           color: '#03399b',\r\n        //           background: 'transparent'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             let id = row.job\r\n        //             if (this.transData.jobStatus) {\r\n        //               this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n        //             } else {\r\n        //               this.$emit('switch', Object.assign({}, { id: id, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n        //             }\r\n        //           }\r\n        //         }\r\n        //       }, '')\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '运行记录',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'jobRecord', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobRecord', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '脚本',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-search'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'script', jobData: row }, this.getPageParam()))\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'script', jobData: row }, this.getPageParam()))\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        /* {\r\n          title: '上游',\r\n          width: 36,\r\n          // fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, {id: id, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        }, */\r\n        /* {\r\n          title: '下游',\r\n          width: 50,\r\n          // fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, {id: id, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        }, */\r\n        /* {\r\n          title: '状态',\r\n          width: 36,\r\n          //fixed: 'right',\r\n          render: (h, {column,index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info',\r\n                },\r\n                style: {\r\n                  //marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click :() => {\r\n                    let id = row.job;\r\n                    this.$emit('switch', Object.assign({},{id: id,statusName: \"status\",jobData: row},this.getPageParam())); //提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '修改')\r\n            ])\r\n          }\r\n        }, */\r\n        {\r\n          title: '属性',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-create'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '16px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    if (!row.enable) {\r\n                      this.$Message.error({\r\n                        content: '当前作业状态为禁用,不能修改作业属性',\r\n                        duration: 10,\r\n                        closable: true\r\n                      })\r\n                      return\r\n                    }\r\n                    let id = row.job\r\n                    if (!(row.lastStatus === 'SUCCESS' ||\r\n                        row.lastStatus === 'FAILURE' ||\r\n                        row.lastStatus === 'READY')\r\n                    ) {\r\n                      this.$Message.error({\r\n                        content: '当前作业状态不为SUCCESS或FAILURE或READY,不能修改作业属性',\r\n                        duration: 15,\r\n                        closable: true\r\n                      })\r\n                      return\r\n                    }\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'attr', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'attr', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 60,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('Dropdown', {\r\n              props: {\r\n                trigger: 'click',\r\n                placement: 'bottom-end',\r\n                transfer: true\r\n              },\r\n              style: {\r\n                paddingRight: '3px'\r\n              },\r\n              on: {\r\n                'on-click': (value) => {\r\n                  let flag = value\r\n                  this.execOpt(flag, row, index, column)\r\n                }\r\n              }\r\n            }, [\r\n              h('a', [\r\n                /* h('span', '更多'), */\r\n                h('Button', {\r\n                  props: {\r\n                    icon: 'ios-more'\r\n                  },\r\n                  style: {\r\n                  // marginRight: '5px'\r\n                    margin: '0px',\r\n                    fontSize: '20px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  }\r\n                })\r\n              ]),\r\n              h('DropdownMenu', {\r\n                slot: 'list'\r\n              },\r\n              this.dropdownItems.map(function (data) {\r\n                return h('DropdownItem', {\r\n                  props: {\r\n                    name: data.val\r\n\r\n                  },\r\n                  style: {\r\n                    color: '#3399ff'\r\n                    // paddingLeft: '2px',\r\n                    // paddingRight: '3px'\r\n                  }\r\n                }, data.val)\r\n              })\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      // gridData: [{platform: \"BDP\", system: \"DLA\", job: \"BDP_DLA_TEST\",serverName: \"SERVER1\", jobType:\"D\", lastStatus:\"Pending\",\r\n      // startTime: \"2019-06-31 8:00:00\", endTime:  \"2019-06-31 8:00:00\",jobDate: \"2019-06-31\"}],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      isRequirePlatform: true,\r\n      ruleValidate: {\r\n        // platform: [\r\n        //   { required: true, message: '请输入数据！', trigger: 'change' }\r\n        // ]\r\n        platform: [\r\n          { validator: validatePlatform, trigger: 'change' }\r\n        ]\r\n      },\r\n      forceStartRuleValidate: {\r\n        multiBatch: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        serverName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      fromto: '1'\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n\r\n      if (window.sessionStorage.getItem('errorlist_udsjob') || this.transData.jobStatus) {\r\n        this.fromto = '0'\r\n        // this.transData.jobStatus\r\n        if (window.sessionStorage.getItem('errorlist_udsjob') == '0') {\r\n          this.formBean.enable = 0\r\n        } else {\r\n          this.formBean.enable = 1\r\n          if (this.transData.formBean && (this.transData.formBean.lastStatus ||\r\n          this.transData.formBean.lastStatus.length == 0)) { this.formBean.lastStatus = this.transData.formBean.lastStatus } else { this.formBean.lastStatus = window.sessionStorage.getItem('errorlist_udsjob') }\r\n          if (this.transData.jobData) {\r\n            this.formBean.platform = this.transData.jobData.platform\r\n          }\r\n          // if (this.transData.jobData.platform) {\r\n          //  this.formBean.platform = this.transData.jobData.platform;\r\n          // }\r\n        }\r\n      }\r\n      /* if (!this.formBean.platform) {\r\n        console.log(this.formBean.platform)\r\n        if (!platforms.includes('ROLE_ADMIN')) {\r\n          this.formBean.platform = platforms[0]\r\n          this.querySystem()\r\n        }\r\n      } */\r\n      // console.log(this.transData.jobStatus);\r\n      // this.queryPlatform();\r\n      // this.search();\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      if (\r\n        window.sessionStorage.getItem('errorlist_udsjob') ||\r\n                this.transData.jobStatus\r\n      ) {\r\n        let prevTab = ''\r\n        let backParam = {}\r\n        if (this.transData.statusName === 'table') {\r\n          backParam.statusName = this.transData.prevTab\r\n        } else {\r\n          backParam.statusName = this.transData.statusName\r\n        }\r\n        backParam.udsjobsearch = '1'\r\n        this.$emit('switch', Object.assign({}, backParam))\r\n      } else {\r\n        this.$emit(\r\n          'switch',\r\n          Object.assign({}, { statusName: 'table' })\r\n        )\r\n      }\r\n      this.$refs.udsjobForm.validate(valid => {\r\n        if (!valid && this.fromto == '1') return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.current = this.page.current\r\n        params.size = this.page.size\r\n        for (let key in params) {\r\n          if (key === 'job') {\r\n            if (params[key] && params[key] !== '') {\r\n              params[key] = '%' + params[key].trim().toUpperCase() + '%'\r\n            } else {\r\n              delete params[key]\r\n            }\r\n          }\r\n          if (key === 'systems' && params[key]) {\r\n            params[key] = params[key].trim().toUpperCase()\r\n          }\r\n        }\r\n\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectAll',\r\n          params: params\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            if (resp.data.total && resp.data.total > 0) {\r\n              if (resp.data.rows && resp.data.rows.length === 0) {\r\n                this.page.current = 1\r\n                this.search()\r\n              }\r\n            }\r\n            this.gridData = resp.data.rows\r\n            this.page.total = resp.data.total\r\n          })\r\n      })\r\n    },\r\n    findServer () {\r\n      let param = {}\r\n      param.location = 'all'\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getServer',\r\n        params: param\r\n      }\r\n      this.serverData = []\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // let sData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.serverName\r\n            tmp.label = data.serverName\r\n            // sData.push(tmp)\r\n            this.serverData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    execOpt (flag, row, index, column) {\r\n      if (flag == 'invoke') {\r\n        let id = row.job\r\n        if (!row.enable) {\r\n          this.$Message.warning({\r\n            content: '该作业已被禁用，无法invoke',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'invoke', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'invoke', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == '补数') {\r\n        let id = row.job\r\n        if (!row.enable) {\r\n          this.$Message.warning({\r\n            content: '该作业已被禁用，无法补数',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'forcestart', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'forcestart', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == '置虚或实') {\r\n        if (row.virtualEnable == 1) {\r\n          let id = row.job\r\n          this.changeJobVEnable({ virtualEnable: row.virtualEnable, job: id }, index, row)\r\n        } else {\r\n          this.confirmV(row, index)\r\n        }\r\n      } else if (flag == '启用禁用') {\r\n        if (row.lastStatus == 'SUCCESS' || row.lastStatus == 'READY' || row.lastStatus == 'FAILURE') {\r\n          if (row.enable) {\r\n            this.confirmD(row, index)\r\n          } else {\r\n            let id = row.job\r\n            let enable = row.enable ? 0 : 1\r\n            this.changeJobEnable({ enable: enable, job: id }, index, row)\r\n          }\r\n        } else {\r\n          this.$Message.warning({\r\n            content: '当前该作业状态:' + row.lastStatus + '无法禁用',\r\n            duration: 3,\r\n            closable: true\r\n          })\r\n        }\r\n      } else if (flag == '查看脚本') {\r\n        let id = row.job\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'script', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'script', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == 'kill作业') {\r\n        this.confirmBtn(row)\r\n      }\r\n    },\r\n    handleTreeData (data) {\r\n      data.forEach((data, index) => {\r\n        data.expand = false\r\n        let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n        let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n        data.title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n        if (data.children.length == 0) {\r\n          data.expand = false\r\n          data.children = []\r\n        } else {\r\n          this.handleTreeData(data.children)\r\n        }\r\n      })\r\n    },\r\n    renderContent (h, { root, node, data }) {\r\n      let col = '#515a6e'\r\n      if (data.udsJob) {\r\n        if (!data.udsJob.enable) { // 作业禁用\r\n          col = 'red'\r\n        }\r\n      }\r\n      return h('span', {\r\n        style: {\r\n          display: 'inline-block',\r\n          width: '100%'\r\n        }\r\n      }, [\r\n        h('span', [\r\n          h('a', {\r\n            style: {\r\n              color: col\r\n            },\r\n            class: {\r\n              treeTitle: true\r\n            },\r\n            on: {\r\n              click: () => {\r\n                let job = data.id ? data.id : data.title\r\n                this.jobDetailBean = {}\r\n                let params = {}\r\n                params.job = job\r\n                params.platform = data.udsJobMenu.platform\r\n                params.systems = data.udsJobMenu.systems\r\n                let httpConfig = {\r\n                  method: 'GET',\r\n                  url: RESOURCE_PATH + '/selectJobDetail',\r\n                  params: params\r\n                }\r\n                this.$ajax(httpConfig)\r\n                  .then(resp => {\r\n                    this.jobDetailBean = resp.data.rows\r\n                    this.jobDrawer.show = true\r\n                  })\r\n              }\r\n            }\r\n          }, data.title)\r\n        ])\r\n      ])\r\n    },\r\n    // 上游\r\n    getUpstreamData (job, level, row) {\r\n      if (!level) {\r\n        this.upstreamData = []\r\n        let obj = {\r\n          title: job,\r\n          loading: false,\r\n          expand: false,\r\n          children: [],\r\n          platform: row.platform,\r\n          systems: row.systems\r\n        }\r\n        this.upstreamData.push(obj)\r\n      }\r\n      let params = {}\r\n      params.job = job\r\n      params.level = level || '1'\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allUpjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // console.log('上游')\r\n          // console.log(resp.data)\r\n          if (resp.status && resp.status === 200) {\r\n            let tmpUpobsTree = this.upstreamData\r\n            tmpUpobsTree[0].expand = true\r\n            // let treeData = []\r\n            if (resp.data.length > 0) {\r\n              resp.data.forEach((data, index) => {\r\n                resp.data[index].loading = false\r\n                let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n                let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n                resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n                if (data.children.length == 0) {\r\n                  data.children = []\r\n                  data.expand = false\r\n                } else {\r\n                  data.expand = false\r\n                  this.handleTreeData(data.children)\r\n                }\r\n              })\r\n              tmpUpobsTree[0].children = resp.data\r\n              this.upstreamData = tmpUpobsTree\r\n            }\r\n          }\r\n        })\r\n    },\r\n    loadUpData (item, callback) {\r\n      let params = {}\r\n      params.job = item.id ? item.id : item.title\r\n      params.level = '1'\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allUpjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          let data = []\r\n          let tmp = {}\r\n          if (resp.data.length == 0) {\r\n            this.$Message.info('该作业已经没有上游了')\r\n          }\r\n          resp.data.forEach(node => {\r\n            let udsjob = node.udsJobMenu // lastStatus jobDate jobType\r\n            tmp = {}\r\n            let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n            tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n            // tmp.title = node.id\r\n            tmp.id = node.id\r\n            tmp.loading = false\r\n            tmp.children = []\r\n            data.push(tmp)\r\n          })\r\n          callback(data)\r\n        })\r\n    },\r\n    // 下游\r\n    getDownstreamData (job, level, row) {\r\n      if (!level) {\r\n        this.downstreamData = []\r\n        let obj = {\r\n          title: job,\r\n          loading: false,\r\n          expand: false,\r\n          children: [],\r\n          platform: row.platform,\r\n          systems: row.systems\r\n        }\r\n        this.downstreamData.push(obj)\r\n      }\r\n\r\n      let params = {}\r\n      params.job = job\r\n      params.level = level || '1'\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allDownjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // console.log('下游')\r\n          // console.log(resp.data)\r\n          if (resp.status && resp.status === 200) {\r\n            let tmpDownobsTree = this.downstreamData\r\n            tmpDownobsTree[0].expand = true\r\n            // let treeData = []\r\n            if (resp.data.length > 0) {\r\n              resp.data.forEach((data, index) => {\r\n                resp.data[index].loading = false\r\n                let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n                let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n                resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n                if (data.children.length == 0) {\r\n                  data.children = []\r\n                  data.expand = false\r\n                } else {\r\n                  data.expand = false\r\n                  this.handleTreeData(data.children)\r\n                }\r\n              })\r\n              tmpDownobsTree[0].children = resp.data\r\n              this.downstreamData = tmpDownobsTree\r\n            }\r\n          }\r\n        })\r\n    },\r\n    // renderDownContent\r\n    loadDownData (item, callback) {\r\n      let params = {}\r\n      params.job = item.id ? item.id : item.title\r\n      params.level = '1'\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allDownjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          let data = []\r\n          let tmp = {}\r\n          if (resp.data.length == 0) {\r\n            this.$Message.info('该作业已经没有下游了')\r\n          }\r\n          resp.data.forEach(node => {\r\n            let udsjob = node.udsJobMenu // lastStatus jobDate jobType\r\n            let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n            tmp = {}\r\n            tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n            // tmp.title = node.id\r\n            tmp.id = node.id\r\n            tmp.loading = false\r\n            tmp.children = []\r\n            data.push(tmp)\r\n          })\r\n          callback(data)\r\n        })\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.platform)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n    *改变作业是否enable状态\r\n    **/\r\n    changeJobEnable (params, index, row) {\r\n      // console.log(this.$store.getters.getBreadcrumb);\r\n      // params.authps = row.platform + row.system\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: '/udsJobConfig/setEnable',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingdisable = false\r\n          if (resp.status && resp.status == 200) {\r\n            this.gridData[index].enable = params.enable\r\n            this.confirmDisable.show = false\r\n          }\r\n        })\r\n    },\r\n    /**\r\n    *改变作业是否虚作业状态\r\n    **/\r\n    changeJobVEnable (params, index, row) {\r\n      if (params.virtualEnable === 1) {\r\n        params.virtualEnable = 0\r\n      } else if (params.virtualEnable === 0) {\r\n        params.virtualEnable = 1\r\n      }\r\n      // params.authps = row.platform + row.system\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      params.virtual = params.virtualEnable\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: '/udsJobConfig/setVirtual',\r\n        data: params\r\n      }\r\n      // httpConfig.method = 'PUT'\r\n      // httpConfig.url = '/udsjobconfig/' + params.job\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingvitual = false\r\n          if (resp.status && resp.status == 200) {\r\n            this.gridData[index].virtualEnable = params.virtualEnable\r\n            this.confirmVi.show = false\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n     * 列排序\r\n     **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      // console.log(\"column,key,order\"+ column.key );\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    // harrier getPlatformList\r\n    getPlatformList () {\r\n      // let loadConfig = {\r\n      //   method: 'GET',\r\n      //   url: '/udsSystem/listQuery'\r\n      // }\r\n      // this.$ajax(loadConfig)\r\n      //   .then(resp => {\r\n      //     let platformList = []\r\n      //     resp.data.forEach(data => {\r\n      //       platformList.push(data.platform)\r\n      //       // this.formBean.platform = \"UDS\";\r\n      //     })\r\n      //     platformList = Array.from(new Set(platformList))\r\n      //     platformList.forEach(data => {\r\n      //       let tmp = {}\r\n      //       tmp.value = data\r\n      //       tmp.label = data\r\n      //       this.platformData.push(tmp)\r\n      //       // this.formBean.platform = \"UDS\";\r\n      //     })\r\n      //     this.search()\r\n      //   })\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      this.search()\r\n      this.queryJobstatus()\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      // let loadConfig = {\r\n      //   method: 'GET',\r\n      //   url: '/udsSystem/listQuery'\r\n      // }\r\n      // this.systemData = []\r\n      // this.$refs.refsystem.setQuery('')\r\n      // if (this.formBean.platform) {\r\n      //   this.$ajax(loadConfig)\r\n      //     .then(resp => {\r\n      //       resp.data.forEach(data => {\r\n      //         if (this.formBean.platform === data.platform && data.systems !== '*') {\r\n      //           let tmp = {}\r\n      //           tmp.value = data.systems\r\n      //           tmp.label = data.systems\r\n      //           this.systemData.push(tmp)\r\n      //         }\r\n      //       })\r\n      //     })\r\n      // }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    // harrier test end\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          this.search()\r\n          this.queryjobtypeList()\r\n          this.queryDBControList()\r\n          this.queryStreamTypeList()\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      // modify by jcjin 20200528 for systemData返回值由对象调整为集合\r\n      //    this.$ajax(loadConfig)\r\n      //      .then(resp => {\r\n      //        if (this.transData.formBean && this.transData.formBean.system) {\r\n      //        this.formBean.system = this.transData.formBean.system;\r\n      //      } else {\r\n      //        this.formBean.system = \"\";\r\n      //      }\r\n      //      this.systemData = resp.data;\r\n      //\r\n      //    })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    queryJobstatus () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: { dicCode: 'jobStatus' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobstatusData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.dicValue\r\n            tmp.label = data.dicValue\r\n            this.jobstatusData.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n        })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    confirmBtn (row) {\r\n      if (!(row.lastStatus == 'Running')) {\r\n        this.$Message.error({\r\n          content: '当前作业状态不为Running',\r\n          duration: 15,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      this.confirm.job = row.job\r\n      this.confirm.row = row\r\n      this.confirm.show = true\r\n      // let id = row.job\r\n      // this.$emit('switch', Object.assign({}, { id: id, statusName: 'killjob', jobData: row }, this.getPageParam()))\r\n    },\r\n    confirmV (row, index) {\r\n      this.confirmVi.show = true\r\n      this.confirmVi.row = row\r\n      this.confirmVi.index = index\r\n    },\r\n    vitualJob () {\r\n      if (!this.res.isAgree == true) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      let id = this.confirmVi.row.job\r\n      this.loadingvitual = true\r\n      this.changeJobVEnable({ virtualEnable: this.confirmVi.row.virtualEnable, job: id }, this.confirmVi.index, this.confirmVi.row)\r\n    },\r\n    vitualCancel () {\r\n      this.confirmVi.show = false\r\n    },\r\n    confirmD (row, index) {\r\n      this.confirmDisable.show = true\r\n      this.confirmDisable.row = row\r\n      this.confirmDisable.index = index\r\n    },\r\n    disableJob () {\r\n      if (!this.res.isAgree == true) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      let id = this.confirmDisable.row.job\r\n      let enable = this.confirmDisable.row.enable ? 0 : 1\r\n      this.loadingdisable = true\r\n      this.changeJobEnable({ isAgree: this.res.isAgree, enable: enable, job: id }, this.confirmDisable.index, this.confirmDisable.row)\r\n    },\r\n    disableCancel () {\r\n      this.confirmDisable.show = false\r\n    },\r\n    confirmCancel () {\r\n      this.confirm.job = ''\r\n      this.confirm.row = null\r\n      this.confirm.show = false\r\n    },\r\n    confirmBatchForceStartCancel () {\r\n      this.confirmBatchForceStart.show = false\r\n    },\r\n    batchForceStartConfirm () {\r\n      // this.findServer()\r\n      this.confirmBatchForceStart.show = true\r\n    },\r\n    batchForceStart () {\r\n      this.$refs.confirmBatchForceStartForm.validate(valid => {\r\n        if (!valid) return\r\n        if (!this.confirmBatchForceStart.isAgree) {\r\n          this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n          return\r\n        }\r\n        const selectSystems = Array.from(this.selection, e => e.platform + e.system)\r\n        if (selectSystems.length < 1) {\r\n          this.$Message.warning('请至少选择一行')\r\n          return\r\n        }\r\n        let authSystems = store.getters.getSystems\r\n        let isExist = true\r\n        if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n          // 非系统管理员\r\n          for (let i = 0; i < selectSystems.length; i++) {\r\n            for (let j = 0; j < authSystems.length; j++) {\r\n              if (selectSystems[i] == authSystems[j]) {\r\n                isExist = false\r\n              }\r\n            }\r\n            if (isExist) {\r\n              this.$Message.warning('该用户没有' + selectSystems[i] + '权限')\r\n              return true\r\n            }\r\n          }\r\n        }\r\n        const ids = Array.from(this.selection, e => e.job)\r\n        let jobArr = ''\r\n        ids.forEach(id => {\r\n          if (jobArr == '') {\r\n            jobArr = id\r\n          } else {\r\n            jobArr = jobArr + '/' + id\r\n          }\r\n        })\r\n        let params = {}\r\n        Object.assign(params, this.forceStartFormBean)\r\n        params.datalist = this.selection\r\n        params.reqparams = {}\r\n        params.requesttype = 'lo'\r\n        params.udsjob = this.forceStartFormBean\r\n        params.reqparams = this.forceStartFormBean\r\n        params.reqparams.jobDate = utils.fmtDate(this.forceStartFormBean.jobDate, 'yyyyMMdd')\r\n        params.reqparams.serverName = this.forceStartFormBean.serverName\r\n        params.reqparams.jobArr = jobArr\r\n        params.authps = selectSystems[0]// this.formBean.platform + this.formBean.system;\r\n        // alert(params.authps);\r\n        this.loadingBatchFC = true\r\n        let httpConfig = {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH + '/batchForcestart',\r\n          data: params\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            setTimeout(() => {\r\n              this.loading = false\r\n            }, 2000)\r\n            if (resp.data.returnCode != null &&\r\n              resp.data.returnCode !== 'undefined' &&\r\n              resp.data.returnCode === 'fail') {\r\n              this.loadingBatchFC = false\r\n              // this.ctrlloadingBatchFCDisable = true\r\n              return\r\n            }\r\n            if (resp.data === 'success') {\r\n              this.ctrlloadingBatchFCDisable = true\r\n              this.ctrlloadingBatchADisable = true\r\n              this.loadingBatchFC = false\r\n              this.ctrlloadingBatchFCDisable = true\r\n              this.confirmBatchForceStart.show = false\r\n              this.search()\r\n            }\r\n          })\r\n      })\r\n    },\r\n\r\n    confirmBatchActiveCancel () {\r\n      this.confirmBatchActive.show = false\r\n    },\r\n    batchActiveConfirm () {\r\n      this.confirmBatchActive.show = true\r\n    },\r\n    batchActive () {\r\n      if (!this.confirmBatchActive.isAgree) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      const selectSystems = Array.from(this.selection, e => e.platform + e.system)\r\n      if (selectSystems.length < 1) {\r\n        this.$Message.warning('请至少选择一行')\r\n        return\r\n      }\r\n      let authSystems = store.getters.getSystems\r\n      let isExist = true\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        // 非系统管理员\r\n        for (let i = 0; i < selectSystems.length; i++) {\r\n          for (let j = 0; j < authSystems.length; j++) {\r\n            if (selectSystems[i] == authSystems[j]) {\r\n              isExist = false\r\n            }\r\n          }\r\n          if (isExist) {\r\n            this.$Message.warning('该用户没有' + selectSystems[i] + '权限')\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      const ids = Array.from(this.selection, e => e.job)\r\n      let jobArr = ''\r\n      ids.forEach(id => {\r\n        if (jobArr == '') {\r\n          jobArr = id\r\n        } else {\r\n          jobArr = jobArr + '/' + id\r\n        }\r\n      })\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.jobArr = jobArr\r\n      params.authps = selectSystems[0]// this.formBean.platform + this.formBean.system;\r\n      this.loadingBatchA = true\r\n      // alert(params.authps);\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: RESOURCE_PATH + '/batchActive',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.ctrlloadingBatchFCDisable = true\r\n          this.ctrlloadingBatchADisable = true\r\n          this.confirmBatchActive.show = false\r\n          this.loadingBatchA = false\r\n          this.search()\r\n        })\r\n    },\r\n    killJob () {\r\n      let row = this.confirm.row\r\n      let params = {}\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      params.jobdate = row.jobDate\r\n      params.multibatch = row.multiBatch\r\n\r\n      // let row = this.confirm.row\r\n      // let params = this.confirm.row\r\n      // params.authps = row.platform + row.system\r\n      // console.log(this.$store.getters.getBreadcrumb);\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: RESOURCE_PATH + '/killJob',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status == 200) {\r\n            if (resp.data === 1) {\r\n              this.confirm.show = false\r\n              this.$Message.success({\r\n                content: 'kill作业：' + row.job + '成功！',\r\n                duration: 15,\r\n                closable: true\r\n              })\r\n              this.search()\r\n            } else {\r\n              this.$Message.error({\r\n                content: 'kill作业：' + row.job + '失败！',\r\n                duration: 15,\r\n                closable: true\r\n              })\r\n            }\r\n            this.confirm.show = false\r\n          }\r\n        })\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryDBControList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.dbControlList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.dbControlList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.getPlatformList()\r\n    // this.queryPlatform()\r\n    // this.findServer()\r\n    // 作业列表菜单权限控制\r\n    // const authSystems = this.$store.getters.getSystems\r\n    /* const authSystems = sessionStorage.systems.split(',')\r\n    if (authSystems.includes('ROLE_ADMIN') ||\r\n      authSystems.includes('ROLE_PLAT')) {\r\n\r\n    } else {\r\n      this.dropdownItems = [{ val: '补数' }, { val: '置虚或实' }]\r\n    } */\r\n\r\n    // console.log(this.$refs.uptree.getSelectedNodes())\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length != 0) {\r\n        this.ctrlloadingBatchFCDisable = false\r\n        this.ctrlloadingBatchADisable = false\r\n      } else {\r\n        this.ctrlloadingBatchFCDisable = true\r\n        this.ctrlloadingBatchADisable = true\r\n      }\r\n    },\r\n    /*  作业列表修改属性后重新查询数据库  */\r\n    transData: function (val, oldVal) {\r\n      if (this.transData.showTable) {\r\n        this.$refs.udsjobForm.validate(valid => {\r\n          if (!valid && this.fromto == '1') return\r\n          let params = {}\r\n          Object.assign(params, this.formBean)\r\n          params.current = this.page.current\r\n          params.size = this.page.size\r\n          for (let key in params) {\r\n            if (key === 'job') {\r\n              if (params[key] && params[key] !== '') {\r\n                params[key] = '%' + params[key].trim().toUpperCase() + '%'\r\n              } else {\r\n                delete params[key]\r\n              }\r\n            }\r\n            if (key == 'system' && params[key]) {\r\n              params[key] = params[key].trim().toUpperCase()\r\n            }\r\n          }\r\n\r\n          let httpConfig = {\r\n            method: 'GET',\r\n            url: RESOURCE_PATH + '/selectAll',\r\n            params: params\r\n          }\r\n          this.$ajax(httpConfig)\r\n            .then(resp => {\r\n            // console.log(resp);\r\n              if (resp.data.total && resp.data.total > 0) {\r\n                if (resp.data.rows && resp.data.rows.length === 0) {\r\n                  this.page.current = 1\r\n                  this.search()\r\n                }\r\n              }\r\n              this.gridData = resp.data.rows\r\n              this.page.total = resp.data.total\r\n            })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n<style>\r\n#joblistTable table td div{\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n}\r\n#joblistTable table th div{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n#confirmM .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmD .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmV .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmBatchActive .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#confirmBatchForceStart .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#upAndDownstream .ivu-modal-body{\r\n  width:100%;\r\n}\r\n#upAndDownstream .ivu-modal-wrap{\r\n  z-index: 1500 !important;\r\n}\r\n#upAndDownstream .ivu-modal-mask{\r\n  z-index: 1500 !important;\r\n}\r\n#drawerClass .ivu-drawer-wrap{\r\n  z-index: 3000 !important;\r\n}\r\n#drawerClass .ivu-drawer-mask{\r\n  z-index: 3000 !important;\r\n}\r\n.jobdetailclass {\r\n  background: #eee;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  line-height: 340%;\r\n}\r\n.jobdetailclass .ivu-col .span{\r\n  font-size: 14px;\r\n  margin-left: 2%;\r\n}\r\n\r\n.treeTitle:hover {\r\n  background-color: #daedf9;\r\n}\r\n.treeTitle:visited {\r\n  background-color: #daedf9;\r\n}\r\n</style>\r\n"],"mappings":"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UAAA;oBAAAC,OAAA,EAAA5C;kBAAA,GAAA7B,KAAA,CAAA0E,YAAA;gBACA;kBACA1E,KAAA,CAAAsE,KAAA,WAAA1E,MAAA,CAAA2E,MAAA;oBAAAH,EAAA,EAAAA,EAAA;oBAAAI,UAAA;oBAAAC,OAAA,EAAA5C;kBAAA,GAAA7B,KAAA,CAAA0E,YAAA;gBACA;cACA;YACA;UACA,OACA;QACA;MACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA;QACAvB,KAAA;QACAF,KAAA;QACAC,KAAA;QACA;QACAO,MAAA,WAAAA,OAAAC,CAAA,EAAAqD,MAAA;UAAA,IAAAnD,MAAA,GAAAmD,MAAA,CAAAnD,MAAA;YAAAC,KAAA,GAAAkD,MAAA,CAAAlD,KAAA;YAAAhC,GAAA,GAAAkF,MAAA,CAAAlF,GAAA;UACA,OAAA6B,CAAA,SACAA,CAAA;YACAjE,KAAA;cACAyG,IAAA;YACA;YACAnC,KAAA;cACA;cACAoC,MAAA;cACAC,QAAA;cACAC,MAAA;cACAC,OAAA;cACAtC,KAAA;cACA8C,UAAA;YACA;YACA5C,EAAA;cACAC,KAAA,WAAAA,MAAA;gBACA,KAAAtC,GAAA,CAAAoC,MAAA;kBACAjE,KAAA,CAAAkF,QAAA,CAAA8B,KAAA;oBACAC,OAAA;oBACAC,QAAA;oBACAC,QAAA;kBACA;kBACA;gBACA;gBACA,IAAA/C,EAAA,GAAAvC,GAAA,CAAAD,GAAA;gBACA,MAAAC,GAAA,CAAA2D,UAAA,kB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"}]}