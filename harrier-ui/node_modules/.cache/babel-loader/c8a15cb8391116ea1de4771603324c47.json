{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\tree-select\\tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\tree-select\\tree-select.vue","mtime":1681468306483},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Emitter from 'iview/src/mixins/emitter';\nimport TreeSelectTreeItem from \"./tree-select-tree.vue\";\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem: TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loadData: Function\n  },\n  data: function data() {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    };\n  },\n  provide: function provide() {\n    return {\n      parent: this\n    };\n  },\n  methods: {\n    handleChange: function handleChange(selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected);\n      this.isChangedByTree = false;\n    },\n    handleTreeCheck: function handleTreeCheck(selectedArray) {\n      this.isChangedByTree = true;\n      this.$emit('input', selectedArray.map(function (item) {\n        return item.id;\n      }));\n    },\n    handleClear: function handleClear() {\n      this.$refs.select.reset();\n    }\n  }\n};",{"version":3,"names":["Emitter","TreeSelectTreeItem","name","mixins","components","props","value","type","Array","default","_default","data","loadData","Function","isChangedByTree","isInit","provide","parent","methods","handleChange","selected","$emit","handleTreeCheck","selectedArray","map","item","id","handleClear","$refs","select","reset"],"sources":["src/components/tree-select/tree-select.vue"],"sourcesContent":["<template>\r\n  <Select\r\n    ref=\"select\"\r\n    class=\"tree-select\"\r\n    v-bind=\"$attrs\"\r\n    @on-change=\"handleChange\"\r\n    multiple\r\n  >\r\n    <tree-select-tree-item\r\n      :selectedArray=\"value\"\r\n      :data=\"data\"\r\n      @on-clear=\"handleClear\"\r\n      :load-data=\"loadData\"\r\n      @on-check=\"handleTreeCheck\"\r\n    ></tree-select-tree-item>\r\n  </Select>\r\n</template>\r\n\r\n<script>\r\nimport Emitter from 'iview/src/mixins/emitter'\r\nimport TreeSelectTreeItem from './tree-select-tree.vue'\r\nexport default {\r\n  name: 'TreeSelect',\r\n  mixins: [Emitter],\r\n  components: {\r\n    TreeSelectTreeItem\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loadData: Function\r\n  },\r\n  data () {\r\n    return {\r\n      isChangedByTree: true,\r\n      isInit: true\r\n    }\r\n  },\r\n  provide () {\r\n    return {\r\n      parent: this\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (selected) {\r\n      if (!this.isChangedByTree) this.$emit('input', selected)\r\n      this.isChangedByTree = false\r\n    },\r\n    handleTreeCheck (selectedArray) {\r\n      this.isChangedByTree = true\r\n      this.$emit('input', selectedArray.map(item => item.id))\r\n    },\r\n    handleClear () {\r\n      this.$refs.select.reset()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.tree-select {\r\n  .ivu-select-dropdown {\r\n    padding: 0 6px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAmBA,OAAAA,OAAA;AACA,OAAAC,kBAAA;AACA;EACAC,IAAA;EACAC,MAAA,GAAAH,OAAA;EACAI,UAAA;IACAH,kBAAA,EAAAA;EACA;EACAI,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,IAAA;MACAJ,IAAA,EAAAC,KAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAE,QAAA,EAAAC;EACA;EACAF,IAAA,WAAAA,KAAA;IACA;MACAG,eAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA,WAAAA,aAAAC,QAAA;MACA,UAAAN,eAAA,OAAAO,KAAA,UAAAD,QAAA;MACA,KAAAN,eAAA;IACA;IACAQ,eAAA,WAAAA,gBAAAC,aAAA;MACA,KAAAT,eAAA;MACA,KAAAO,KAAA,UAAAE,aAAA,CAAAC,GAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,EAAA;MAAA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAC,KAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;EACA;AACA"}]}