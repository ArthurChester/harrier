{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Table.vue","mtime":1681468306502},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/web.dom.iterable\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/alarm/send';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      ctrlDisable: true,\n      loadingdel: false,\n      loadingsync: false,\n      formBean: {},\n      platformList: [],\n      systemList: [],\n      alarmIdList: [],\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      gridColumns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n        // fixed: 'left'\n      }, {\n        title: '联系组',\n        width: 90,\n        align: 'center',\n        key: 'groupName',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.showCuInfo(row);\n              }\n            }\n          }, row.groupName)]);\n        }\n      }, {\n        title: '发送状态',\n        key: 'sendStatus',\n        align: 'center',\n        minWidth: 95\n      }, {\n        title: '发送类型',\n        key: 'sendType',\n        align: 'center',\n        minWidth: 95\n      }, {\n        title: '发送参数',\n        key: 'sendParams',\n        align: 'center',\n        minWidth: 130\n      }, {\n        title: '标题',\n        key: 'title',\n        align: 'center',\n        minWidth: 95\n      }, {\n        title: '发送内容',\n        key: 'content',\n        align: 'center',\n        minWidth: 100\n      }, {\n        title: '附件路径',\n        key: 'filePath',\n        align: 'center',\n        minWidth: 95\n      }, {\n        title: '发送异常',\n        key: 'expcetion',\n        align: 'center',\n        minWidth: 95\n      }, {\n        title: '发送时间',\n        key: 'sendTime',\n        align: 'center',\n        minWidth: 130\n      }, {\n        title: '生成时间',\n        key: 'createTime',\n        align: 'center',\n        minWidth: 130\n      }, {\n        title: '备注',\n        key: 'remark',\n        align: 'center',\n        minWidth: 100\n      }\n      // {\n      //   title: '操作',\n      //   align: 'center',\n      //   minWidth: 80,\n      //   // fixed: 'right',\n      //   render: (h, { column, index, row }) => {\n      //     return h('div', [\n      //       h('Button', {\n      //         props: {\n      //           size: 'small',\n      //           type: 'info'\n      //         },\n      //         style: {\n      //           marginRight: '5px'\n      //         },\n      //         on: {\n      //           click: () => {\n      //             this.$emit('switch', Object.assign({}, { row: row, formBean: this.formBean }, this.getPageParam()))\n      //           }\n      //         }\n      //       }, '编辑')\n      //     ])\n      //   }\n      // }\n      ],\n\n      gridData: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      cuInfo: {\n        show: false\n      },\n      showSendTypeData: [],\n      cuInfoFormBean: {},\n      sendTypeDataBean: {},\n      ruleValidate: {}\n    };\n  },\n  watch: {\n    selection: function selection(val) {\n      if (val.length != 0) {\n        this.ctrlDisable = false;\n      } else {\n        this.ctrlDisable = true;\n      }\n    }\n  },\n  methods: {\n    loadplat: function loadplat() {\n      var _this2 = this;\n      this.platformList = [];\n      var loadConfig = {\n        method: 'GET',\n        url: 'msys/getPlatformList',\n        params: {\n          platformType: '1,2'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1;\n            temp.value = data1;\n            temp.label = data1;\n            _this2.platformList.push(temp);\n          });\n        }\n      });\n    },\n    // 同步\n    sync: function sync() {\n      var _this3 = this;\n      // 同步\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/sync'\n      };\n      this.loadingsync = true;\n      this.$ajax(loadConfig).then(function (resp) {\n        _this3.loadingsync = false;\n        if (resp.data == '1') {\n          _this3.$Notice.success({\n            title: '信息',\n            desc: '同步成功'\n          });\n        } else {\n          _this3.$Notice.error({\n            title: '信息',\n            desc: '同步失败'\n          });\n        }\n        _this3.search();\n      });\n    },\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      if (this.transData.group_name) {\n        this.formBean.group_name = this.transData.group_name;\n      }\n      if (this.transData.currentPage) {\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      this.search();\n      this.getsendTypeList();\n    },\n    getsendTypeList: function getsendTypeList() {\n      var _this4 = this;\n      var httpConfig = {\n        method: 'GET',\n        url: '/alarm/group/sendType'\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.data) {\n          _this4.sendTypeList = [];\n          var keys = Object.keys(resp.data);\n          var values = Object.values(resp.data);\n          for (var i = 0; i < keys.length; i++) {\n            var valueData = values[i];\n            var sendType = keys[i].split(';');\n            _this4.sendTypeDataBean[sendType[0]] = valueData;\n          }\n        }\n      });\n    },\n    showCuInfo: function showCuInfo(row) {\n      var _this5 = this;\n      this.showSendTypeData = [];\n      this.cuInfoFormBean = {};\n      this.cuInfo.show = true;\n      var config = {\n        method: 'GET',\n        url: '/alarm/group/getDetailByGroupName',\n        params: {\n          groupName: row.groupName\n        }\n      };\n      this.$ajax(config).then(function (resp) {\n        if (resp.data && resp.data.length > 0) {\n          _this5.cuInfoFormBean = resp.data[0];\n          var oldSendType = JSON.parse(_this5.cuInfoFormBean.sendParams);\n          var sendTypeData = _this5.sendTypeDataBean[_this5.cuInfoFormBean.sendType];\n          // 循环取出自定义的key和系统中的key\n          var oldSendTypeKeys = Object.keys(oldSendType);\n          for (var i = 0; i < oldSendTypeKeys.length; i++) {\n            var key = oldSendTypeKeys[i];\n            var showKey = key;\n            for (var j = 0; j < sendTypeData.length; j++) {\n              if (key === sendTypeData[j][1]) {\n                showKey = sendTypeData[j][0];\n                break;\n              }\n            }\n            var param = [];\n            param.push(showKey);\n            param.push(oldSendType[key]);\n            _this5.showSendTypeData.push(param);\n          }\n        }\n      });\n    },\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this6 = this;\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.current = this.page.current;\n      params.size = this.page.size;\n      if (this.formBean.group_name) {\n        params.currentPage = 1;\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH,\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this6.gridData = resp.data.records;\n        _this6.page.total = resp.data.total;\n      });\n    },\n    /**\r\n    * 清空\r\n    **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n    * 新增\r\n    **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n    * 删除\r\n    **/\n    del: function del() {\n      var _this7 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.id;\n      });\n      ids.forEach(function (id) {\n        _this7.request.delReq.url = RESOURCE_PATH + '/delete';\n        _this7.request.delReq.method = 'DELETE';\n        _this7.request.delReq.params = {};\n        _this7.request.delReq.params.id = id;\n        _this7.loadingdel = true;\n        _this7.$ajax(_this7.request.delReq).then(function (resp) {\n          _this7.loadingdel = false;\n          _this7.search();\n        });\n      });\n    },\n    /**\r\n    * 数据复选事件\r\n    **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.alarmBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      // alert(currentPage);\n\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    }\n  },\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    this.init();\n    //  this.loadplat()\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","ctrlDisable","loadingdel","loadingsync","formBean","platformList","systemList","alarmIdList","request","delReq","method","url","addReq","gridColumns","width","align","title","key","render","h","_ref","column","index","row","size","style","on","click","showCuInfo","groupName","minWidth","gridData","selection","page","current","total","opt","cuInfo","show","showSendTypeData","cuInfoFormBean","sendTypeDataBean","ruleValidate","watch","val","length","methods","loadplat","_this2","loadConfig","params","platformType","$ajax","then","resp","forEach","data1","temp","value","label","push","sync","_this3","$Notice","success","desc","error","search","init","group_name","currentPage","pageSize","getsendTypeList","_this4","httpConfig","sendTypeList","keys","values","i","valueData","sendType","split","_this5","config","oldSendType","JSON","parse","sendParams","sendTypeData","oldSendTypeKeys","showKey","j","param","bindData","fields","assign","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","err","e","f","console","download","_this6","records","clear","add","$emit","del","_this7","ids","Array","from","id","select","getPageParam","alarmBean","changePage","changePageSize","mounted"],"sources":["src/view/app/alarm/alarmsendqueue/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form ref=\"alarmsettingForm\" :model=\"formBean\" :label-width=\"80\" :rules='ruleValidate'>\r\n        <Row>\r\n        \r\n          <!--<Col span=\"3\">\r\n            <Form-Item prop=\"code\" label=\"报警码\" >\r\n              <Select v-model=\"formBean.code\" style=\"width:100px\" filterable  clearable>\r\n                <Option v-for=\"item in alarmIdList\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>-->\r\n          <!-- <Col span=\"3\">\r\n            <Form-Item prop=\"code\" label=\"报警码\">\r\n              <Input  v-model=\"formBean.code\"/>\r\n            </Form-Item>\r\n          </Col>  -->\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div class=\"spdb-toolbar\">\r\n      <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n      <!-- <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</Button> -->\r\n      <Button type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</Button>\r\n      <!--<Button type=\"primary\" :loading=\"loadingsync\" icon=\"ios-sync\" @click=\"sync\">同步</Button>-->\r\n\r\n    </div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n    \t\t<Modal\r\n\t\t\tv-model=\"cuInfo.show\"\r\n\t\t\ttitle=\"联系组详细信息\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :model=\"cuInfoFormBean\" ref=\"cuInfoHandleForm\" :label-width=\"90\" inline>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"platform\" label=\"平台\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.platform\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"systems\" label=\"应用\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.systems\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem  style='width:75%' prop=\"groupName\" label=\"组名\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.groupName\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"sendType\" label=\"发送类型\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.sendType\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row  v-for=\"(infor, i) in showSendTypeData\" :key=\"`infor-${i}`\">\r\n              <FormItem  style='width:75%'  :label=\"infor[0]\">\r\n                <Input readonly v-model=\"infor[1]\" />\r\n              </FormItem>\r\n            </Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/alarm/send'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      ctrlDisable: true,\r\n      loadingdel: false,\r\n      loadingsync: false,\r\n      formBean: {},\r\n      platformList: [],\r\n      systemList: [],\r\n      alarmIdList: [],\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        {\r\n          title: '联系组',\r\n          width: 90,\r\n          align: 'center',\r\n          key: 'groupName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showCuInfo(row)\r\n                  }\r\n                }\r\n              }, \r\n              row.groupName)\r\n            ])\r\n          }\r\n        },\r\n\r\n        {\r\n          title: '发送状态',\r\n          key: 'sendStatus',\r\n          align: 'center',\r\n          minWidth: 95\r\n        },\r\n        {\r\n          title: '发送类型',\r\n          key: 'sendType',\r\n          align: 'center',\r\n          minWidth: 95\r\n        },\r\n        {\r\n          title: '发送参数',\r\n          key: 'sendParams',\r\n          align: 'center',\r\n          minWidth: 130\r\n        },\r\n        {\r\n          title: '标题',\r\n          key: 'title',\r\n          align: 'center',\r\n          minWidth: 95\r\n        },\r\n        {\r\n          title: '发送内容',\r\n          key: 'content',\r\n          align: 'center',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '附件路径',\r\n          key: 'filePath',\r\n          align: 'center',\r\n          minWidth: 95\r\n        },\r\n        {\r\n          title: '发送异常',\r\n          key: 'expcetion',\r\n          align: 'center',\r\n          minWidth: 95\r\n        },\r\n        {\r\n          title: '发送时间',\r\n          key: 'sendTime',\r\n          align: 'center',\r\n          minWidth: 130\r\n        },\r\n        {\r\n          title: '生成时间',\r\n          key: 'createTime',\r\n          align: 'center',\r\n          minWidth: 130\r\n        },\r\n        {\r\n          title: '备注',\r\n          key: 'remark',\r\n          align: 'center',\r\n          minWidth: 100\r\n        },\r\n        // {\r\n        //   title: '操作',\r\n        //   align: 'center',\r\n        //   minWidth: 80,\r\n        //   // fixed: 'right',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.$emit('switch', Object.assign({}, { row: row, formBean: this.formBean }, this.getPageParam()))\r\n        //           }\r\n        //         }\r\n        //       }, '编辑')\r\n        //     ])\r\n        //   }\r\n        // }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      \r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      cuInfo: {\r\n        show: false\r\n      },\r\n      showSendTypeData: [],\r\n      cuInfoFormBean: {},\r\n      sendTypeDataBean: {},\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      \r\n      if (val.length != 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    loadplat: function () {\r\n      this.platformList = []\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'msys/getPlatformList',\r\n        params: { platformType: '1,2' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1\r\n            temp.value = data1\r\n            temp.label = data1\r\n            this.platformList.push(temp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 同步\r\n    sync () {\r\n      // 同步\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/sync'\r\n      }\r\n      this.loadingsync = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.loadingsync = false\r\n          if (resp.data == '1') {\r\n            this.$Notice.success({\r\n              title: '信息',\r\n              desc: '同步成功'\r\n            })\r\n          } else {\r\n            this.$Notice.error({\r\n              title: '信息',\r\n              desc: '同步失败'\r\n            })\r\n          }\r\n          this.search()\r\n        })\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.group_name) {\r\n        this.formBean.group_name = this.transData.group_name\r\n      }\r\n      if (this.transData.currentPage) {\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n      this.getsendTypeList()\r\n    },\r\n    getsendTypeList () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/group/sendType'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.sendTypeList = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let valueData = values[i]\r\n              let sendType = keys[i].split(';')\r\n              this.sendTypeDataBean[sendType[0]] = valueData\r\n            }\r\n          }\r\n        })\r\n    },\r\n    showCuInfo (row) {\r\n      this.showSendTypeData = []\r\n      this.cuInfoFormBean = {}\r\n\r\n      this.cuInfo.show = true\r\n      const config = {\r\n        method: 'GET',\r\n        url: '/alarm/group/getDetailByGroupName',\r\n        params: { groupName: row.groupName }\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.cuInfoFormBean = resp.data[0]\r\n            let oldSendType = JSON.parse(this.cuInfoFormBean.sendParams)\r\n            let sendTypeData = this.sendTypeDataBean[this.cuInfoFormBean.sendType]\r\n            // 循环取出自定义的key和系统中的key\r\n            let oldSendTypeKeys = Object.keys(oldSendType)\r\n            for (let i = 0; i < oldSendTypeKeys.length; i++) {\r\n              let key = oldSendTypeKeys[i]\r\n              let showKey = key\r\n              for (let j = 0; j < sendTypeData.length; j++) {\r\n                if (key === sendTypeData[j][1]) {\r\n                  showKey = sendTypeData[j][0]\r\n                  break\r\n                }\r\n              }\r\n              let param = []\r\n              param.push(showKey)\r\n              param.push(oldSendType[key])\r\n              this.showSendTypeData.push(param)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (this.formBean.group_name) {\r\n        params.currentPage = 1\r\n       \r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/delete' \r\n        this.request.delReq.method = 'DELETE'\r\n         this.request.delReq.params = {}\r\n         this.request.delReq.params.id = id\r\n        this.loadingdel = true\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.loadingdel = false\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n\r\n      this.selection = selection\r\n    },\r\n\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      // alert(currentPage);\r\n      \r\n      this.page.current = currentPage\r\n      this.search()\r\n   \r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n\t\t this.init()\r\n    //  this.loadplat()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}