{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\store\\module\\user.js","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\store\\module\\user.js","mtime":1681468306497},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport { login, logout, getUserInfo as _getUserInfo, getMessage, getContentByMsgId as _getContentByMsgId, hasRead as _hasRead, removeReaded as _removeReaded, restoreTrash as _restoreTrash, getUnreadCount } from '@/api/user';\nimport { setToken as _setToken, getToken, localRemove } from '@/libs/util';\nexport default {\n  state: {\n    userName: '',\n    userChName: '',\n    userId: '',\n    avatarImgPath: '',\n    token: getToken(),\n    access: '',\n    hasGetInfo: false,\n    unreadCount: 0,\n    messageUnreadList: [],\n    messageReadedList: [],\n    messageTrashList: [],\n    messageContentStore: {},\n    userPlatform: [],\n    userSystem: {}\n  },\n  mutations: {\n    setAvatar: function setAvatar(state, avatarPath) {\n      state.avatarImgPath = avatarPath;\n    },\n    setUserId: function setUserId(state, id) {\n      state.userId = id;\n      window.sessionStorage.setItem('userId', state.userId);\n    },\n    setUserName: function setUserName(state, name) {\n      state.userName = name;\n      window.sessionStorage.setItem('userName', state.userName);\n    },\n    setUserChName: function setUserChName(state, chName) {\n      state.userChName = chName;\n      window.sessionStorage.setItem('userChName', state.userChName);\n    },\n    setAccess: function setAccess(state, access) {\n      state.access = access;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n      _setToken(token);\n    },\n    setHasGetInfo: function setHasGetInfo(state, status) {\n      state.hasGetInfo = status;\n    },\n    setMessageCount: function setMessageCount(state, count) {\n      state.unreadCount = count;\n    },\n    setMessageUnreadList: function setMessageUnreadList(state, list) {\n      state.messageUnreadList = list;\n    },\n    setMessageReadedList: function setMessageReadedList(state, list) {\n      state.messageReadedList = list;\n    },\n    setMessageTrashList: function setMessageTrashList(state, list) {\n      state.messageTrashList = list;\n    },\n    updateMessageContentStore: function updateMessageContentStore(state, _ref) {\n      var msg_id = _ref.msg_id,\n        content = _ref.content;\n      state.messageContentStore[msg_id] = content;\n    },\n    moveMsg: function moveMsg(state, _ref2) {\n      var from = _ref2.from,\n        to = _ref2.to,\n        msg_id = _ref2.msg_id;\n      var index = state[from].findIndex(function (_) {\n        return _.msg_id === msg_id;\n      });\n      var msgItem = state[from].splice(index, 1)[0];\n      msgItem.loading = false;\n      state[to].unshift(msgItem);\n    },\n    setUserPlatform: function setUserPlatform(state, list) {\n      state.userPlatform = list;\n      window.sessionStorage.setItem('userPlatform', JSON.stringify(state.userPlatform));\n    },\n    setUserSystem: function setUserSystem(state, data) {\n      state.userSystem = data;\n      window.sessionStorage.setItem('userSystem', JSON.stringify(state.userSystem));\n    }\n  },\n  getters: {\n    messageUnreadCount: function messageUnreadCount(state) {\n      return state.messageUnreadList.length;\n    },\n    messageReadedCount: function messageReadedCount(state) {\n      return state.messageReadedList.length;\n    },\n    messageTrashCount: function messageTrashCount(state) {\n      return state.messageTrashList.length;\n    },\n    getUserId: function getUserId(state) {\n      return sessionStorage.getItem('userId');\n    },\n    getUserName: function getUserName(state) {\n      return sessionStorage.getItem('userName');\n    },\n    getUserChName: function getUserChName(state) {\n      return function () {\n        return sessionStorage.getItem('userChName');\n      };\n    },\n    getUserPlatform: function getUserPlatform(state) {\n      return function () {\n        return JSON.parse(sessionStorage.getItem('userPlatform'));\n      };\n    },\n    getUserSystem: function getUserSystem(state) {\n      return function () {\n        return JSON.parse(sessionStorage.getItem('userSystem'));\n      };\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin: function handleLogin(_ref3, _ref4) {\n      var commit = _ref3.commit;\n      var userName = _ref4.userName,\n        password = _ref4.password;\n      userName = userName.trim();\n      return new Promise(function (resolve, reject) {\n        login({\n          userName: userName,\n          password: password\n        }).then(function (res) {\n          var data = res.data;\n          commit('setToken', data.token);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 退出登录\n    handleLogOut: function handleLogOut(_ref5) {\n      var state = _ref5.state,\n        commit = _ref5.commit;\n      return new Promise(function (resolve, reject) {\n        //  logout(state.token).then(() => {\n        commit('setToken', '');\n        commit('setAccess', []);\n        resolve();\n        //  }).catch(err => {\n        //    reject(err)\n        //  })\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        // commit('setToken', '')\n        // commit('setAccess', [])\n        // resolve()\n      });\n    },\n    // 获取用户相关信息\n    getUserInfo: function getUserInfo(_ref6) {\n      var state = _ref6.state,\n        commit = _ref6.commit;\n      console.log('获取用户信息');\n      return new Promise(function (resolve, reject) {\n        try {\n          _getUserInfo(state.token).then(function (res) {\n            var data = res.data;\n            commit('setAvatar', data.avatar);\n            commit('setUserName', data.name);\n            commit('setUserId', data.user_id);\n            commit('setAccess', data.access);\n            commit('setHasGetInfo', true);\n            resolve(data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n    setUserInfo: function setUserInfo(context, data) {\n      // context.commit('setUser', user)\n      //  context.commit('setAvatar', data.avatar)\n      context.commit('setUserId', data.userId);\n      context.commit('setUserName', data.userCode);\n      context.commit('setUserChName', data.userName);\n      //  context.commit('setAccess', data.access)\n    },\n\n    setUserToken: function setUserToken(context, data) {\n      context.commit('setHasGetInfo', true);\n      context.commit('setToken', data.token);\n    },\n    setUserSystem: function setUserSystem(context, data) {\n      context.commit('setUserPlatform', data.userPlatform);\n      context.commit('setUserSystem', data.userSystem);\n    },\n    // 此方法用来获取未读消息条数，接口只返回数值，不返回消息列表\n    getUnreadMessageCount: function getUnreadMessageCount(_ref7) {\n      var state = _ref7.state,\n        commit = _ref7.commit;\n      commit('setMessageCount', 3);\n    },\n    // 获取消息列表，其中包含未读、已读、回收站三个列表\n    getMessageList: function getMessageList(_ref8) {\n      var state = _ref8.state,\n        commit = _ref8.commit;\n      return new Promise(function (resolve, reject) {\n        getMessage().then(function (res) {\n          var _res$data = res.data,\n            unread = _res$data.unread,\n            readed = _res$data.readed,\n            trash = _res$data.trash;\n          commit('setMessageUnreadList', unread.sort(function (a, b) {\n            return new Date(b.create_time) - new Date(a.create_time);\n          }));\n          commit('setMessageReadedList', readed.map(function (_) {\n            _.loading = false;\n            return _;\n          }).sort(function (a, b) {\n            return new Date(b.create_time) - new Date(a.create_time);\n          }));\n          commit('setMessageTrashList', trash.map(function (_) {\n            _.loading = false;\n            return _;\n          }).sort(function (a, b) {\n            return new Date(b.create_time) - new Date(a.create_time);\n          }));\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 根据当前点击的消息的id获取内容\n    getContentByMsgId: function getContentByMsgId(_ref9, _ref10) {\n      var state = _ref9.state,\n        commit = _ref9.commit;\n      var msg_id = _ref10.msg_id;\n      return new Promise(function (resolve, reject) {\n        var contentItem = state.messageContentStore[msg_id];\n        if (contentItem) {\n          resolve(contentItem);\n        } else {\n          _getContentByMsgId(msg_id).then(function (res) {\n            var content = res.data;\n            commit('updateMessageContentStore', {\n              msg_id: msg_id,\n              content: content\n            });\n            resolve(content);\n          });\n        }\n      });\n    },\n    // 把一个未读消息标记为已读\n    hasRead: function hasRead(_ref11, _ref12) {\n      var state = _ref11.state,\n        commit = _ref11.commit;\n      var msg_id = _ref12.msg_id;\n      return new Promise(function (resolve, reject) {\n        _hasRead(msg_id).then(function () {\n          commit('moveMsg', {\n            from: 'messageUnreadList',\n            to: 'messageReadedList',\n            msg_id: msg_id\n          });\n          commit('setMessageCount', state.unreadCount - 1);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 删除一个已读消息到回收站\n    removeReaded: function removeReaded(_ref13, _ref14) {\n      var commit = _ref13.commit;\n      var msg_id = _ref14.msg_id;\n      return new Promise(function (resolve, reject) {\n        _removeReaded(msg_id).then(function () {\n          commit('moveMsg', {\n            from: 'messageReadedList',\n            to: 'messageTrashList',\n            msg_id: msg_id\n          });\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 还原一个已删除消息到已读消息\n    restoreTrash: function restoreTrash(_ref15, _ref16) {\n      var commit = _ref15.commit;\n      var msg_id = _ref16.msg_id;\n      return new Promise(function (resolve, reject) {\n        _restoreTrash(msg_id).then(function () {\n          commit('moveMsg', {\n            from: 'messageTrashList',\n            to: 'messageReadedList',\n            msg_id: msg_id\n          });\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["login","logout","getUserInfo","getMessage","getContentByMsgId","hasRead","removeReaded","restoreTrash","getUnreadCount","setToken","getToken","localRemove","state","userName","userChName","userId","avatarImgPath","token","access","hasGetInfo","unreadCount","messageUnreadList","messageReadedList","messageTrashList","messageContentStore","userPlatform","userSystem","mutations","setAvatar","avatarPath","setUserId","id","window","sessionStorage","setItem","setUserName","name","setUserChName","chName","setAccess","setHasGetInfo","status","setMessageCount","count","setMessageUnreadList","list","setMessageReadedList","setMessageTrashList","updateMessageContentStore","_ref","msg_id","content","moveMsg","_ref2","from","to","index","findIndex","_","msgItem","splice","loading","unshift","setUserPlatform","JSON","stringify","setUserSystem","data","getters","messageUnreadCount","length","messageReadedCount","messageTrashCount","getUserId","getItem","getUserName","getUserChName","getUserPlatform","parse","getUserSystem","actions","handleLogin","_ref3","_ref4","commit","password","trim","Promise","resolve","reject","then","res","catch","err","handleLogOut","_ref5","_ref6","console","log","avatar","user_id","error","setUserInfo","context","userCode","setUserToken","getUnreadMessageCount","_ref7","getMessageList","_ref8","_res$data","unread","readed","trash","sort","a","b","Date","create_time","map","_ref9","_ref10","contentItem","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16"],"sources":["D:/WorkSpace/IdeaProjects/harrier/harrier-ui/src/store/module/user.js"],"sourcesContent":["import {\r\n  login,\r\n  logout,\r\n  getUserInfo,\r\n  getMessage,\r\n  getContentByMsgId,\r\n  hasRead,\r\n  removeReaded,\r\n  restoreTrash,\r\n  getUnreadCount\r\n} from '@/api/user'\r\nimport { setToken, getToken, localRemove } from '@/libs/util'\r\nexport default {\r\n  state: {\r\n    userName: '',\r\n    userChName: '',\r\n    userId: '',\r\n    avatarImgPath: '',\r\n    token: getToken(),\r\n    access: '',\r\n    hasGetInfo: false,\r\n    unreadCount: 0,\r\n    messageUnreadList: [],\r\n    messageReadedList: [],\r\n    messageTrashList: [],\r\n    messageContentStore: {},\r\n    userPlatform: [],\r\n    userSystem: {}\r\n  },\r\n  mutations: {\r\n    setAvatar (state, avatarPath) {\r\n      state.avatarImgPath = avatarPath\r\n    },\r\n    setUserId (state, id) {\r\n      state.userId = id\r\n      window.sessionStorage.setItem('userId', state.userId)\r\n    },\r\n    setUserName (state, name) {\r\n      state.userName = name\r\n      window.sessionStorage.setItem('userName', state.userName)\r\n    },\r\n    setUserChName (state, chName) {\r\n      state.userChName = chName\r\n      window.sessionStorage.setItem('userChName', state.userChName)\r\n    },\r\n    setAccess (state, access) {\r\n      state.access = access\r\n    },\r\n    setToken (state, token) {\r\n      state.token = token\r\n      setToken(token)\r\n    },\r\n    setHasGetInfo (state, status) {\r\n      state.hasGetInfo = status\r\n    },\r\n    setMessageCount (state, count) {\r\n      state.unreadCount = count\r\n    },\r\n    setMessageUnreadList (state, list) {\r\n      state.messageUnreadList = list\r\n    },\r\n    setMessageReadedList (state, list) {\r\n      state.messageReadedList = list\r\n    },\r\n    setMessageTrashList (state, list) {\r\n      state.messageTrashList = list\r\n    },\r\n    updateMessageContentStore (state, { msg_id, content }) {\r\n      state.messageContentStore[msg_id] = content\r\n    },\r\n    moveMsg (state, { from, to, msg_id }) {\r\n      const index = state[from].findIndex(_ => _.msg_id === msg_id)\r\n      const msgItem = state[from].splice(index, 1)[0]\r\n      msgItem.loading = false\r\n      state[to].unshift(msgItem)\r\n    },\r\n    setUserPlatform (state, list) {\r\n      state.userPlatform = list\r\n      window.sessionStorage.setItem('userPlatform', JSON.stringify(state.userPlatform))\r\n    },\r\n    setUserSystem (state, data) {\r\n      state.userSystem = data\r\n      window.sessionStorage.setItem('userSystem', JSON.stringify(state.userSystem))\r\n    }\r\n  },\r\n  getters: {\r\n    messageUnreadCount: state => state.messageUnreadList.length,\r\n    messageReadedCount: state => state.messageReadedList.length,\r\n    messageTrashCount: state => state.messageTrashList.length,\r\n    getUserId: state => sessionStorage.getItem('userId'),\r\n    getUserName: state => sessionStorage.getItem('userName'),\r\n    getUserChName: (state) => () => sessionStorage.getItem('userChName'),\r\n    getUserPlatform: (state) => () => JSON.parse(sessionStorage.getItem('userPlatform')),\r\n    getUserSystem: (state) => () => JSON.parse(sessionStorage.getItem('userSystem'))\r\n  },\r\n  actions: {\r\n    // 登录\r\n    handleLogin ({ commit }, { userName, password }) {\r\n      userName = userName.trim()\r\n      return new Promise((resolve, reject) => {\r\n        login({\r\n          userName,\r\n          password\r\n        }).then(res => {\r\n          const data = res.data\r\n          commit('setToken', data.token)\r\n          resolve()\r\n        }).catch(err => {\r\n          reject(err)\r\n        })\r\n      })\r\n    },\r\n    // 退出登录\r\n    handleLogOut ({ state, commit }) {\r\n      return new Promise((resolve, reject) => {\r\n      //  logout(state.token).then(() => {\r\n        commit('setToken', '')\r\n        commit('setAccess', [])\r\n        resolve()\r\n      //  }).catch(err => {\r\n      //    reject(err)\r\n      //  })\r\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\r\n        // commit('setToken', '')\r\n        // commit('setAccess', [])\r\n        // resolve()\r\n      })\r\n    },\r\n    // 获取用户相关信息\r\n    getUserInfo ({ state, commit }) {\r\n      console.log('获取用户信息')\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          getUserInfo(state.token).then(res => {\r\n            const data = res.data\r\n            commit('setAvatar', data.avatar)\r\n            commit('setUserName', data.name)\r\n            commit('setUserId', data.user_id)\r\n            commit('setAccess', data.access)\r\n            commit('setHasGetInfo', true)\r\n            resolve(data)\r\n          }).catch(err => {\r\n            reject(err)\r\n          })\r\n        } catch (error) {\r\n          reject(error)\r\n        }\r\n      })\r\n    },\r\n    setUserInfo: function (context, data) {\r\n      // context.commit('setUser', user)\r\n    //  context.commit('setAvatar', data.avatar)\r\n      context.commit('setUserId', data.userId)\r\n      context.commit('setUserName', data.userCode)\r\n      context.commit('setUserChName', data.userName)\r\n    //  context.commit('setAccess', data.access)\r\n    },\r\n    setUserToken: function (context, data) {\r\n      context.commit('setHasGetInfo', true)\r\n      context.commit('setToken', data.token)\r\n    },\r\n    setUserSystem: function (context, data) {\r\n      context.commit('setUserPlatform', data.userPlatform)\r\n      context.commit('setUserSystem', data.userSystem)\r\n    },\r\n    // 此方法用来获取未读消息条数，接口只返回数值，不返回消息列表\r\n    getUnreadMessageCount ({ state, commit }) {\r\n      commit('setMessageCount', 3)\r\n    },\r\n    // 获取消息列表，其中包含未读、已读、回收站三个列表\r\n    getMessageList ({ state, commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        getMessage().then(res => {\r\n          const { unread, readed, trash } = res.data\r\n          commit('setMessageUnreadList', unread.sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\r\n          commit('setMessageReadedList', readed.map(_ => {\r\n            _.loading = false\r\n            return _\r\n          }).sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\r\n          commit('setMessageTrashList', trash.map(_ => {\r\n            _.loading = false\r\n            return _\r\n          }).sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    // 根据当前点击的消息的id获取内容\r\n    getContentByMsgId ({ state, commit }, { msg_id }) {\r\n      return new Promise((resolve, reject) => {\r\n        let contentItem = state.messageContentStore[msg_id]\r\n        if (contentItem) {\r\n          resolve(contentItem)\r\n        } else {\r\n          getContentByMsgId(msg_id).then(res => {\r\n            const content = res.data\r\n            commit('updateMessageContentStore', { msg_id, content })\r\n            resolve(content)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 把一个未读消息标记为已读\r\n    hasRead ({ state, commit }, { msg_id }) {\r\n      return new Promise((resolve, reject) => {\r\n        hasRead(msg_id).then(() => {\r\n          commit('moveMsg', {\r\n            from: 'messageUnreadList',\r\n            to: 'messageReadedList',\r\n            msg_id\r\n          })\r\n          commit('setMessageCount', state.unreadCount - 1)\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    // 删除一个已读消息到回收站\r\n    removeReaded ({ commit }, { msg_id }) {\r\n      return new Promise((resolve, reject) => {\r\n        removeReaded(msg_id).then(() => {\r\n          commit('moveMsg', {\r\n            from: 'messageReadedList',\r\n            to: 'messageTrashList',\r\n            msg_id\r\n          })\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    // 还原一个已删除消息到已读消息\r\n    restoreTrash ({ commit }, { msg_id }) {\r\n      return new Promise((resolve, reject) => {\r\n        restoreTrash(msg_id).then(() => {\r\n          commit('moveMsg', {\r\n            from: 'messageTrashList',\r\n            to: 'messageReadedList',\r\n            msg_id\r\n          })\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"}]}