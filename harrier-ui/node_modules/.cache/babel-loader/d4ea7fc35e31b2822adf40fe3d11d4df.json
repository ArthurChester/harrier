{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\JobComplement.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\JobComplement.vue","mtime":1681468306532},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/udsJobComplement';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      jobstatusData: [{\n        label: 'Done',\n        value: 'Done'\n      }, {\n        label: 'Pending',\n        value: 'Pending'\n      }, {\n        label: 'Running',\n        value: 'Running'\n      }, {\n        label: 'Failed',\n        value: 'Failed'\n      }, {\n        label: 'Ready',\n        value: 'Ready'\n      }],\n      jobtypeList: {},\n      loadingTable: false,\n      formBean: {},\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      streamTypeList: {},\n      gridColumns: [{\n        title: '平台名',\n        ellipsis: true,\n        width: 120,\n        sortable: true,\n        key: 'platform'\n      }, {\n        title: '应用名',\n        ellipsis: true,\n        align: 'left',\n        width: 120,\n        sortable: true,\n        className: 'uds-job-column',\n        key: 'systems'\n      }, {\n        title: '作业名',\n        key: 'job',\n        ellipsis: false,\n        // tooltip: true,\n        sortable: true,\n        minWidth: 170,\n        className: 'uds-job-column',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n              color: row.enable ? '' : 'red'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, row.job)]);\n        }\n      }, {\n        title: '执行节点',\n        ellipsis: false,\n        tooltip: true,\n        minWidth: 110,\n        maxWidth: 130,\n        sortable: true,\n        key: 'serverName',\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.serverName ? row.serverName : '')]);\n        }\n      }, {\n        title: '状态',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 80,\n        maxWidth: 100,\n        sortable: true,\n        key: 'lastStatus'\n      }, {\n        title: '批次号',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 90,\n        maxWidth: 100,\n        sortable: true,\n        key: 'multiBatch'\n      }, {\n        title: 'TXDate',\n        ellipsis: false,\n        tooltip: true,\n        width: 170,\n        sortable: true,\n        key: 'jobDate',\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.jobDate.substring(0, 10))]);\n        }\n      }, {\n        title: '开始时间',\n        ellipsis: false,\n        tooltip: false,\n        width: 180,\n        sortable: true,\n        key: 'startTime'\n      }, {\n        title: '结束时间',\n        ellipsis: false,\n        tooltip: false,\n        width: 180,\n        sortable: true,\n        key: 'endTime',\n        render: function render(h, _ref4) {\n          var column = _ref4.column,\n            index = _ref4.index,\n            row = _ref4.row;\n          var endArr = ['', ''];\n          if (row.endTime) {\n            endArr = row.endTime.split(' ');\n          }\n          return h('div', [h('div', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.lastStatus === 'Running' ? '' : row.endTime)]);\n        }\n      }, {\n        title: '描述',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 80,\n        maxWidth: 100,\n        sortable: true,\n        key: 'desc'\n      }],\n      statusList: [{\n        label: 'Done',\n        key: 'Done'\n      }, {\n        label: 'Failed',\n        key: 'Failed'\n      }],\n      gridData: [],\n      selection: [],\n      systemData: [],\n      platformData: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {}\n    };\n  },\n  methods: {\n    getSystemList: function getSystemList() {\n      var _this2 = this;\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this2.systemData.push(tmp);\n        });\n      }\n    },\n    queryjobtypeList: function queryjobtypeList() {\n      var _this3 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'jobtype'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this3.jobtypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this3.jobtypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    queryPlatform: function queryPlatform() {\n      var _this4 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getPlatformList'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this4.platformData.push(tmp);\n        });\n      });\n    },\n    querySystem: function querySystem() {\n      var _this5 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getSysList',\n        params: {\n          platform: this.formBean.platform\n        }\n      };\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data;\n            tmp.label = data;\n            _this5.systemData.push(tmp);\n          });\n        });\n      }\n    },\n    getStartTime: function getStartTime(startTime) {\n      this.formBean.startTime = startTime;\n    },\n    getEndTime: function getEndTime(endTime) {\n      this.formBean.endTime = endTime;\n    },\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      if (this.transData.jobData) {\n        this.page.size = this.transData.pageSize;\n        this.page.current = this.transData.currentPage;\n        this.search();\n      }\n    },\n    /**\r\n     * 查询\r\n     **/\n    search: function search() {\n      var _this6 = this;\n      var params = {};\n      params.current = this.page.current;\n      params.size = this.page.size;\n      params.platform = this.formBean.platform;\n      params.systems = this.formBean.systems;\n      params.lastStatus = this.formBean.lastStatus;\n      params.complementId = this.transData.jobData.id;\n      if (this.formBean.job) {\n        params.job = this.formBean.job;\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/selectAll',\n        params: params\n      };\n      this.loadingTable = true;\n      this.$ajax(httpConfig).then(function (resp) {\n        _this6.gridData = resp.data.rows;\n        _this6.page.total = resp.data.total;\n        _this6.loadingTable = false;\n      });\n    },\n    queryStreamTypeList: function queryStreamTypeList() {\n      var _this7 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'stream_type'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this7.streamTypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this7.streamTypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.formBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n     * 清空\r\n     **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n     * 新增\r\n     **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n     * 删除\r\n     **/\n    del: function del() {\n      var _this8 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.system;\n      });\n      ids.forEach(function (id) {\n        _this8.request.delReq.url = RESOURCE_PATH + '/' + id;\n        _this8.request.delReq.method = 'DELETE';\n        _this8.$ajax(_this8.request.delReq).then(function (resp) {\n          _this8.search();\n        });\n      });\n    },\n    /**\r\n     * 数据复选事件\r\n     **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    /**\r\n     * 改变页码事件\r\n     **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n     * 改变分页大小事件\r\n     **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    /**\r\n    * 返回到数据视图\r\n    **/\n    cancel: function cancel() {\n      var prevTab = '';\n      if (this.transData.tabObj) {\n        prevTab = this.transData.tabObj.prevTab;\n        // prevTab = 'joblist'\n      }\n\n      var queryCache = {\n        formBean: this.transData.formBean,\n        currentPage: this.transData.currentPage,\n        pageSize: this.transData.pageSize\n      };\n      var backParam = {\n        statusName: 'table',\n        prevTab: prevTab,\n        type: 'back'\n      };\n      if (this.transData.tablePage) {\n        queryCache = {\n          formBean: this.transData.formBean,\n          currentPage: this.tablePage.current,\n          pageSize: this.tablePage.size\n        };\n      }\n      if (this.transData.prequeryCache) {\n        if (this.transData.jobStatus) {\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus;\n        }\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam));\n      } else {\n        this.$emit('switch', Object.assign({}, queryCache, backParam, {\n          jobData: this.transData.jobData\n        }));\n      }\n    },\n    getPlatformList: function getPlatformList() {\n      var _this9 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this9.platformData.push(tmp);\n      });\n      console.log(this.platformData);\n      this.search();\n    }\n  },\n  /**\r\n   * 视图挂载\r\n   **/\n  mounted: function mounted() {\n    this.getPlatformList();\n    this.init();\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","jobstatusData","label","value","jobtypeList","loadingTable","formBean","request","delReq","method","url","addReq","streamTypeList","gridColumns","title","ellipsis","width","sortable","key","align","className","minWidth","render","h","_ref","column","index","row","size","style","color","enable","on","click","id","job","jobStatus","$emit","assign","statusName","jobData","getPageParam","tooltip","maxWidth","_ref2","serverName","_ref3","jobDate","substring","_ref4","endArr","endTime","split","lastStatus","statusList","gridData","selection","systemData","platformData","page","current","total","opt","ruleValidate","methods","getSystemList","_this2","$refs","refsystem","setQuery","platform","userSystemList","$store","getters","getUserSystem","userSystem","forEach","tmp","push","queryjobtypeList","_this3","loadConfig","params","dicCode","$ajax","then","resp","rows","dicValue","dicName","queryPlatform","_this4","querySystem","_this5","getStartTime","startTime","getEndTime","init","pageSize","currentPage","search","_this6","systems","complementId","httpConfig","queryStreamTypeList","_this7","clear","add","del","_this8","ids","Array","from","e","system","select","filterMethod","option","toUpperCase","indexOf","changePage","changePageSize","cancel","prevTab","tabObj","queryCache","backParam","tablePage","prequeryCache","getPlatformList","_this9","platformList","getUserPlatform","console","log","mounted"],"sources":["src/view/spdb/job/jobComplement/JobComplement.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<Row>\r\n      <Form ref=\"udsjobForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\">\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <FormItem prop=\"platform\" label=\"平台名\">\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value+''\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"作业状态\">\r\n              <Select filterable v-model=\"formBean.lastStatus\" clearable>\r\n                <Option v-for=\"item in jobstatusData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"作业名\">\r\n              <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.job\" placeholder=\"支持模糊查询\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"1\">&nbsp;</Col>\r\n          <Col span=\"8\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\r\n              <!-- <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button> -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\t\t</Row>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" :loading=\"loadingTable\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t\t<div slot=\"footer\">\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobComplement'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobstatusData: [\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Running', value: 'Running' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Ready', value: 'Ready' }\r\n      ],\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          ellipsis: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          ellipsis: true,\r\n          align: 'left',\r\n          width: 120,\r\n          sortable: true,\r\n          className: 'uds-job-column',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          ellipsis: false,\r\n          // tooltip: true,\r\n          sortable: true,\r\n          minWidth: 170,\r\n          className: 'uds-job-column',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  color: row.enable ? '' : 'red'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '批次号',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 90,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'multiBatch'\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'jobDate',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.jobDate.substring(0, 10))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        {\r\n          title: '描述',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'desc'\r\n        }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      params.platform = this.formBean.platform\r\n      params.systems = this.formBean.systems\r\n      params.lastStatus = this.formBean.lastStatus\r\n      params.complementId = this.transData.jobData.id\r\n      if (this.formBean.job) {\r\n        params.job = this.formBean.job\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    },\r\n    getPlatformList () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      console.log(this.platformData)\r\n      this.search()\r\n    },\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.getPlatformList()\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"],"mappings":"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"}]}