{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Table.vue","mtime":1681468306510},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/jobarrange';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      platformData: [],\n      systemData: [],\n      ctrlDisable: true,\n      loadingdel: false,\n      loadingsync: false,\n      loadingStatus: false,\n      fileType: '',\n      files: [],\n      formBean: {},\n      platformList: [],\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      gridColumns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n        // fixed: 'left'\n      },\n      // {\n      //   title: '序号',\n      //   key: 'id',\n      //   align: 'center',\n      //   width: 80\n      // },\n      {\n        title: '平台名',\n        key: 'platform',\n        align: 'center',\n        width: 80\n      }, {\n        title: '应用名',\n        key: 'systems',\n        align: 'center',\n        width: 80\n      }, {\n        title: '作业名',\n        key: 'job',\n        align: 'center',\n        minWidth: 180\n      }, {\n        title: '变更状态',\n        key: 'job',\n        align: 'taskStatus',\n        width: 95,\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('Span', {}, _this.taskStatusList[row.taskStatus])]);\n        }\n      }, {\n        title: '任务状态',\n        key: 'processStatus',\n        align: 'center',\n        width: 95,\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('Span', {}, _this.processStatusList[row.processStatus])]);\n        }\n      }, {\n        title: '同步状态',\n        key: 'syncStatus',\n        align: 'center',\n        minWidth: 130,\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('Span', {}, _this.syncStatusList[row.syncStatus])]);\n        }\n      },\n      // {\n      //   title: '进入Dispatcher时间',\n      //   key: 'startDate',\n      //   align: 'center',\n      //   width: 180\n      // },\n      // {\n      //   title: '开始执行时间',\n      //   key: 'endDate',\n      //   align: 'center',\n      //   minWidth: 180\n      // },\n      {\n        title: '版本号',\n        key: 'version',\n        align: 'center',\n        minWidth: 120\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 300,\n        // fixed: 'right',\n        render: function render(h, _ref4) {\n          var column = _ref4.column,\n            index = _ref4.index,\n            row = _ref4.row;\n          // row.taskStatus 1->新增；2->变更；3->下线 4->上线完成\n          // row.taskStatus = 2\n          var col = '#03399b';\n          var text = '上线';\n          var iconStyle = 'md-arrow-round-up';\n          var disable = false;\n          if (row.processStatus === 3) {\n            col = 'red';\n            text = '下线';\n            iconStyle = 'md-arrow-round-down';\n            disable = true;\n          } else {\n            col = 'green';\n          }\n          return h('div', [h('Poptip', {\n            props: {\n              content: '编辑',\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 编辑\n            props: {\n              icon: 'md-create',\n              disabled: disable\n            },\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var queryCache = {\n                  formBean: _this.formBean,\n                  currentPage: _this.page.current,\n                  pageSize: _this.page.size\n                };\n                _this.$emit('switch', Object.assign({}, {\n                  row: row,\n                  id: row.id\n                }, queryCache)); // 提交form事件，在parent中显示form\n              }\n            }\n          }, '')]), h('Poptip', {\n            props: {\n              content: text,\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 上线：部署的流程（点完之后变为上线\n            props: {\n              icon: iconStyle\n            },\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: col,\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                // deploy 上线 rollback 下线\n                var params = Object.assign({}, row);\n                if (row.processStatus === 3) {\n                  _this.$Modal.confirm({\n                    title: '提示',\n                    content: '确定下线' + params.job + '作业吗',\n                    onOk: function onOk() {\n                      var loadConfig = {\n                        method: 'POST',\n                        url: '/jobdevelop/rollback',\n                        data: params\n                      };\n                      _this.$ajax(loadConfig).then(function (resp) {\n                        _this.search();\n                      });\n                    },\n                    onCancel: function onCancel() {}\n                  });\n                } else {\n                  _this.$Modal.confirm({\n                    title: '提示',\n                    content: '确定上线' + params.job + '作业吗',\n                    onOk: function onOk() {\n                      var loadConfig = {\n                        method: 'POST',\n                        url: '/jobdevelop/deploy',\n                        data: params\n                      };\n                      _this.$ajax(loadConfig).then(function (resp) {\n                        _this.search();\n                      });\n                    },\n                    onCancel: function onCancel() {}\n                  });\n                }\n              }\n            }\n          }, '')]), h('Poptip', {\n            props: {\n              content: '删除',\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 删除：只删除dy_job_arrange\n            props: {\n              icon: 'md-trash',\n              disabled: disable\n              // shape: 'circle',\n              // type: 'primary'\n            },\n\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                _this.$Modal.confirm({\n                  title: '提示',\n                  content: '确定删除' + row.job + '作业吗',\n                  onOk: function onOk() {\n                    var delConfig = {\n                      method: 'DELETE',\n                      url: RESOURCE_PATH + '/delete/' + row.id\n                    };\n                    _this.$ajax(delConfig).then(function (resp) {\n                      _this.search();\n                    });\n                  },\n                  onCancel: function onCancel() {}\n                });\n              }\n            }\n          }, '')]), h('Poptip', {\n            props: {\n              content: '导出',\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 导出：下载一个压缩包\n            props: {\n              icon: 'md-redo'\n              // shape: 'circle',\n              // type: 'primary'\n            },\n\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var params = {\n                  platform: row.platform,\n                  systems: row.systems,\n                  job: row.job,\n                  version: row.version\n                };\n                var delConfig = {\n                  method: 'GET',\n                  url: RESOURCE_PATH + '/download',\n                  params: params\n                };\n                _this.$ajax(delConfig).then(function (resp) {\n                  utils.blobDownload(resp);\n                });\n              }\n            }\n          }, '')]), h('Poptip', {\n            props: {\n              content: '版本切换',\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 版本切换\n            props: {\n              icon: 'md-repeat',\n              disabled: disable\n              // shape: 'circle',\n              // type: 'primary'\n            },\n\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var params = {\n                  platform: row.platform,\n                  systems: row.systems,\n                  job: row.job,\n                  version: row.version\n                };\n                var delConfig = {\n                  method: 'GET',\n                  url: RESOURCE_PATH + '/loadJobArrangesByVersion',\n                  params: params\n                };\n                _this.$ajax(delConfig).then(function (resp) {\n                  console.log(resp);\n                });\n              }\n            }\n          }, '')]), h('Poptip', {\n            props: {\n              content: '历史版本',\n              transfer: true,\n              width: '50px',\n              trigger: 'hover'\n            },\n            class: {\n              poptipContentInner: true\n            }\n          }, [h('Button', {\n            // 历史版本\n            props: {\n              icon: 'md-search'\n              // shape: 'circle',\n              // type: 'primary'\n            },\n\n            style: {\n              marginRight: '5px',\n              margin: '0px',\n              fontSize: '16px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var params = {\n                  platform: row.platform,\n                  systems: row.systems,\n                  job: row.job\n                };\n                var delConfig = {\n                  method: 'GET',\n                  url: RESOURCE_PATH + '/versionCodeList/',\n                  params: params\n                };\n                _this.$ajax(delConfig).then(function (resp) {\n                  _this.versionOp.platform = row.platform;\n                  _this.versionOp.systems = row.systems;\n                  _this.versionOp.job = row.job;\n                  _this.versionOp.show = true;\n                  _this.versionOp.data = resp.data;\n                });\n              }\n            }\n          }, '')])]);\n        }\n      }],\n      versionOp: {\n        platform: '',\n        systems: '',\n        job: '',\n        show: false,\n        uploadShow: false,\n        data: [],\n        detail: {}\n      },\n      gridData: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {},\n      syncStatusList: {\n        '0': '正常线上开发无需同步',\n        '1': '成功',\n        '2': '失败'\n      },\n      processStatusList: {\n        '1': '待投产',\n        '2': '投产失败',\n        '3': '投产成功'\n      },\n      taskStatusList: {\n        '1': '新增',\n        '2': '变更',\n        '3': '下线'\n      }\n    };\n  },\n  watch: {\n    selection: function selection(val) {\n      if (val.length != 0) {\n        this.ctrlDisable = false;\n      } else {\n        this.ctrlDisable = true;\n      }\n    }\n  },\n  methods: {\n    versionDetail: function versionDetail(version) {\n      var _this2 = this;\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/loadJobArrangesByVersion',\n        params: {\n          platform: this.versionOp.platform,\n          systems: this.versionOp.systems,\n          job: this.versionOp.job,\n          version: version\n        }\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          _this2.gridData = [];\n          _this2.gridData.push(resp.data);\n          _this2.page.total = 1;\n          // this.versionOp.detail = resp.data\n          _this2.versionOp.show = false;\n        }\n      });\n    },\n    // 同步\n    sync: function sync() {\n      var _this3 = this;\n      // 同步\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/sync'\n      };\n      this.loadingsync = true;\n      this.$ajax(loadConfig).then(function (resp) {\n        _this3.loadingsync = false;\n        if (resp.data == '1') {\n          _this3.$Notice.success({\n            title: '信息',\n            desc: '同步成功'\n          });\n        } else {\n          _this3.$Notice.error({\n            title: '信息',\n            desc: '同步失败'\n          });\n        }\n        _this3.search();\n      });\n    },\n    queryPlatform: function queryPlatform() {\n      var _this4 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this4.platformData.push(tmp);\n      });\n    },\n    querySystem: function querySystem() {\n      var _this5 = this;\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this5.systemData.push(tmp);\n        });\n      }\n    },\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      if (this.transData.job) {\n        this.formBean.job = this.transData.job;\n      }\n      if (this.transData.currentPage) {\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      this.search();\n    },\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this6 = this;\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.current = this.page.current;\n      params.size = this.page.size;\n      if (this.formBean.job) {\n        params.currentPage = 1;\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/findDjAgAll',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this6.gridData = resp.data.records;\n        _this6.page.total = resp.data.total;\n      });\n    },\n    /**\r\n    * 清空\r\n    **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n    * 新增\r\n    **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n    * 删除\r\n    **/\n    del: function del() {\n      var _this7 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.alarmsettingid;\n      });\n      ids.forEach(function (id) {\n        _this7.request.delReq.url = RESOURCE_PATH + '/' + id;\n        _this7.request.delReq.method = 'DELETE';\n        _this7.loadingdel = true;\n        _this7.$ajax(_this7.request.delReq).then(function (resp) {\n          _this7.loadingdel = false;\n          _this7.search();\n        });\n      });\n    },\n    handleUpload: function handleUpload(file) {\n      var fileExtension = file.name.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i);\n      if (fileExtension.pop() !== 'tar') {\n        this.$Message.warning('您上传的不是工程压缩包！');\n        return false;\n      }\n      if (!this.multiple) {\n        if (this.files.length > 0) {\n          this.fileError = \"\\u4E0D\\u80FD\\u9009\\u62E9\\u591A\\u4E2A\\u7684\\u6587\\u4EF6\";\n          return false;\n        }\n      }\n      if (this.files.find(function (e) {\n        return e.name == file.name;\n      })) {\n        this.fileError = \"\".concat(file.name, \"\\u5DF2\\u5B58\\u5728\\u4E0A\\u4F20\\u5217\\u8868\\uFF0C\\u5DF2\\u81EA\\u52A8\\u8FC7\\u6EE4\\u6389\\uFF01\");\n        return false;\n      }\n      this.files.push(file);\n      return false;\n    },\n    importTar: function importTar() {\n      var _this8 = this;\n      var formData = new FormData();\n      formData.append('fileType', 'tar');\n      if (this.files.length == 0 || this.files == null) {\n        this.$Message.warning('请选择导入工程tar包');\n      } else {\n        var _iterator2 = _createForOfIteratorHelper(this.files),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var ele = _step2.value;\n            formData.append('file', ele);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        this.loadingStatus = true;\n        this.$ajax.post('/jobattributes/parseProject', formData).then(function (resp) {\n          _this8.loadingStatus = false;\n          _this8.files = [];\n          _this8.versionOp.uploadShow = false;\n          _this8.search();\n        });\n      }\n      // })\n    },\n    /**\r\n    * 数据复选事件\r\n    **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.alarmBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      // alert(currentPage);\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    }\n  },\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    this.init();\n    this.queryPlatform();\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","platformData","systemData","ctrlDisable","loadingdel","loadingsync","loadingStatus","fileType","files","formBean","platformList","request","delReq","method","url","addReq","gridColumns","width","align","title","key","minWidth","render","h","_ref","column","index","row","taskStatusList","taskStatus","_ref2","processStatusList","processStatus","_ref3","syncStatusList","syncStatus","_ref4","col","text","iconStyle","disable","content","transfer","trigger","class","poptipContentInner","icon","disabled","style","marginRight","margin","fontSize","border","padding","color","background","on","click","queryCache","currentPage","page","current","pageSize","size","$emit","assign","id","params","$Modal","confirm","job","onOk","loadConfig","$ajax","then","resp","search","onCancel","delConfig","platform","systems","version","blobDownload","console","log","versionOp","show","uploadShow","detail","gridData","selection","total","opt","ruleValidate","watch","val","length","methods","versionDetail","_this2","httpConfig","status","push","sync","_this3","$Notice","success","desc","error","queryPlatform","_this4","$store","getters","getUserPlatform","forEach","tmp","value","label","querySystem","_this5","$refs","refsystem","setQuery","userSystemList","getUserSystem","userSystem","init","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","err","e","f","download","_this6","records","clear","add","del","_this7","ids","Array","from","alarmsettingid","handleUpload","file","fileExtension","name","match","pop","$Message","warning","multiple","fileError","find","concat","importTar","_this8","formData","FormData","append","_iterator2","_step2","ele","post","select","getPageParam","alarmBean","changePage","changePageSize","mounted"],"sources":["src/view/app/workflow/workflowmanage/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form ref=\"workflowManageForm\" :model=\"formBean\" :label-width=\"80\" :rules='ruleValidate'>\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"platform\" label=\"平台名\" >\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"querySystem\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"systems\" label=\"应用名\" >\r\n              <Select ref=\"refsystem\" v-model=\"formBean.systems\" style=\"width:100px\" filterable  clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"job\" label=\"作业名\" >\r\n              <Input  v-model=\"formBean.job\"/>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"etlSystem\" label=\"版本号\">\r\n              <Input  v-model=\"formBean.version\"/>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n           <Col span=\"10\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n              <Button icon=\"ios-cloud-upload-outline\" @click=\"versionOp.uploadShow=true\">导入工作流</Button>\r\n              <!-- <S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n              <S-AuthButton type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</S-AuthButton> -->\r\n              <!-- <Button type=\"primary\" :loading=\"loadingdel\" @click=\"\">导入工作流</Button> -->\r\n              <!-- <Button type=\"primary\" :loading=\"loadingsync\" icon=\"ios-sync\" @click=\"sync\">同步</Button> -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\r\n    <Modal id=\"versionOp\" v-model=\"versionOp.show\" title=\"历史版本\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Row>\r\n            <Col span=\"2\">\r\n              <h3>版本号：</h3>\r\n            </Col>\r\n            <Col span=\"22\">\r\n              <Tag v-for=\"item in versionOp.data\" style=\"margin-right:3%\" :key=\"item\" color=\"primary\" :name=\"item\" @click.native=\"versionDetail(item)\" size=\"large\">{{ item }}</Tag>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div class=\"spdb-toolbar\">\r\n          <!-- <Button icon=\"md-add\" type=\"primary\" @click=\"\">{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button> -->\r\n          <Button icon=\"md-close\" type=\"primary\" @click=\"versionOp.show=false\" > 取消 </Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"uploadOp\" v-model=\"versionOp.uploadShow\" title=\"工作流压缩包上传\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Form ref=\"importOpForm\" :label-width=\"100\" >\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"导入文件名:\" style=\"cursor:pointer;\" >\r\n                  <Upload ref=\"importTar\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n                    <Input style=\"width:400px;\" type=\"textarea\" :format=\"['tar']\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n                  </Upload>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <div class=\"spdb-toolbar\">\r\n                  <Button icon=\"md-add\" type=\"primary\" @click=\"importTar\" :loading=\"loadingStatus\" :disabled=\"loadingStatus\" >{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button>\r\n                  <Button icon=\"md-close\" type=\"primary\" @click=\"versionOp.uploadShow=false\" > 取消 </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/jobarrange'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      platformData: [],\r\n      systemData: [],\r\n      ctrlDisable: true,\r\n      loadingdel: false,\r\n      loadingsync: false,\r\n      loadingStatus: false,\r\n      fileType: '',\r\n      files: [],\r\n      formBean: {},\r\n      platformList: [],\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        // {\r\n        //   title: '序号',\r\n        //   key: 'id',\r\n        //   align: 'center',\r\n        //   width: 80\r\n        // },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center',\r\n          width: 80\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          align: 'center',\r\n          width: 80\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          align: 'center',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '变更状态',\r\n          key: 'job',\r\n          align: 'taskStatus',\r\n          width: 95,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.taskStatusList[row.taskStatus])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '任务状态',\r\n          key: 'processStatus',\r\n          align: 'center',\r\n          width: 95,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.processStatusList[row.processStatus])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '同步状态',\r\n          key: 'syncStatus',\r\n          align: 'center',\r\n          minWidth: 130,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.syncStatusList[row.syncStatus])\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '进入Dispatcher时间',\r\n        //   key: 'startDate',\r\n        //   align: 'center',\r\n        //   width: 180\r\n        // },\r\n        // {\r\n        //   title: '开始执行时间',\r\n        //   key: 'endDate',\r\n        //   align: 'center',\r\n        //   minWidth: 180\r\n        // },\r\n        {\r\n          title: '版本号',\r\n          key: 'version',\r\n          align: 'center',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 300,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            // row.taskStatus 1->新增；2->变更；3->下线 4->上线完成\r\n            // row.taskStatus = 2\r\n            let col = '#03399b'\r\n            let text = '上线'\r\n            let iconStyle = 'md-arrow-round-up'\r\n            let disable = false\r\n            if (row.processStatus === 3) {\r\n              col = 'red'\r\n              text = '下线'\r\n              iconStyle = 'md-arrow-round-down'\r\n              disable = true\r\n            } else {\r\n              col = 'green'\r\n            }\r\n\r\n            return h('div', [\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '编辑',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 编辑\r\n                  props: {\r\n                    icon: 'md-create',\r\n                    disabled: disable\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                      this.$emit('switch', Object.assign({}, { row: row, id: row.id }, queryCache)) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: text,\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 上线：部署的流程（点完之后变为上线\r\n                  props: {\r\n                    icon: iconStyle\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: col,\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                    // deploy 上线 rollback 下线\r\n                      let params = Object.assign({}, row)\r\n                      if (row.processStatus === 3) {\r\n                        this.$Modal.confirm({\r\n                          title: '提示',\r\n                          content: '确定下线' + params.job + '作业吗',\r\n                          onOk: () => {\r\n                            let loadConfig = {\r\n                              method: 'POST',\r\n                              url: '/jobdevelop/rollback',\r\n                              data: params\r\n                            }\r\n                            this.$ajax(loadConfig)\r\n                              .then(resp => {\r\n                                this.search()\r\n                              })\r\n                          },\r\n                          onCancel: () => {\r\n                          }\r\n                        })\r\n                      } else {\r\n                        this.$Modal.confirm({\r\n                          title: '提示',\r\n                          content: '确定上线' + params.job + '作业吗',\r\n                          onOk: () => {\r\n                            let loadConfig = {\r\n                              method: 'POST',\r\n                              url: '/jobdevelop/deploy',\r\n                              data: params\r\n                            }\r\n                            this.$ajax(loadConfig)\r\n                              .then(resp => {\r\n                                this.search()\r\n                              })\r\n                          },\r\n                          onCancel: () => {\r\n                          }\r\n                        })\r\n                      }\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '删除',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 删除：只删除dy_job_arrange\r\n                  props: {\r\n                    icon: 'md-trash',\r\n                    disabled: disable\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.$Modal.confirm({\r\n                        title: '提示',\r\n                        content: '确定删除' + row.job + '作业吗',\r\n                        onOk: () => {\r\n                          let delConfig = {\r\n                            method: 'DELETE',\r\n                            url: RESOURCE_PATH + '/delete/' + row.id\r\n                          }\r\n                          this.$ajax(delConfig)\r\n                            .then(resp => {\r\n                              this.search()\r\n                            })\r\n                        },\r\n                        onCancel: () => {\r\n                        }\r\n                      })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '导出',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 导出：下载一个压缩包\r\n                  props: {\r\n                    icon: 'md-redo'\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job, version: row.version }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/download',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          utils.blobDownload(resp)\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '版本切换',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 版本切换\r\n                  props: {\r\n                    icon: 'md-repeat',\r\n                    disabled: disable\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job, version: row.version }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/loadJobArrangesByVersion',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          console.log(resp)\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '历史版本',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 历史版本\r\n                  props: {\r\n                    icon: 'md-search'\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/versionCodeList/',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          this.versionOp.platform = row.platform\r\n                          this.versionOp.systems = row.systems\r\n                          this.versionOp.job = row.job\r\n                          this.versionOp.show = true\r\n                          this.versionOp.data = resp.data\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ])\r\n\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      versionOp: {\r\n        platform: '',\r\n        systems: '',\r\n        job: '',\r\n        show: false,\r\n        uploadShow: false,\r\n        data: [],\r\n        detail: {}\r\n      },\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      },\r\n      syncStatusList: { '0': '正常线上开发无需同步', '1': '成功', '2': '失败' },\r\n      processStatusList: { '1': '待投产', '2': '投产失败', '3': '投产成功' },\r\n      taskStatusList: { '1': '新增', '2': '变更', '3': '下线' }\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length != 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    versionDetail (version) {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/loadJobArrangesByVersion',\r\n        params: { platform: this.versionOp.platform, systems: this.versionOp.systems, job: this.versionOp.job, version: version }\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = []\r\n            this.gridData.push(resp.data)\r\n            this.page.total = 1\r\n            // this.versionOp.detail = resp.data\r\n            this.versionOp.show = false\r\n          }\r\n        })\r\n    },\r\n    // 同步\r\n    sync () {\r\n      // 同步\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/sync'\r\n      }\r\n      this.loadingsync = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.loadingsync = false\r\n          if (resp.data == '1') {\r\n            this.$Notice.success({\r\n              title: '信息',\r\n              desc: '同步成功'\r\n            })\r\n          } else {\r\n            this.$Notice.error({\r\n              title: '信息',\r\n              desc: '同步失败'\r\n            })\r\n          }\r\n          this.search()\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.job) {\r\n        this.formBean.job = this.transData.job\r\n      }\r\n      if (this.transData.currentPage) {\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (this.formBean.job) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/findDjAgAll',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.alarmsettingid)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.loadingdel = true\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.loadingdel = false\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    handleUpload: function (file) {\r\n      var fileExtension = (file.name).match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)\r\n      if (fileExtension.pop() !== 'tar') {\r\n        this.$Message.warning('您上传的不是工程压缩包！')\r\n        return false\r\n      }\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    importTar () {\r\n      var formData = new FormData()\r\n      formData.append('fileType', 'tar')\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入工程tar包')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        this.loadingStatus = true\r\n        this.$ajax.post('/jobattributes/parseProject', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            this.files = []\r\n            this.versionOp.uploadShow = false\r\n            this.search()\r\n          })\r\n      }\r\n      // })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      // alert(currentPage);\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n    this.queryPlatform()\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.ivu-poptip-body-content-inner {\r\n    text-align: center;\r\n    /* overflow: auto; */\r\n    width: 100%;\r\n    word-break: break-word;\r\n}\r\n</style>\r\n<style scoped>\r\n.detail-title{\r\n  font-size: 15px;\r\n}\r\n.detail-message {\r\n  color: #3e3f4b;\r\n  margin-left: 10px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}