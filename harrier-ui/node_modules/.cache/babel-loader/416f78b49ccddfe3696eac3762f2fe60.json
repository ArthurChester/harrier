{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\jobimgs\\jobRate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\jobimgs\\jobRate.vue","mtime":1681468306540},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      graph: '',\n      // option: {\n      //   title: {\n      //     text: '最近1月完成时间分布（次数）',\n      //     textStyle: {\n      //       fontSize: 18\n      //     },\n      //     x: 'center',\n      //     y: 'top',\n      //     textAlign: 'left'\n      //   },\n      //   grid: {\n      //     bottom: 20\n      //   },\n      //   tooltip: {\n      //     trigger: 'axis',\n      //     axisPointer: {\n      //       type: 'shadow'\n      //     }\n      //   },\n      //   lineStyle: {\n      //     width: 4\n      //   },\n      //   xAxis: {\n      //     data: ['0-6时', '6-8时', '8-10时', '10-12时', '12时后']\n      //     // data:MonthCompleteTimeArray\n      //   },\n      //   yAxis: {\n      //     splitLine: { show: false }\n      //   },\n      //   series: [\n      //     {\n      //       name: '完成次数',\n      //       type: 'bar',\n      //       barWidth: 20,\n      //       itemStyle: {\n      //         normal: {\n      //           barBorderRadius: 5,\n      //           color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n      //             { offset: 0, color: '#00b4ff' },\n      //             { offset: 1, color: '#000073' }\n      //             // { offset: 0, color: 'rgba(1, 10, 255, 0.4)' },\n      //             // { offset: 1, color: 'rgba(1, 10, 255, 0.7)' }\n      //           ])\n      //         }\n      //       },\n      //       data: [4, 5, 6, 7, 8, 9]\n      //       // data: MonthCompleteTimeValue,\n      //     }\n      //   ]\n      // },\n      jobstat: []\n    };\n  },\n  methods: {\n    init: function init() {\n      // this.graph = this.$echarts.init(document.getElementById('JobRate'))\n      // this.graph.setOption(this.option)\n    },\n    getData: function getData() {\n      var _this = this;\n      var params = {};\n      var job = this.transData.job;\n      var system = this.transData.system;\n      var platform = this.transData.platform;\n      params.job = job;\n      params.platform = platform;\n      params.system = system;\n      var httpConfig = {\n        method: 'GET',\n        url: '/jobimg/getRate',\n        params: params\n      };\n      var rateList = {};\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          rateList = resp.data;\n          _this.getRada(rateList);\n        }\n      });\n    },\n    getRada: function getRada(rateList) {\n      this.$nextTick(function () {\n        // let distvalue = this.alarmDist\n        var arr = rateList;\n        var distvalue = []; //[7,6,8,10,1]\n        var indicator = [{\n          name: '血缘',\n          max: 10,\n          value: rateList.relation\n        }, {\n          name: '时效',\n          max: 10,\n          value: rateList.timeliness\n        }, {\n          name: '稳运',\n          max: 10,\n          value: rateList.steady\n        }, {\n          name: '效能',\n          max: 10,\n          value: rateList.efficiency\n        }, {\n          name: '影响',\n          max: 10,\n          value: rateList.influence\n        }];\n        indicator.forEach(function (element) {\n          if (element.value) {\n            distvalue.push(element.value);\n          } else {\n            distvalue.push(0);\n          }\n        });\n        var i = 0;\n        indicator.forEach(function (element) {\n          if (distvalue[i] > 10) {\n            indicator[i].max = distvalue[i];\n          }\n          i = i + 1;\n        });\n        var right1 = {\n          tooltip: {\n            show: true,\n            trigger: 'item'\n          },\n          title: {\n            // text: '作业评分统计',\n            textAlign: 'auto',\n            x: 'center',\n            textStyle: {\n              color: '#516b91'\n              // fontSize:'20',\n            }\n          },\n\n          radar: {\n            center: ['50%', '50%'],\n            // 偏移位置\n            radius: '65%',\n            startAngle: 90,\n            // 起始角度\n            splitNumber: 4,\n            // shape: 'circle',\n            splitArea: {\n              areaStyle: {\n                // color: \"transparent\"\n              }\n            },\n            axisLabel: {\n              show: false,\n              fontSize: 10,\n              color: '#000',\n              fontStyle: 'normal',\n              fontWeight: 'normal'\n            },\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#516b91' // #516b91 \"rgba(255, 255, 255, 1)\"\n              }\n            },\n\n            splitLine: {\n              show: true,\n              lineStyle: {\n                // color: 'rgba(84, 112, 200, 0.5)'515a6e\n                // color: 'rgba(255, 255, 255, 0.5)'\n              }\n            },\n            indicator: indicator\n          },\n          series: [{\n            type: 'radar',\n            areaStyle: {\n              normal: {\n                // color: 'rgba(245,166,35,0.4)'\n                // color: 'rgba(84, 112, 200, 0.9)'\n                color: 'rgba(129, 170, 232, 0.9)'\n              }\n            },\n            data: [{\n              value: distvalue,\n              itemStyle: {\n                normal: {\n                  color: '#5470c8',\n                  lineStyle: {\n                    // color: '#fff'\n                  }\n                }\n              },\n              name: '作业评分分布'\n            }]\n          }]\n        };\n        var graph = this.$echarts.init(document.getElementById('JobRate'));\n        graph.setOption(right1);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.getData();\n  }\n};",{"version":3,"names":["props","transData","type","Object","default","_default","data","graph","jobstat","methods","init","getData","_this","params","job","system","platform","httpConfig","method","url","rateList","$ajax","then","resp","status","getRada","$nextTick","arr","distvalue","indicator","name","max","value","relation","timeliness","steady","efficiency","influence","forEach","element","push","i","right1","tooltip","show","trigger","title","textAlign","x","textStyle","color","radar","center","radius","startAngle","splitNumber","splitArea","areaStyle","axisLabel","fontSize","fontStyle","fontWeight","axisLine","lineStyle","splitLine","series","normal","itemStyle","$echarts","document","getElementById","setOption","mounted"],"sources":["src/view/spdb/job/jobList/jobimgs/jobRate.vue"],"sourcesContent":["<template>\r\n  <div id=\"JobRate\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      graph: '',\r\n      // option: {\r\n      //   title: {\r\n      //     text: '最近1月完成时间分布（次数）',\r\n      //     textStyle: {\r\n      //       fontSize: 18\r\n      //     },\r\n      //     x: 'center',\r\n      //     y: 'top',\r\n      //     textAlign: 'left'\r\n      //   },\r\n      //   grid: {\r\n      //     bottom: 20\r\n      //   },\r\n      //   tooltip: {\r\n      //     trigger: 'axis',\r\n      //     axisPointer: {\r\n      //       type: 'shadow'\r\n      //     }\r\n      //   },\r\n      //   lineStyle: {\r\n      //     width: 4\r\n      //   },\r\n      //   xAxis: {\r\n      //     data: ['0-6时', '6-8时', '8-10时', '10-12时', '12时后']\r\n      //     // data:MonthCompleteTimeArray\r\n      //   },\r\n      //   yAxis: {\r\n      //     splitLine: { show: false }\r\n      //   },\r\n      //   series: [\r\n      //     {\r\n      //       name: '完成次数',\r\n      //       type: 'bar',\r\n      //       barWidth: 20,\r\n      //       itemStyle: {\r\n      //         normal: {\r\n      //           barBorderRadius: 5,\r\n      //           color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n      //             { offset: 0, color: '#00b4ff' },\r\n      //             { offset: 1, color: '#000073' }\r\n      //             // { offset: 0, color: 'rgba(1, 10, 255, 0.4)' },\r\n      //             // { offset: 1, color: 'rgba(1, 10, 255, 0.7)' }\r\n      //           ])\r\n      //         }\r\n      //       },\r\n      //       data: [4, 5, 6, 7, 8, 9]\r\n      //       // data: MonthCompleteTimeValue,\r\n      //     }\r\n      //   ]\r\n      // },\r\n      jobstat: []\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      // this.graph = this.$echarts.init(document.getElementById('JobRate'))\r\n      // this.graph.setOption(this.option)\r\n    },\r\n\r\n    getData () {\r\n      let params = {}\r\n      let job = this.transData.job\r\n      let system = this.transData.system\r\n      let platform = this.transData.platform\r\n      params.job=job\r\n      params.platform=platform\r\n      params.system=system\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/jobimg/getRate',\r\n        params: params\r\n      }\r\n      let rateList = {}\r\n      this.$ajax(httpConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          rateList=resp.data\r\n          this.getRada(rateList)\r\n        }\r\n      })\r\n    },\r\n    getRada (rateList) {\r\n      this.$nextTick(function () {\r\n        // let distvalue = this.alarmDist\r\n        let arr=rateList\r\n        let distvalue = []//[7,6,8,10,1]\r\n        let indicator = [\r\n          { name: '血缘', max: 10 ,value: rateList.relation},\r\n          { name: '时效', max: 10 ,value: rateList.timeliness},\r\n          { name: '稳运', max: 10 ,value: rateList.steady},\r\n          { name: '效能', max: 10 ,value: rateList.efficiency},\r\n          { name: '影响', max: 10 ,value: rateList.influence},\r\n        ]\r\n        indicator.forEach(element => {\r\n          if(element.value){\r\n            distvalue.push(element.value)\r\n          }else{\r\n            distvalue.push(0)\r\n          }\r\n        })  \r\n        let i = 0\r\n        indicator.forEach(element => {\r\n          if (distvalue[i] > 10) {\r\n            indicator[i].max = distvalue[i]\r\n          }\r\n          i = i + 1\r\n        })\r\n        const right1 = {\r\n          tooltip: {\r\n            show: true,\r\n            trigger: 'item'\r\n          },\r\n          title: {\r\n            // text: '作业评分统计',\r\n            textAlign: 'auto',\r\n            x: 'center',\r\n            textStyle: {\r\n              color: '#516b91'\r\n              // fontSize:'20',\r\n            }\r\n          },\r\n          radar: {\r\n            center: ['50%', '50%'], // 偏移位置\r\n            radius: '65%',\r\n            startAngle: 90, // 起始角度\r\n            splitNumber: 4,\r\n            // shape: 'circle',\r\n            splitArea: {\r\n              areaStyle: {\r\n                // color: \"transparent\"\r\n              }\r\n            },\r\n            axisLabel: {\r\n              show: false,\r\n              fontSize: 10,\r\n              color: '#000',\r\n              fontStyle: 'normal',\r\n              fontWeight: 'normal'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#516b91'// #516b91 \"rgba(255, 255, 255, 1)\"\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                // color: 'rgba(84, 112, 200, 0.5)'515a6e\r\n                // color: 'rgba(255, 255, 255, 0.5)'\r\n              }\r\n            },\r\n            indicator: indicator\r\n          },\r\n          series: [\r\n            {\r\n              type: 'radar',\r\n              areaStyle: {\r\n                normal: {\r\n                  // color: 'rgba(245,166,35,0.4)'\r\n                  // color: 'rgba(84, 112, 200, 0.9)'\r\n                  color: 'rgba(129, 170, 232, 0.9)'\r\n                }\r\n              },\r\n              data: [\r\n                {\r\n                  value: distvalue,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      color: '#5470c8',\r\n                      lineStyle: {\r\n                        // color: '#fff'\r\n                      }\r\n                    }\r\n                  },\r\n                  name: '作业评分分布'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n\r\n        let graph = this.$echarts.init(document.getElementById('JobRate'))\r\n        graph.setOption(right1)\r\n      })\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.init()\r\n    this.getData()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  .container {\r\n    color : rgb(3, 58, 240)\r\n  }\r\n</style>\r\n"],"mappings":";AAKA;EACAA,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QACA;MACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA,WAAAA,KAAA;MACA;MACA;IAAA,CACA;IAEAC,OAAA,WAAAA,QAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,MAAA;MACA,IAAAC,GAAA,QAAAb,SAAA,CAAAa,GAAA;MACA,IAAAC,MAAA,QAAAd,SAAA,CAAAc,MAAA;MACA,IAAAC,QAAA,QAAAf,SAAA,CAAAe,QAAA;MACAH,MAAA,CAAAC,GAAA,GAAAA,GAAA;MACAD,MAAA,CAAAG,QAAA,GAAAA,QAAA;MACAH,MAAA,CAAAE,MAAA,GAAAA,MAAA;MACA,IAAAE,UAAA;QACAC,MAAA;QACAC,GAAA;QACAN,MAAA,EAAAA;MACA;MACA,IAAAO,QAAA;MACA,KAAAC,KAAA,CAAAJ,UAAA,EAAAK,IAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA;UACAJ,QAAA,GAAAG,IAAA,CAAAjB,IAAA;UACAM,KAAA,CAAAa,OAAA,CAAAL,QAAA;QACA;MACA;IACA;IACAK,OAAA,WAAAA,QAAAL,QAAA;MACA,KAAAM,SAAA;QACA;QACA,IAAAC,GAAA,GAAAP,QAAA;QACA,IAAAQ,SAAA;QACA,IAAAC,SAAA,IACA;UAAAC,IAAA;UAAAC,GAAA;UAAAC,KAAA,EAAAZ,QAAA,CAAAa;QAAA,GACA;UAAAH,IAAA;UAAAC,GAAA;UAAAC,KAAA,EAAAZ,QAAA,CAAAc;QAAA,GACA;UAAAJ,IAAA;UAAAC,GAAA;UAAAC,KAAA,EAAAZ,QAAA,CAAAe;QAAA,GACA;UAAAL,IAAA;UAAAC,GAAA;UAAAC,KAAA,EAAAZ,QAAA,CAAAgB;QAAA,GACA;UAAAN,IAAA;UAAAC,GAAA;UAAAC,KAAA,EAAAZ,QAAA,CAAAiB;QAAA,EACA;QACAR,SAAA,CAAAS,OAAA,WAAAC,OAAA;UACA,IAAAA,OAAA,CAAAP,KAAA;YACAJ,SAAA,CAAAY,IAAA,CAAAD,OAAA,CAAAP,KAAA;UACA;YACAJ,SAAA,CAAAY,IAAA;UACA;QACA;QACA,IAAAC,CAAA;QACAZ,SAAA,CAAAS,OAAA,WAAAC,OAAA;UACA,IAAAX,SAAA,CAAAa,CAAA;YACAZ,SAAA,CAAAY,CAAA,EAAAV,GAAA,GAAAH,SAAA,CAAAa,CAAA;UACA;UACAA,CAAA,GAAAA,CAAA;QACA;QACA,IAAAC,MAAA;UACAC,OAAA;YACAC,IAAA;YACAC,OAAA;UACA;UACAC,KAAA;YACA;YACAC,SAAA;YACAC,CAAA;YACAC,SAAA;cACAC,KAAA;cACA;YACA;UACA;;UACAC,KAAA;YACAC,MAAA;YAAA;YACAC,MAAA;YACAC,UAAA;YAAA;YACAC,WAAA;YACA;YACAC,SAAA;cACAC,SAAA;gBACA;cAAA;YAEA;YACAC,SAAA;cACAd,IAAA;cACAe,QAAA;cACAT,KAAA;cACAU,SAAA;cACAC,UAAA;YACA;YACAC,QAAA;cACAlB,IAAA;cACAmB,SAAA;gBACAb,KAAA;cACA;YACA;;YACAc,SAAA;cACApB,IAAA;cACAmB,SAAA;gBACA;gBACA;cAAA;YAEA;YACAlC,SAAA,EAAAA;UACA;UACAoC,MAAA,GACA;YACA/D,IAAA;YACAuD,SAAA;cACAS,MAAA;gBACA;gBACA;gBACAhB,KAAA;cACA;YACA;YACA5C,IAAA,GACA;cACA0B,KAAA,EAAAJ,SAAA;cACAuC,SAAA;gBACAD,MAAA;kBACAhB,KAAA;kBACAa,SAAA;oBACA;kBAAA;gBAEA;cACA;cACAjC,IAAA;YACA;UAEA;QAEA;QAEA,IAAAvB,KAAA,QAAA6D,QAAA,CAAA1D,IAAA,CAAA2D,QAAA,CAAAC,cAAA;QACA/D,KAAA,CAAAgE,SAAA,CAAA7B,MAAA;MACA;IACA;EAEA;EACA8B,OAAA,WAAAA,QAAA;IACA,KAAA9D,IAAA;IACA,KAAAC,OAAA;EACA;AACA"}]}