{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\Table.vue","mtime":1681468306533},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.split\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nimport store from '@/store/index';\nimport common from '@/mixins/common';\nvar RESOURCE_PATH = '/udsComplement';\nexport default {\n  mixins: [common],\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      platformData: [],\n      systemData: [],\n      jobstatusData: [{\n        label: 'Done',\n        value: 'Done'\n      }, {\n        label: 'Pending',\n        value: 'Pending'\n      }, {\n        label: 'Running',\n        value: 'Running'\n      }, {\n        label: 'Failed',\n        value: 'Failed'\n      }, {\n        label: 'Ready',\n        value: 'Ready'\n      }],\n      formBean: {},\n      udsJobStyle: {\n        status: 'black'\n      },\n      gridColumns: [{\n        title: '补数名称',\n        ellipsis: true,\n        minWidth: 150,\n        sortable: true,\n        key: 'comName'\n      }, {\n        title: '开始日期',\n        ellipsis: false,\n        tooltip: false,\n        minWidth: 170,\n        sortable: true,\n        key: 'startTime'\n      }, {\n        title: '结束日期',\n        ellipsis: false,\n        tooltip: false,\n        minWidth: 170,\n        sortable: true,\n        key: 'endTime',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          var endArr = ['', ''];\n          if (row.endTime) {\n            endArr = row.endTime.split(' ');\n          }\n          return h('div', [h('div', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.lastStatus === 'Running' ? '' : row.endTime)]);\n        }\n      }, {\n        title: '补数状态',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 80,\n        maxWidth: 100,\n        sortable: true,\n        key: 'lastStatus'\n      }, {\n        title: '批次范围',\n        ellipsis: true,\n        tooltip: true,\n        minWidth: 80,\n        maxWidth: 100,\n        sortable: true,\n        key: 'batchRange'\n      }, {\n        title: '服务器范围',\n        ellipsis: false,\n        tooltip: true,\n        minWidth: 110,\n        maxWidth: 130,\n        sortable: true,\n        key: 'serverNameRang'\n      }, {\n        title: '作业并行数',\n        ellipsis: false,\n        tooltip: true,\n        minWidth: 110,\n        maxWidth: 130,\n        sortable: true,\n        key: 'maxRunJob'\n      }, {\n        title: '详情',\n        width: 80,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-reorder'\n            },\n            style: {\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              backgroundColor: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.complementId;\n                _this.$emit('switch', Object.assign({}, {\n                  id: id,\n                  jobData: row,\n                  statusName: 'jobComplement',\n                  curTab: 'Table'\n                }, _this.getPageParam())); // 提交form事件，在parent中显示form\n              }\n            }\n          }, '')]);\n        }\n      }],\n      gridData: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {\n        // platform: [\n        //   { validator: validatePlatform, trigger: 'change' }\n        // ]\n      },\n      fromto: '1'\n    };\n  },\n  methods: {\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      if (this.transData.currentPage) {\n        this.formBean = this.transData.formBean;\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      if (window.sessionStorage.getItem('joblist_jobcomplement') || this.transData.jobStatus) {\n        this.fromto = '0';\n        // this.transData.jobStatus\n        if (window.sessionStorage.getItem('joblist_jobcomplement') == '0') {\n          this.formBean.enable = 0;\n        } else {\n          this.formBean.enable = 1;\n          if (this.transData.formBean && (this.transData.formBean.lastStatus || this.transData.formBean.lastStatus.length == 0)) {\n            this.formBean.lastStatus = this.transData.formBean.lastStatus;\n          } else {\n            this.formBean.lastStatus = window.sessionStorage.getItem('joblist_jobcomplement');\n          }\n          if (this.transData.jobData) {\n            this.formBean.platform = this.transData.jobData.platform;\n          }\n        }\n      }\n    },\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n     * 查询\r\n     **/\n    search: function search() {\n      var _this2 = this;\n      if (window.sessionStorage.getItem('joblist_jobcomplement') || this.transData.jobStatus) {\n        var prevTab = '';\n        var backParam = {};\n        if (this.transData.statusName === 'table') {\n          backParam.statusName = this.transData.prevTab;\n        } else {\n          backParam.statusName = this.transData.statusName;\n        }\n        backParam.udsjobsearch = '1';\n        this.$emit('switch', Object.assign({}, backParam));\n      } else {\n        this.$emit('switch', Object.assign({}, {\n          statusName: 'table'\n        }));\n      }\n      var params = {};\n      if (this.formBean.comName) {\n        params.comName = this.formBean.comName;\n      }\n      params.current = this.page.current;\n      params.size = this.page.size;\n      for (var key in params) {\n        if (key === 'job') {\n          if (params[key] && params[key] !== '') {\n            params[key] = '%' + params[key].trim().toUpperCase() + '%';\n          } else {\n            delete params[key];\n          }\n        }\n        if (key === 'systems' && params[key]) {\n          params[key] = params[key].trim().toUpperCase();\n        }\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/selectAll',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.data.total && resp.data.total > 0) {\n          if (resp.data.rows && resp.data.rows.length === 0) {\n            _this2.page.current = 1;\n            _this2.search();\n          }\n        }\n        _this2.gridData = resp.data.rows;\n        _this2.page.total = resp.data.total;\n      });\n      // })\n    },\n    execOpt: function execOpt(flag, row, index, column) {},\n    /**\r\n     * 清空\r\n     **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n     * 数据复选事件\r\n     **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    /**\r\n     * 改变页码事件\r\n     **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n     * 改变分页大小事件\r\n     **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    /**\r\n     * 列排序\r\n     **/\n    changeSort: function changeSort(column) {\n      var classcon = window.event.currentTarget.className;\n      var sort, order;\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\n        order = 'ASC';\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\n        order = 'DESC';\n      }\n      // console.log(\"column,key,order\"+ column.key );\n      this.formBean.order = order;\n      this.formBean.sort = column.key;\n      this.search();\n    },\n    getPlatformList: function getPlatformList() {\n      var _this3 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this3.platformData.push(tmp);\n      });\n      this.search();\n    },\n    // harrier getSystemList\n    getSystemList: function getSystemList() {\n      var _this4 = this;\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this4.systemData.push(tmp);\n        });\n      }\n    },\n    // harrier test end\n    queryPlatform: function queryPlatform() {\n      var _this5 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getPlatformList'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this5.platformData.push(tmp);\n        });\n        _this5.search();\n        _this5.queryJobstatus();\n      });\n    },\n    querySystem: function querySystem() {\n      var _this6 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getSysList',\n        params: {\n          platform: this.formBean.platform\n        }\n      };\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data;\n            tmp.label = data;\n            _this6.systemData.push(tmp);\n          });\n        });\n      }\n    },\n    queryJobstatus: function queryJobstatus() {\n      var _this7 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'm_job_status'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this7.jobstatusData = [];\n        resp.data.rows.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data.dicName;\n          tmp.label = data.dicName;\n          _this7.jobstatusData.push(tmp);\n          // this.formBean.platform = \"UDS\";\n        });\n      });\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.formBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.getPlatformList();\n  }\n};",{"version":3,"names":["utils","store","common","RESOURCE_PATH","mixins","props","transData","type","Object","default","_default","data","_this","platformData","systemData","jobstatusData","label","value","formBean","udsJobStyle","status","gridColumns","title","ellipsis","minWidth","sortable","key","tooltip","render","h","_ref","column","index","row","endArr","endTime","split","size","style","lastStatus","maxWidth","width","align","_ref2","icon","margin","fontSize","border","padding","color","backgroundColor","on","click","id","complementId","$emit","assign","jobData","statusName","curTab","getPageParam","gridData","selection","page","current","total","opt","ruleValidate","fromto","methods","init","currentPage","pageSize","window","sessionStorage","getItem","jobStatus","enable","length","platform","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","err","e","f","error","console","search","_this2","prevTab","backParam","udsjobsearch","params","comName","trim","toUpperCase","httpConfig","method","url","$ajax","then","resp","rows","execOpt","flag","clear","select","changePage","changePageSize","changeSort","classcon","event","currentTarget","className","sort","order","indexOf","getPlatformList","_this3","platformList","$store","getters","getUserPlatform","forEach","tmp","push","getSystemList","_this4","$refs","refsystem","setQuery","userSystemList","getUserSystem","userSystem","queryPlatform","_this5","loadConfig","queryJobstatus","querySystem","_this6","_this7","dicCode","dicName","filterMethod","option","mounted"],"sources":["src/view/spdb/job/jobComplement/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\" style=\"margin-top:20px;\">\r\n      <Form ref=\"udsjobForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\">\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"补数名\">\r\n              <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.comName\" placeholder=\"支持模糊查询\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"1\">&nbsp;</Col>\r\n          <Col span=\"8\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-table\" id=\"joblistTable\">\r\n      <Table  size=\"small\"  :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\" @on-sort-change=\"changeSort\">\r\n      </Table>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-page\">\r\n      <Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\"  show-total show-sizer show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" ></Page>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\nimport common from '@/mixins/common'\r\nconst RESOURCE_PATH = '/udsComplement'\r\n\r\nexport default {\r\n  mixins: [ common ],\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      platformData: [],\r\n      systemData: [],\r\n      jobstatusData: [\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Running', value: 'Running' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Ready', value: 'Ready' }\r\n      ],\r\n      formBean: {},\r\n      udsJobStyle: {\r\n        status: 'black'\r\n      },\r\n      gridColumns: [\r\n        {\r\n          title: '补数名称',\r\n          ellipsis: true,\r\n          minWidth: 150,\r\n          sortable: true,\r\n          key: 'comName'\r\n        },\r\n        {\r\n          title: '开始日期',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          minWidth: 170,\r\n          sortable: true,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束日期',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          minWidth: 170,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        {\r\n          title: '补数状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '批次范围',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'batchRange'\r\n        },\r\n        {\r\n          title: '服务器范围',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverNameRang'\r\n        },\r\n        {\r\n          title: '作业并行数',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'maxRunJob'\r\n        },\r\n        {\r\n          title: '详情',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.complementId\r\n                    this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobComplement', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n        // platform: [\r\n        //   { validator: validatePlatform, trigger: 'change' }\r\n        // ]\r\n      },\r\n      fromto: '1'\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n\r\n      if (window.sessionStorage.getItem('joblist_jobcomplement') || this.transData.jobStatus) {\r\n        this.fromto = '0'\r\n        // this.transData.jobStatus\r\n        if (window.sessionStorage.getItem('joblist_jobcomplement') == '0') {\r\n          this.formBean.enable = 0\r\n        } else {\r\n          this.formBean.enable = 1\r\n          if (this.transData.formBean && (this.transData.formBean.lastStatus ||\r\n          this.transData.formBean.lastStatus.length == 0)) { this.formBean.lastStatus = this.transData.formBean.lastStatus } else { this.formBean.lastStatus = window.sessionStorage.getItem('joblist_jobcomplement') }\r\n          if (this.transData.jobData) {\r\n            this.formBean.platform = this.transData.jobData.platform\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      if (\r\n        window.sessionStorage.getItem('joblist_jobcomplement') ||\r\n                this.transData.jobStatus\r\n      ) {\r\n        let prevTab = ''\r\n        let backParam = {}\r\n        if (this.transData.statusName === 'table') {\r\n          backParam.statusName = this.transData.prevTab\r\n        } else {\r\n          backParam.statusName = this.transData.statusName\r\n        }\r\n        backParam.udsjobsearch = '1'\r\n        this.$emit('switch', Object.assign({}, backParam))\r\n      } else {\r\n        this.$emit(\r\n          'switch',\r\n          Object.assign({}, { statusName: 'table' })\r\n        )\r\n      }\r\n      let params = {}\r\n      if (this.formBean.comName) {\r\n        params.comName = this.formBean.comName\r\n      }\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      for (let key in params) {\r\n        if (key === 'job') {\r\n          if (params[key] && params[key] !== '') {\r\n            params[key] = '%' + params[key].trim().toUpperCase() + '%'\r\n          } else {\r\n            delete params[key]\r\n          }\r\n        }\r\n        if (key === 'systems' && params[key]) {\r\n          params[key] = params[key].trim().toUpperCase()\r\n        }\r\n      }\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data.total && resp.data.total > 0) {\r\n            if (resp.data.rows && resp.data.rows.length === 0) {\r\n              this.page.current = 1\r\n              this.search()\r\n            }\r\n          }\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n        })\r\n      // })\r\n    },\r\n\r\n    execOpt (flag, row, index, column) {\r\n\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n     * 列排序\r\n     **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      // console.log(\"column,key,order\"+ column.key );\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    getPlatformList () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      this.search()\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    // harrier test end\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n          this.search()\r\n          this.queryJobstatus()\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    queryJobstatus () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'm_job_status' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobstatusData = []\r\n          resp.data.rows.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.dicName\r\n            tmp.label = data.dicName\r\n            this.jobstatusData.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n        })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getPlatformList()\r\n  }\r\n\r\n}\r\n</script>\r\n<style>\r\n#joblistTable table td div{\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n}\r\n#joblistTable table th div{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"}]}