{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Dep.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Dep.vue","mtime":1681468306534},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/udsJob';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      depDlg: {\n        show: false,\n        index: ''\n      },\n      formBean: {},\n      gridData: [],\n      gridColumns: [\n      /** {\r\n      type: 'selection',\r\n      width: 60,\r\n      //align: 'center',\r\n      fixed: 'left'\r\n      }, */\n      {\n        title: '平台名',\n        sortable: true,\n        width: 100,\n        key: 'platform'\n      }, {\n        title: '应用名',\n        sortable: true,\n        width: 100,\n        key: 'systems'\n      }, {\n        title: '作业名',\n        sortable: true,\n        minWidth: 200,\n        key: 'job',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n              // color: \"green\"\n              // color: row.isEnable === 0 ? 'red' : ''\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                var queryCache = {\n                  id: id,\n                  statusName: 'jobdetail',\n                  jobData: row,\n                  previd: _this.transData.id,\n                  prevTab: 'dep',\n                  curTab: 'dep',\n                  tablePage: _this.tablePage,\n                  formBean: _this.transData.formBean\n                };\n                if (_this.transData.jobStatus) {\n                  queryCache.jobStatus = _this.transData.jobStatus;\n                  _this.$emit('switch', Object.assign({}, queryCache, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, queryCache, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, row.job)]);\n        }\n      }, {\n        title: '执行节点',\n        minWidth: 120,\n        key: 'serverName'\n      }, {\n        title: '类型',\n        sortable: true,\n        width: 90,\n        key: 'jobType',\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px',\n              color: '#3399ff'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                var queryCache = {\n                  formBean: _this.transData.formBean,\n                  currentPage: _this.transData.currentPage,\n                  pageSize: _this.transData.pageSize,\n                  page: _this.page\n                };\n                if (_this.transData.prequeryCache) {\n                  queryCache = _this.transData.prequeryCache;\n                }\n                if (row.jobType == 'M' || row.jobType == 'W') {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    previd: _this.transData.id,\n                    statusName: 'frequency',\n                    prevTab: 'dep',\n                    curTab: 'dep',\n                    jobData: row\n                  }, _this.getPageParam()));\n                } else if (row.jobType == 'C') {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    previd: _this.transData.id,\n                    statusName: 'trigger',\n                    prevTab: 'dep',\n                    curTab: 'dep',\n                    jobData: row\n                  }, _this.getPageParam()));\n                  // this.$emit('switch', Object.assign({}, {id: id, statusName: 'trigger', jobData: row}, this.getPageParam()))\n                } else {\n                  _this.$Message.warning('日作业不存在定时或频度信息。');\n                }\n              }\n            }\n          }, _this.jobtypeList[row.jobType])]);\n        }\n      }, {\n        title: '状态',\n        sortable: true,\n        width: 110,\n        key: 'lastStatus'\n      }, {\n        title: '依赖批次号',\n        sortable: true,\n        width: 130,\n        key: 'depBatch'\n      }, {\n        title: '开始时间',\n        sortable: true,\n        width: 175,\n        key: 'startTime'\n      }, {\n        title: '结束时间',\n        sortable: true,\n        width: 175,\n        key: 'endTime',\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.lastStatus == 'Running' ? '' : row.endTime)]);\n        }\n      }, {\n        title: 'TXDate',\n        sortable: true,\n        width: 120,\n        key: 'jobDate'\n      }, {\n        title: '描述',\n        minWidth: 80,\n        key: 'des'\n      }, {\n        title: '依赖状态',\n        width: 100,\n        // fixed: 'right',\n        key: 'isEnable',\n        render: function render(h, _ref4) {\n          var column = _ref4.column,\n            index = _ref4.index,\n            row = _ref4.row;\n          var statusc = '#19be6b';\n          if (row.isEnable == '0') {\n            statusc = '#ed3f14';\n          }\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px',\n              color: statusc\n            },\n            on: {\n              click: function click() {\n                // this.formBean = Object.assign({}, row)\n                // this.formBean.depPlatform = row.platform\n                // this.formBean.depSystem = row.system\n                // this.formBean.depJob = row.job\n                // this.formBean.isEnable = '' + row.isEnable\n                // this.depDlg.index = index\n                // this.showDepDlg()\n              }\n            }\n          }, row.isEnable != 1 ? '禁用' : '启用')]);\n        }\n      }, {\n        title: '操作',\n        width: 80,\n        // fixed: 'right',\n        key: 'isEnable',\n        render: function render(h, _ref5) {\n          var column = _ref5.column,\n            index = _ref5.index,\n            row = _ref5.row;\n          var statusc = '#19be6b';\n          if (row.isEnable == '0') {\n            statusc = '#ed3f14';\n          }\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px'\n              // color: statusc\n            },\n\n            on: {\n              click: function click() {\n                _this.orgIsEnabel = row.isEnable + '';\n                _this.orgDepBatch = row.depBatch;\n                _this.formBean = Object.assign({}, row);\n                _this.formBean.depPlatform = row.platform;\n                _this.formBean.depSystem = row.systems;\n                _this.formBean.depJob = row.job;\n                _this.formBean.isEnable = '' + row.isEnable;\n                _this.formBean.id = row.pid;\n                _this.depDlg.index = index;\n                _this.showDepDlg();\n              }\n            }\n          }, '操作')]);\n        }\n      }],\n      // gridData: [{platform: \"BDP\", system: \"DLA\", job: \"BDP_DLA_TEST\",depPlatform: \"BDP\", depSystem: \"DLA\", depJob: \"BDP_DLA_TEST_STREAM\",des:\"ss\",isEnable: \"1\"}],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      tablePage: {},\n      ruleValidate: {},\n      jobtypeList: {\n        'D': '日',\n        'C': '定时',\n        'W': '周',\n        'M': '月'\n      },\n      orgIsEnabel: '',\n      orgDepBatch: null\n    };\n  },\n  methods: {\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      if (this.transData.id) {\n        if (this.transData.curTab === 'Table') {\n          this.tablePage.current = this.transData.currentPage;\n          this.tablePage.size = this.transData.pageSize;\n        }\n        if (this.transData.tablePage) {\n          this.tablePage = this.transData.tablePage;\n        }\n        if (this.transData.prequeryCache) {\n          // this.page = this.transData.prequeryCache.page\n          this.page.current = this.transData.prequeryCache.currentPage;\n          this.page.size = this.transData.prequeryCache.pageSize;\n        }\n      }\n      this.search();\n      // this.queryjobtypeList()\n    },\n    /**\r\n    * 如果传过来的有初始数据则进行数据绑定\r\n    **/\n    bindData: function bindData() {\n      try {\n        this.formBean = Object.assign({}, this.transData.initFormBean);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      params.downloadType = 'dep';\n      params.job = this.transData.id;\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this2 = this;\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.current = this.page.current;\n      params.size = this.page.size;\n      params.job = this.transData.id;\n      // if (!this.transData.formBean) {\n      //   params.currentPage = 1\n      // }\n      if (!params.job) {\n        params.job = this.$store.getters.getUmdata('dep');\n        this.$store.dispatch('resetUmdata', {\n          path: 'dep'\n        });\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/UpjobList',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        resp.data.records.forEach(function (data1) {\n          if (data1.depIsEnable) {\n            data1.isEnable = '1';\n          } else {\n            data1.isEnable = '0';\n          }\n        });\n        _this2.gridData = resp.data.records;\n        _this2.page.total = resp.data.total;\n      });\n    },\n    /**\r\n    * 返回到数据视图\r\n    **/\n    cancel: function cancel() {\n      var prevTab = '';\n      if (this.transData.tabObj) {\n        prevTab = this.transData.tabObj.prevTab;\n        prevTab = 'joblist';\n      }\n      var queryCache = {\n        formBean: this.transData.formBean,\n        currentPage: this.transData.currentPage,\n        pageSize: this.transData.pageSize\n      };\n      var backParam = {\n        statusName: 'table',\n        prevTab: prevTab,\n        type: 'back'\n      };\n      if (this.transData.tablePage) {\n        queryCache = {\n          formBean: this.transData.formBean,\n          currentPage: this.tablePage.current,\n          pageSize: this.tablePage.size\n        };\n      }\n      if (this.transData.prequeryCache) {\n        if (this.transData.jobStatus) {\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus;\n        }\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam));\n      } else {\n        this.$emit('switch', Object.assign({}, queryCache, backParam, {\n          jobData: this.transData.jobData\n        }));\n      }\n    },\n    showDepDlg: function showDepDlg() {\n      this.depDlg.show = true;\n    },\n    /**\r\n    * 数据复选事件\r\n    **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    /**\r\n    * 列排序\r\n    **/\n    changeSort: function changeSort(column) {\n      var classcon = window.event.currentTarget.className;\n      var sort, order;\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\n        order = 'ASC';\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\n        order = 'DESC';\n      }\n      // console.log(\"column,key,order\"+ column.key );\n      this.formBean.order = order;\n      this.formBean.sort = column.key;\n      this.search();\n    },\n    /**\r\n         * 平台管理员操作权限特殊处理增加判断\r\n         * 禁用启用依赖，仅当角色为平台管理员、平台是该用户拥有的才可以操作\r\n         *\r\n         **/\n    isOwnPlatform: function isOwnPlatform(job) {\n      var authPlatform = this.$store.getters.getPlatforms;\n      if (authPlatform.indexOf('ROLE_ADMIN') === -1) {\n        if (authPlatform.length > 0) {\n          if (authPlatform.includes(job.platform)) {\n            return true;\n          } else {\n            // 修改的平台不是所属平台\n            this.$Message.error({\n              content: '操作权限不足，请联系管理员确认！',\n              duration: 15,\n              closable: true\n            });\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    depOk: function depOk(row) {\n      var _this3 = this;\n      var params = {};\n      // console.log(this.formBean)\n      // params.depJob = this.formBean.job\n      // params.job = this.transData.jobData.job\n      // params.isEnable = this.formBean.isEnable\n      // params.depBatch = this.formBean.depBatch\n      // params.isChangeEnable = '0'\n      // params.authps = this.transData.jobData.platform + this.transData.jobData.system\n      params.id = this.formBean.pid;\n      params.isEnable = this.formBean.isEnable;\n      var httpConfig = {\n        url: RESOURCE_PATH,\n        data: params\n      };\n      // if (!this.isOwnPlatform({ platform: this.transData.jobData.platform })) {\n      //   return\n      // }\n      if (this.transData.id) {\n        if (this.orgIsEnabel !== this.formBean.isEnable) {\n          params.isChangeEnable = '1';\n        }\n        // httpConfig.method = 'PUT'\n        // httpConfig.url = '/udsjobdependency/' + this.transData.id\n        httpConfig.method = 'POST';\n        httpConfig.url = '/udsJobDependency/update';\n      } else {\n        httpConfig.method = 'POST';\n      }\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status == 200) {\n          // if (resp.data === 1 && params.isChangeEnable === '1') {\n          //   this.$Message.error({\n          //     content: '是否启用依赖修改失败！',\n          //     duration: 8,\n          //     closable: true\n          //   })\n          // }\n          // if (resp.data === 2) {\n          //   this.$Message.error({\n          //     content: '依赖批次号修改失败！',\n          //     duration: 8,\n          //     closable: true\n          //   })\n          // }\n          // this.gridData[this.depDlg.index].isEnable = this.formBean.isEnable\n          _this3.search();\n        }\n        // this.cancel();\n      });\n      // this.$emit('switch', {statusName: \"dep\"});\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.formBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    queryjobtypeList: function queryjobtypeList() {\n      var _this4 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'jobtype'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this4.jobtypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this4.jobtypeList[data.dicValue] = data.dicName;\n        });\n      });\n    }\n  },\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","depDlg","show","index","formBean","gridData","gridColumns","title","sortable","width","key","minWidth","render","h","_ref","column","row","size","style","on","click","id","job","queryCache","statusName","jobData","previd","prevTab","curTab","tablePage","jobStatus","$emit","assign","getPageParam","_ref2","marginRight","color","currentPage","pageSize","page","prequeryCache","jobType","$Message","warning","jobtypeList","_ref3","lastStatus","endTime","_ref4","statusc","isEnable","_ref5","orgIsEnabel","orgDepBatch","depBatch","depPlatform","platform","depSystem","systems","depJob","pid","showDepDlg","selection","current","total","opt","ruleValidate","methods","init","search","bindData","initFormBean","error","console","download","params","downloadType","_this2","$store","getters","getUmdata","dispatch","path","httpConfig","method","url","$ajax","then","resp","records","forEach","data1","depIsEnable","cancel","tabObj","backParam","select","changePage","changePageSize","changeSort","classcon","window","event","currentTarget","className","sort","order","indexOf","isOwnPlatform","authPlatform","getPlatforms","length","includes","content","duration","closable","depOk","_this3","isChangeEnable","status","queryjobtypeList","_this4","loadConfig","dicCode","rows","dicValue","dicName","mounted"],"sources":["src/view/spdb/job/jobList/Dep.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div>\r\n\t\t\t<!-- <Button type=\"primary\" icon=\"android-add\" @click=\"save\">保存</Button> -->\r\n\t\t\t<Row>\r\n\t\t\t\t<Col span=\"20\">\r\n\t\t\t\t\t<div style=\"font-size:14px;font-weight: bold; color: #464c5b;margin-left:5px;\">依赖作业列表\r\n\t\t\t\t\t&nbsp;&nbsp;平台名:{{this.transData.jobData.platform}}\r\n\t\t\t\t\t&nbsp;&nbsp;应用名:{{this.transData.jobData.systems}}\r\n\t\t\t\t\t&nbsp;&nbsp;作业名:{{this.transData.jobData.job}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t<!-- <Button size=\"small\" type=\"primary\" icon=\"md-cloud-download\" @click=\"download\" style=\"\">下载</Button> -->\r\n\t\t\t\t\t<Button size=\"small\" type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-table\" id=\"depTable\">\r\n\t\t\t<Table border :columns=\"gridColumns\" :data=\"gridData\" stripe @on-sort-change=\"changeSort\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t<Modal id=\"confirmDep\"\r\n\t\t\tv-model=\"depDlg.show\"\r\n\t\t\ttitle=\"修改依赖状态\"\r\n\t\t\t@on-ok=\"depOk\">\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :label-width=\"90\" >\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"平台名\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"formBean.depPlatform\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"formBean.depSystem\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"作业名\">\r\n\t\t\t\t\t\t\t\t<Input readonly type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.depJob\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"是否启用\">\r\n\t\t\t\t\t\t\t\t<RadioGroup v-model=\"formBean.isEnable\">\r\n\t\t\t\t\t\t\t\t\t<Radio label='1'><span>启用</span></Radio>\r\n\t\t\t\t\t\t\t\t\t<Radio label='0'><span>禁用</span></Radio>\r\n\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"依赖批次号\">\r\n\t\t\t\t\t\t\t\t<!-- <InputNumber :max=\"10000\" :min=\"0\" v-model=\"formBean.depBatch\"></InputNumber> -->\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"formBean.depBatch\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJob'\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  \t},\r\n  data () {\r\n    return {\r\n      depDlg: { show: false, index: '' },\r\n      formBean: {},\r\n      gridData: [],\r\n      gridColumns: [\r\n        /** {\r\n\t\t\t\t\ttype: 'selection',\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\t//align: 'center',\r\n\t\t\t\t\tfixed: 'left'\r\n\t\t\t\t}, */\r\n        {\r\n          title: '平台名',\r\n          sortable: true,\r\n          width: 100,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          sortable: true,\r\n          width: 100,\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          sortable: true,\r\n          minWidth: 200,\r\n          key: 'job',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                  // color: row.isEnable === 0 ? 'red' : ''\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    let queryCache = { id: id, statusName: 'jobdetail', jobData: row, previd: this.transData.id, prevTab: 'dep', curTab: 'dep', tablePage: this.tablePage, formBean: this.transData.formBean }\r\n                    if (this.transData.jobStatus) {\r\n                      queryCache.jobStatus = this.transData.jobStatus\r\n                      this.$emit('switch', Object.assign({}, queryCache, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, queryCache, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          minWidth: 120,\r\n          key: 'serverName'\r\n        },\r\n        {\r\n          title: '类型',\r\n          sortable: true,\r\n          width: 90,\r\n          key: 'jobType',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize, page: this.page }\r\n                    if (this.transData.prequeryCache) {\r\n                      queryCache = this.transData.prequeryCache\r\n                    }\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, previd: this.transData.id, statusName: 'frequency', prevTab: 'dep', curTab: 'dep', jobData: row }, this.getPageParam()))\r\n                    } else if (row.jobType == 'C') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, previd: this.transData.id, statusName: 'trigger', prevTab: 'dep', curTab: 'dep', jobData: row }, this.getPageParam()))\r\n                      // this.$emit('switch', Object.assign({}, {id: id, statusName: 'trigger', jobData: row}, this.getPageParam()))\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          sortable: true,\r\n          width: 110,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '依赖批次号',\r\n          sortable: true,\r\n          width: 130,\r\n          key: 'depBatch'\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          sortable: true,\r\n          width: 175,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          sortable: true,\r\n          width: 175,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus == 'Running' ? '' : row.endTime)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          sortable: true,\r\n          width: 120,\r\n          key: 'jobDate'\r\n        },\r\n        {\r\n          title: '描述',\r\n          minWidth: 80,\r\n          key: 'des'\r\n        },\r\n        {\r\n          title: '依赖状态',\r\n          width: 100,\r\n          // fixed: 'right',\r\n          key: 'isEnable',\r\n          render: (h, { column, index, row }) => {\r\n            let statusc = '#19be6b'\r\n            if (row.isEnable == '0') {\r\n              statusc = '#ed3f14'\r\n            }\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: statusc\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    // this.formBean = Object.assign({}, row)\r\n                    // this.formBean.depPlatform = row.platform\r\n                    // this.formBean.depSystem = row.system\r\n                    // this.formBean.depJob = row.job\r\n                    // this.formBean.isEnable = '' + row.isEnable\r\n                    // this.depDlg.index = index\r\n                    // this.showDepDlg()\r\n                  }\r\n                }\r\n              }, row.isEnable != 1 ? '禁用' : '启用')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 80,\r\n          // fixed: 'right',\r\n          key: 'isEnable',\r\n          render: (h, { column, index, row }) => {\r\n            let statusc = '#19be6b'\r\n            if (row.isEnable == '0') {\r\n              statusc = '#ed3f14'\r\n            }\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                  // color: statusc\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.orgIsEnabel = row.isEnable + ''\r\n                    this.orgDepBatch = row.depBatch\r\n                    this.formBean = Object.assign({}, row)\r\n                    this.formBean.depPlatform = row.platform\r\n                    this.formBean.depSystem = row.systems\r\n                    this.formBean.depJob = row.job\r\n                    this.formBean.isEnable = '' + row.isEnable\r\n                    this.formBean.id = row.pid\r\n                    this.depDlg.index = index\r\n                    this.showDepDlg()\r\n                  }\r\n                }\r\n              }, '操作')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      // gridData: [{platform: \"BDP\", system: \"DLA\", job: \"BDP_DLA_TEST\",depPlatform: \"BDP\", depSystem: \"DLA\", depJob: \"BDP_DLA_TEST_STREAM\",des:\"ss\",isEnable: \"1\"}],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      tablePage: {},\r\n      ruleValidate: {\r\n      },\r\n      jobtypeList: { 'D': '日', 'C': '定时', 'W': '周', 'M': '月' },\r\n      orgIsEnabel: '',\r\n      orgDepBatch: null\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.id) {\r\n        if (this.transData.curTab === 'Table') {\r\n          this.tablePage.current = this.transData.currentPage\r\n          this.tablePage.size = this.transData.pageSize\r\n        }\r\n        if (this.transData.tablePage) {\r\n          this.tablePage = this.transData.tablePage\r\n        }\r\n        if (this.transData.prequeryCache) {\r\n          // this.page = this.transData.prequeryCache.page\r\n          this.page.current = this.transData.prequeryCache.currentPage\r\n          this.page.size = this.transData.prequeryCache.pageSize\r\n        }\r\n      }\r\n      this.search()\r\n      // this.queryjobtypeList()\r\n    },\r\n    /**\r\n\t\t * 如果传过来的有初始数据则进行数据绑定\r\n\t\t **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      params.downloadType = 'dep'\r\n      params.job = this.transData.id\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      params.job = this.transData.id\r\n      // if (!this.transData.formBean) {\r\n      //   params.currentPage = 1\r\n      // }\r\n      if (!params.job) {\r\n        params.job = this.$store.getters.getUmdata('dep')\r\n        this.$store.dispatch('resetUmdata', { path: 'dep' })\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/UpjobList',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          resp.data.records.forEach(data1 => {\r\n            if (data1.depIsEnable) {\r\n              data1.isEnable = '1'\r\n            } else {\r\n              data1.isEnable = '0'\r\n            }\r\n          })\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    },\r\n    showDepDlg () {\r\n      this.depDlg.show = true\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      // console.log(\"column,key,order\"+ column.key );\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    /**\r\n         * 平台管理员操作权限特殊处理增加判断\r\n         * 禁用启用依赖，仅当角色为平台管理员、平台是该用户拥有的才可以操作\r\n         *\r\n         **/\r\n    isOwnPlatform (job) {\r\n      let authPlatform = this.$store.getters.getPlatforms\r\n      if (authPlatform.indexOf('ROLE_ADMIN') === -1) {\r\n        if (authPlatform.length > 0) {\r\n          if (authPlatform.includes(job.platform)) {\r\n            return true\r\n          } else {\r\n            // 修改的平台不是所属平台\r\n            this.$Message.error({\r\n              content: '操作权限不足，请联系管理员确认！',\r\n              duration: 15,\r\n              closable: true\r\n            })\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    depOk (row) {\r\n      let params = {}\r\n      // console.log(this.formBean)\r\n      // params.depJob = this.formBean.job\r\n      // params.job = this.transData.jobData.job\r\n      // params.isEnable = this.formBean.isEnable\r\n      // params.depBatch = this.formBean.depBatch\r\n      // params.isChangeEnable = '0'\r\n      // params.authps = this.transData.jobData.platform + this.transData.jobData.system\r\n      params.id = this.formBean.pid\r\n      params.isEnable = this.formBean.isEnable\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      // if (!this.isOwnPlatform({ platform: this.transData.jobData.platform })) {\r\n      //   return\r\n      // }\r\n      if (this.transData.id) {\r\n        if (this.orgIsEnabel !== this.formBean.isEnable) {\r\n          params.isChangeEnable = '1'\r\n        }\r\n        // httpConfig.method = 'PUT'\r\n        // httpConfig.url = '/udsjobdependency/' + this.transData.id\r\n        httpConfig.method = 'POST'\r\n        httpConfig.url = '/udsJobDependency/update'\r\n      } else {\r\n        httpConfig.method = 'POST'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status == 200) {\r\n            // if (resp.data === 1 && params.isChangeEnable === '1') {\r\n            //   this.$Message.error({\r\n            //     content: '是否启用依赖修改失败！',\r\n            //     duration: 8,\r\n            //     closable: true\r\n            //   })\r\n            // }\r\n            // if (resp.data === 2) {\r\n            //   this.$Message.error({\r\n            //     content: '依赖批次号修改失败！',\r\n            //     duration: 8,\r\n            //     closable: true\r\n            //   })\r\n            // }\r\n            // this.gridData[this.depDlg.index].isEnable = this.formBean.isEnable\r\n            this.search()\r\n          }\r\n          // this.cancel();\r\n        })\r\n      // this.$emit('switch', {statusName: \"dep\"});\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n#depTable table td div{\r\n\t/* padding-left: 5px;\r\n\tpadding-right: 0; */\r\n}\r\n#depTable table th div{\r\n\t/* padding-left: 5px;\r\n\tpadding-right: 0; */\r\n}\r\n#confirmDep .ivu-modal-body{\r\n\tpadding: 16px;\r\n  font-size:14px;\r\n  line-height:1.5;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}