{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\tree-select\\tree-select-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\tree-select\\tree-select-tree.vue","mtime":1681468306483},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Emitter from 'iview/src/mixins/emitter.js';\nvar arrayEqual = function arrayEqual(arr1, arr2) {\n  // 判断数组的长度\n  if (arr1.length !== arr2.length) {\n    return false;\n  } else {\n    // 循环遍历数组的值进行比较\n    for (var i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\nexport default {\n  name: 'TreeSelectTree',\n  mixins: [Emitter],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    selectedArray: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loadData: Function\n  },\n  data: function data() {\n    return {\n      flatDic: {},\n      checkedArray: []\n    };\n  },\n  inject: ['parent'],\n  computed: {\n    expandAll: function expandAll() {\n      return this.parent.$attrs['expand-all'];\n    }\n  },\n  watch: {\n    data: function data(newData, oldVal) {\n      var _this = this;\n      this.updateFlagDic(newData);\n      var selectArray = [];\n      this.selectedArray.forEach(function (id) {\n        if (id in _this.flatDic) selectArray.push(id);\n      });\n      this.$emit('on-check', selectArray.map(function (id) {\n        return _this.flatDic[id];\n      }));\n      if (this.expandAll) this.checkData(newData, false, true);\n    },\n    selectedArray: function selectedArray(newVal, oldVal) {\n      var _this2 = this;\n      if (arrayEqual(newVal, oldVal)) return;\n      var filtedNewVal = newVal.filter(function (id) {\n        return id in _this2.flatDic;\n      });\n      this.$emit('on-check', filtedNewVal.map(function (id) {\n        return _this2.flatDic[id];\n      }));\n      this.$emit('on-clear');\n      this.$nextTick(function () {\n        _this2.checkData(_this2.data, true);\n      });\n    }\n  },\n  methods: {\n    checkEmit: function checkEmit(value, label) {\n      this.dispatch('iSelect', 'on-select-selected', {\n        value: value,\n        label: label\n      });\n      this.$emit('on-select-selected', {\n        value: value,\n        label: label\n      });\n    },\n    updateFlagDic: function updateFlagDic(newData) {\n      var newFlagDic = {};\n      this.setFlagDic(newData, function (item) {\n        newFlagDic[item.id] = item;\n      });\n      this.flatDic = newFlagDic;\n    },\n    setFlagDic: function setFlagDic(data, callback) {\n      var _this3 = this;\n      data.forEach(function (item) {\n        if (item.children && item.children.length) {\n          _this3.setFlagDic(item.children, callback);\n        }\n        callback(item);\n      });\n    },\n    handleCheckSelect: function handleCheckSelect(selectArray, selectItem) {\n      this.$emit('on-check', selectArray);\n      this.parent.$emit('on-change', selectArray);\n    },\n    checkData: function checkData(data, emit, expandAll) {\n      var _this4 = this;\n      data.forEach(function (item) {\n        if (_this4.selectedArray.includes(item.id)) {\n          _this4.$set(item, 'checked', true);\n          _this4.checkedArray.push(item);\n          if (emit) _this4.checkEmit(item.id, item.title);\n        } else _this4.$set(item, 'checked', false);\n        if (item.children && item.children.length) {\n          if (_this4.expandAll && expandAll) _this4.$set(item, 'expand', true);\n          _this4.checkData(item.children, emit, expandAll);\n        }\n      });\n    },\n    loadDataCallback: function loadDataCallback(item, callback) {\n      var _this5 = this;\n      this.loadData(item, function (data) {\n        return function () {\n          callback(data);\n          _this5.updateFlagDic(_this5.data);\n        }(data);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n    this.checkData(this.data, false, true);\n    this.$nextTick(function () {\n      _this6.$emit('on-check', _this6.checkedArray);\n    });\n  }\n};",{"version":3,"names":["Emitter","arrayEqual","arr1","arr2","length","i","name","mixins","props","data","type","Array","default","_default","selectedArray","loadData","Function","flatDic","checkedArray","inject","computed","expandAll","parent","$attrs","watch","newData","oldVal","_this","updateFlagDic","selectArray","forEach","id","push","$emit","map","checkData","newVal","_this2","filtedNewVal","filter","$nextTick","methods","checkEmit","value","label","dispatch","newFlagDic","setFlagDic","item","callback","_this3","children","handleCheckSelect","selectItem","emit","_this4","includes","$set","title","loadDataCallback","_this5","mounted","_this6"],"sources":["src/components/tree-select/tree-select-tree.vue"],"sourcesContent":["<template>\r\n  <Tree\r\n    :data=\"data\"\r\n    @on-check-change=\"handleCheckSelect\"\r\n    v-on=\"parent.$listeners\"\r\n    v-bind=\"parent.$attrs\"\r\n    :load-data=\"loadDataCallback\"\r\n    show-checkbox\r\n  ></Tree>\r\n</template>\r\n\r\n<script>\r\nimport Emitter from 'iview/src/mixins/emitter.js'\r\n\r\nconst arrayEqual = (arr1, arr2) => {\r\n  // 判断数组的长度\r\n  if (arr1.length !== arr2.length) {\r\n    return false\r\n  } else {\r\n    // 循环遍历数组的值进行比较\r\n    for (let i = 0; i < arr1.length; i++) {\r\n      if (arr1[i] !== arr2[i]) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'TreeSelectTree',\r\n  mixins: [Emitter],\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    selectedArray: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loadData: Function\r\n  },\r\n  data () {\r\n    return {\r\n      flatDic: {},\r\n      checkedArray: []\r\n    }\r\n  },\r\n  inject: ['parent'],\r\n  computed: {\r\n    expandAll () {\r\n      return this.parent.$attrs['expand-all']\r\n    }\r\n  },\r\n  watch: {\r\n    data (newData, oldVal) {\r\n      this.updateFlagDic(newData)\r\n      let selectArray = []\r\n      this.selectedArray.forEach(id => {\r\n        if (id in this.flatDic) selectArray.push(id)\r\n      })\r\n      this.$emit('on-check', selectArray.map(id => this.flatDic[id]))\r\n      if (this.expandAll) this.checkData(newData, false, true)\r\n    },\r\n    selectedArray (newVal, oldVal) {\r\n      if (arrayEqual(newVal, oldVal)) return\r\n      const filtedNewVal = newVal.filter(id => id in this.flatDic)\r\n      this.$emit('on-check', filtedNewVal.map(id => this.flatDic[id]))\r\n      this.$emit('on-clear')\r\n      this.$nextTick(() => {\r\n        this.checkData(this.data, true)\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    checkEmit (value, label) {\r\n      this.dispatch('iSelect', 'on-select-selected', {\r\n        value,\r\n        label\r\n      })\r\n      this.$emit('on-select-selected', {\r\n        value,\r\n        label\r\n      })\r\n    },\r\n    updateFlagDic (newData) {\r\n      let newFlagDic = {}\r\n      this.setFlagDic(newData, item => {\r\n        newFlagDic[item.id] = item\r\n      })\r\n      this.flatDic = newFlagDic\r\n    },\r\n    setFlagDic (data, callback) {\r\n      data.forEach(item => {\r\n        if (item.children && item.children.length) { this.setFlagDic(item.children, callback) }\r\n        callback(item)\r\n      })\r\n    },\r\n    handleCheckSelect (selectArray, selectItem) {\r\n      this.$emit('on-check', selectArray)\r\n      this.parent.$emit('on-change', selectArray)\r\n    },\r\n    checkData (data, emit, expandAll) {\r\n      data.forEach(item => {\r\n        if (this.selectedArray.includes(item.id)) {\r\n          this.$set(item, 'checked', true)\r\n          this.checkedArray.push(item)\r\n          if (emit) this.checkEmit(item.id, item.title)\r\n        } else this.$set(item, 'checked', false)\r\n        if (item.children && item.children.length) {\r\n          if (this.expandAll && expandAll) this.$set(item, 'expand', true)\r\n          this.checkData(item.children, emit, expandAll)\r\n        }\r\n      })\r\n    },\r\n    loadDataCallback (item, callback) {\r\n      this.loadData(item, data => {\r\n        return (() => {\r\n          callback(data)\r\n          this.updateFlagDic(this.data)\r\n        })(data)\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.checkData(this.data, false, true)\r\n    this.$nextTick(() => {\r\n      this.$emit('on-check', this.checkedArray)\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"}]}