{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Form.vue","mtime":1681468306502},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nvar RESOURCE_PATH = '/alarm/send';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      formBean: {},\n      loading: false,\n      platformData: [],\n      alarmTypeData: [],\n      codeTypeData: [],\n      serverityTypeData: [],\n      jobTypeData: [],\n      noticeObjData: [],\n      model1: [],\n      isEdit: false,\n      noticeTypeData: [{\n        label: '邮件',\n        value: 'email'\n      }],\n      formRule: {\n        alarmId: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        groupName: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        sendStatus: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        sendType: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        sendParams: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        title: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        content: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        filePath: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        expcetion: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        remark: [{\n          required: true,\n          message: '请输入数据！'\n        }]\n      }\n    };\n  },\n  methods: {\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      console.log('11', this.transData.row);\n      if (this.transData.row) {\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\n        this.formBean = Object.assign({}, this.transData.row);\n        // this.isEdit = true\n        // let loadConfig = {\n        //   method: 'GET',\n        //   url: RESOURCE_PATH + '/' + this.transData.id\n        // }\n        // this.$ajax(loadConfig)\n        //   .then(resp => {\n        //     this.formBean = resp.data\n        //     this.model1 = this.formBean.noticeObj.split(',')\n        //   })\n      } else {\n        this.bindData();\n      }\n      // this.queryCodeType()\n      this.queryPlatform();\n      // this.queryNoticeObj()\n      // this.queryJobType()\n      // this.queryServerityType()\n      // this.queryAlarmType()\n    },\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\n    bindData: function bindData() {\n      try {\n        this.formBean = Object.assign({}, this.transData.initFormBean);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n     * 格式化时间\r\n     **/\n    dateFormat: function dateFormat(fmt, date) {\n      var ret;\n      var opt = {\n        'Y+': date.getFullYear().toString(),\n        // 年\n        'm+': (date.getMonth() + 1).toString(),\n        // 月\n        'd+': date.getDate().toString(),\n        // 日\n        'H+': date.getHours().toString(),\n        // 时\n        'M+': date.getMinutes().toString(),\n        // 分\n        'S+': date.getSeconds().toString() // 秒\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\n      };\n\n      for (var k in opt) {\n        ret = new RegExp('(' + k + ')').exec(fmt);\n        if (ret) {\n          fmt = fmt.replace(ret[1], ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, '0'));\n        }\n      }\n      return fmt;\n    },\n    /**\r\n     * 保存表单\r\n     **/\n    save: function save() {\n      var _this = this;\n      this.$refs.alarmUserGroupForm.validate(function (valid) {\n        if (!valid) return;\n        var str = _this.model1;\n        // if(''==this.model1){\n        // this.$Message.error('未填写通知对象');\n        // return;\n        // }\n        _this.formBean.noticeObj = str.join();\n        var params = {};\n        //params.authps = this.formBean.code + '*'\n        _this.formBean.sendTime = _this.dateFormat('YYYY-mm-dd HH:MM:SS', _this.formBean.sendTime);\n        //this.formBean.createTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.createTime)\n        Object.assign(params, _this.formBean);\n        var httpConfig = {\n          url: RESOURCE_PATH,\n          data: params\n        };\n        console.log('httpConfig', httpConfig);\n        if (_this.transData.row) {\n          httpConfig.method = 'POST';\n          httpConfig.url = RESOURCE_PATH + '/update';\n        } else {\n          httpConfig.url = RESOURCE_PATH + '/add';\n          httpConfig.method = 'PUT';\n        }\n        console.log('httpConfig111', httpConfig);\n        _this.loading = true;\n        _this.$ajax(httpConfig).then(function (resp) {\n          _this.cancel();\n        });\n      });\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    queryPlatform: function queryPlatform() {\n      var loadConfig = {\n        method: 'GET',\n        url: '/udsSystem/listQuery'\n        // params: { systems: '*' }\n      };\n\n      this.$ajax(loadConfig).then(function (resp) {\n        // resp.data.forEach(data => {\n        //   let tmp = {}\n        //   tmp.value = data\n        //   tmp.label = data\n        //   this.platformData.push(tmp)\n        // })\n        console.log(resp);\n        // this.platformData = resp.data\n      });\n    },\n    queryAlarmType: function queryAlarmType() {\n      var _this2 = this;\n      this.alarmTypeData = [];\n      var params = {\n        dictcode: 'm_alarm_type'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: 'file/loadList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicName;\n            temp.value = data1.dicValue;\n            temp.label = data1.dicName;\n            _this2.alarmTypeData.push(temp);\n          });\n        }\n      });\n    },\n    queryServerityType: function queryServerityType() {\n      var _this3 = this;\n      this.serverityTypeData = [];\n      var params = {\n        dictcode: 'm_alarm_level'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: 'file/loadList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicName;\n            temp.value = data1.dicValue;\n            temp.label = data1.dicName;\n            _this3.serverityTypeData.push(temp);\n          });\n        }\n      });\n    },\n    queryJobType: function queryJobType() {\n      var _this4 = this;\n      this.jobTypeData = [];\n      var params = {\n        dictcode: 'm_alarm_bus_type'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: 'file/loadList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicName;\n            temp.value = data1.dicValue;\n            temp.label = data1.dicName;\n            _this4.jobTypeData.push(temp);\n          });\n        }\n      });\n    },\n    queryNoticeObj: function queryNoticeObj() {\n      var _this5 = this;\n      this.noticeObjData = [];\n      var params = {\n        dictcode: 'm_alarm_not'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: 'file/loadList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicName;\n            temp.value = data1.dicValue;\n            temp.label = data1.dicName;\n            _this5.noticeObjData.push(temp);\n          });\n        }\n      });\n    },\n    queryCodeType: function queryCodeType() {\n      var _this6 = this;\n      this.codeTypeData = [];\n      var params = {\n        dictcode: 'm_alarm_code'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: 'file/loadList',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicName;\n            temp.value = data1.dicValue;\n            temp.label = data1.dicName;\n            _this6.codeTypeData.push(temp);\n          });\n        }\n      });\n    },\n    /**\r\n     * 返回到数据视图\r\n     **/\n    cancel: function cancel() {\n      var prevTab = '';\n      if (this.transData.tabObj) {\n        prevTab = this.transData.tabObj.prevTab;\n      } else if (this.transData.prevTab) {\n        prevTab = this.transData.prevTab;\n      }\n      var backParam = {\n        id: this.transData.id,\n        statusName: 'emailTable',\n        prevTab: prevTab,\n        curTab: 'emailForm'\n      };\n      var queryCache = {\n        formBean: this.transData.formBean,\n        currentPage: this.transData.currentPage,\n        pageSize: this.transData.pageSize\n      };\n      this.$emit('switch', Object.assign({}, queryCache, backParam));\n    }\n  },\n  /**\r\n   * 视图挂载\r\n   **/\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"names":["RESOURCE_PATH","props","transData","type","Object","default","_default","data","formBean","loading","platformData","alarmTypeData","codeTypeData","serverityTypeData","jobTypeData","noticeObjData","model1","isEdit","noticeTypeData","label","value","formRule","alarmId","required","message","groupName","sendStatus","sendType","sendParams","title","content","filePath","expcetion","remark","methods","init","console","log","row","assign","bindData","queryPlatform","initFormBean","error","dateFormat","fmt","date","ret","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","length","padStart","save","_this","$refs","alarmUserGroupForm","validate","valid","str","noticeObj","join","params","sendTime","httpConfig","url","method","$ajax","then","resp","cancel","filterMethod","option","toUpperCase","indexOf","loadConfig","queryAlarmType","_this2","dictcode","forEach","data1","temp","key","dicName","dicValue","push","queryServerityType","_this3","queryJobType","_this4","queryNoticeObj","_this5","queryCodeType","_this6","prevTab","tabObj","backParam","id","statusName","curTab","queryCache","currentPage","pageSize","$emit","mounted"],"sources":["src/view/app/alarm/alarmsendqueue/Form.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"alarmUserGroupForm\" :model=\"formBean\" :label-width=\"100\" :rules=\"formRule\">\r\n    \r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"alarmId\" label=\"告警码\">\r\n            <Input v-model=\"formBean.alarmId\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"groupName\" label=\"联系组\">\r\n            <Input v-model=\"formBean.groupName\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendStatus\" label=\"发送状态\">\r\n            <Input v-model=\"formBean.sendStatus\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendType\" label=\"发送类型\">\r\n            <Input v-model=\"formBean.sendType\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendParams\" label=\"发送参数\">\r\n            <Input v-model=\"formBean.sendParams\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n \r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"title\" label=\"标题\">\r\n            <Input v-model=\"formBean.title\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"content\" label=\"发送内容\">\r\n            <Input v-model=\"formBean.content\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"filePath\" label=\"附件路径\">\r\n            <Input v-model=\"formBean.filePath\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendTime\" label=\"发送时间\">\r\n         \r\n              <DatePicker v-model=\"formBean.sendTime\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择发送时间\" style=\"width: 200px\"></DatePicker>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"expcetion\" label=\"发送异常\">\r\n            <Input v-model=\"formBean.expcetion\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"remark\" label=\"备注\">\r\n            <Input v-model=\"formBean.remark\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n \r\n    </Form>\r\n\r\n    <div>\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst RESOURCE_PATH = '/alarm/send'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      alarmTypeData: [],\r\n      codeTypeData: [],\r\n      serverityTypeData: [],\r\n      jobTypeData: [],\r\n      noticeObjData: [],\r\n      model1: [],\r\n      isEdit: false,\r\n      noticeTypeData: [{ label: '邮件', value: 'email' }],\r\n\r\n      formRule: {\r\n        alarmId: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        groupName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendParams: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        title: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        content: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        filePath: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n       \r\n        expcetion: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        remark: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      console.log('11',this.transData.row)\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.formBean = Object.assign({}, this.transData.row)\r\n        // this.isEdit = true\r\n        // let loadConfig = {\r\n        //   method: 'GET',\r\n        //   url: RESOURCE_PATH + '/' + this.transData.id\r\n        // }\r\n        // this.$ajax(loadConfig)\r\n        //   .then(resp => {\r\n        //     this.formBean = resp.data\r\n        //     this.model1 = this.formBean.noticeObj.split(',')\r\n        //   })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.queryCodeType()\r\n      this.queryPlatform()\r\n      // this.queryNoticeObj()\r\n      // this.queryJobType()\r\n      // this.queryServerityType()\r\n      // this.queryAlarmType()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 格式化时间\r\n     **/\r\n    dateFormat (fmt, date) {\r\n      let ret\r\n      const opt = {\r\n        'Y+': date.getFullYear().toString(), // 年\r\n        'm+': (date.getMonth() + 1).toString(), // 月\r\n        'd+': date.getDate().toString(), // 日\r\n        'H+': date.getHours().toString(), // 时\r\n        'M+': date.getMinutes().toString(), // 分\r\n        'S+': date.getSeconds().toString() // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n      }\r\n      for (let k in opt) {\r\n        ret = new RegExp('(' + k + ')').exec(fmt)\r\n        if (ret) {\r\n          fmt = fmt.replace(\r\n            ret[1],\r\n            ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, '0')\r\n          )\r\n        }\r\n      }\r\n      return fmt\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmUserGroupForm.validate(valid => {\r\n        if (!valid) return\r\n        let str = this.model1\r\n        // if(''==this.model1){\r\n        // this.$Message.error('未填写通知对象');\r\n        // return;\r\n        // }\r\n        this.formBean.noticeObj = str.join()\r\n        let params = {}\r\n        //params.authps = this.formBean.code + '*'\r\n        this.formBean.sendTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.sendTime)\r\n        //this.formBean.createTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.createTime)\r\n        Object.assign(params, this.formBean)\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n          console.log('httpConfig',httpConfig)\r\n        if (this.transData.row) {\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/update' \r\n        } else {\r\n          httpConfig.url = RESOURCE_PATH + '/add' \r\n          httpConfig.method = 'PUT'\r\n        }\r\n        console.log('httpConfig111',httpConfig)\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n        // params: { systems: '*' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // resp.data.forEach(data => {\r\n          //   let tmp = {}\r\n          //   tmp.value = data\r\n          //   tmp.label = data\r\n          //   this.platformData.push(tmp)\r\n          // })\r\n          console.log(resp)\r\n          // this.platformData = resp.data\r\n        })\r\n    },\r\n    queryAlarmType () {\r\n      this.alarmTypeData = []\r\n      let params = { dictcode: 'm_alarm_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.alarmTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryServerityType () {\r\n      this.serverityTypeData = []\r\n      let params = { dictcode: 'm_alarm_level' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.serverityTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryJobType () {\r\n      this.jobTypeData = []\r\n      let params = { dictcode: 'm_alarm_bus_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.jobTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryNoticeObj () {\r\n      this.noticeObjData = []\r\n      let params = { dictcode: 'm_alarm_not' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.noticeObjData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryCodeType () {\r\n      this.codeTypeData = []\r\n      let params = { dictcode: 'm_alarm_code' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.codeTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n      } else if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n\r\n      let backParam = { id: this.transData.id, statusName: 'emailTable', prevTab: prevTab, curTab: 'emailForm' }\r\n\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"],"mappings":"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"}]}