{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Form.vue","mtime":1681468306509},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/jobattributes';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    var checkCron = function checkCron(rule, value, callback) {\n      if (_this.disJobFrequency) return callback();\n      if (value) {\n        var arr = value.trim().split(' ');\n        if (!arr || arr.length < 6) {\n          callback(new Error('cron表达至少填写到星期（秒 分钟 小时 日 月 星期 年），请添加！'));\n        } else {\n          var parser = require('cron-parser');\n          try {\n            parser.parseExpression(value);\n            callback();\n          } catch (e) {\n            callback(new Error('非cron表达式格式，请检查！' + e.message));\n          }\n        }\n      } else {\n        callback(new Error('请输入数据'));\n      }\n    };\n    var checkMultiBatch = function checkMultiBatch(rule, value, callback) {\n      if (value || value === 0) {\n        if (!_this.formBean.job) {\n          callback(new Error('请先输入作业名'));\n        } else {\n          callback();\n        }\n      } else {\n        callback(new Error('请输入数据'));\n      }\n    };\n    return {\n      initFlag: 0,\n      isShow: true,\n      radioData: 'local',\n      depColumns: [{\n        title: '依赖平台',\n        key: 'depPlatform',\n        align: 'center',\n        minWidth: 80\n      }, {\n        title: '依赖应用',\n        key: 'depSystem',\n        align: 'center',\n        minWidth: 80\n      }, {\n        title: '依赖作业',\n        key: 'depJob',\n        align: 'center',\n        minWidth: 180\n      }, {\n        title: '批次',\n        key: 'depBatch',\n        align: 'center',\n        minWidth: 80\n      }, {\n        title: '操作',\n        fixed: 'right',\n        width: 80,\n        align: 'center',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('Button', {\n            props: {\n              size: 'small',\n              // icon: 'md-close',\n              // shape: 'circle',\n              type: 'primary'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.removeDepJob(index);\n              }\n            }\n          }, '删除')]);\n        }\n      }],\n      disJobFrequency: false,\n      loadingStatus: false,\n      files: [],\n      fileError: '',\n      file: null,\n      depJobDrawer: {\n        show: false,\n        data: {}\n      },\n      depJobList: [],\n      currentIndex: null,\n      jobStepDrawer: {\n        show: false,\n        uploadShow: false,\n        // 上传脚本\n        env: {\n          list: [{\n            environments: 'Password=?;name=?',\n            status: 1\n          }]\n        },\n        envShow: false,\n        parameterShow: false,\n        // 脚本参数\n        parameter: {\n          list: [{\n            parameter: '${platform}',\n            status: 1\n          }, {\n            parameter: '${systems}',\n            status: 1\n          }, {\n            parameter: '${job}',\n            status: 1\n          }, {\n            parameter: '${job_date}',\n            status: 1\n          }, {\n            parameter: '${batch}',\n            status: 1\n          }]\n        },\n        // 脚本参数\n        data: {\n          list: [\n            // {\n            //   parameter: '',\n            //   environments: '',\n            //   index: 1,\n            //   status: 1\n            // }\n          ]\n        }\n      },\n      jobStepList: [],\n      fileType: '',\n      formBean: {},\n      loading: false,\n      platformData: [],\n      systemsData: [],\n      depSystemsData: [],\n      depJobData: [],\n      jobTypeData: [],\n      streamTypeData: [{\n        value: '1',\n        label: '定时触发'\n      }, {\n        value: '2',\n        label: '信号文件触发'\n      }, {\n        value: '3',\n        label: 'HTTP请求触发'\n      }, {\n        value: '4',\n        label: '依赖触发'\n      }],\n      priorityData: [{\n        value: '100',\n        label: 'L1'\n      }, {\n        value: '200',\n        label: 'L2'\n      }, {\n        value: '300',\n        label: 'L3'\n      }, {\n        value: '400',\n        label: 'M1'\n      }, {\n        value: '500',\n        label: 'M2'\n      }, {\n        value: '600',\n        label: 'M3'\n      }, {\n        value: '700',\n        label: 'H1'\n      }, {\n        value: '800',\n        label: 'H2'\n      }, {\n        value: '900',\n        label: 'H3'\n      }],\n      isEdit: false,\n      callAgainMaxNumData: [],\n      stepTypeData: [\n      // 'shell', 'python', 'python3', 'perl', 'http_get', 'http_post', 'java', 'cmd'\n      'SQL', 'JAVA', 'HTTP_POST', 'HTTP_GET', 'HTTP_DELETE', 'HTTP_PUT', 'HTTP_HEAD', 'CMD', 'SHELL', 'PYTHON', 'PYTHON3', 'PERL'],\n      stepTypeList: [{\n        key: 'SQL',\n        imgUrl: 'SQL'\n      }, {\n        key: 'JAVA',\n        imgUrl: 'JAVA'\n      }, {\n        key: 'HTTP_POST',\n        imgUrl: 'POST'\n      }\n      // { key: 'HTTP_GET', imgUrl: 'GET' }\n      // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\n      // { key: 'HTTP_PUT', imgUrl: 'PUT' },\n      // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\n      // { key: 'CMD', imgUrl: 'CMD' },\n      // { key: 'SHELL', imgUrl: 'SHELL' },\n      // { key: 'PYTHON', imgUrl: 'PYTHON2' },\n      // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\n      // { key: 'PERL', imgUrl: 'PERL' }\n      ],\n\n      stepTypeList2: [\n      // { key: 'SQL', imgUrl: 'SQL' },\n      // { key: 'JAVA', imgUrl: 'JAVA' },\n      // { key: 'HTTP_POST', imgUrl: 'POST' },\n      {\n        key: 'HTTP_GET',\n        imgUrl: 'GET'\n      }, {\n        key: 'HTTP_DELETE',\n        imgUrl: 'DELETE'\n      }, {\n        key: 'HTTP_PUT',\n        imgUrl: 'PUT'\n      }\n      // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\n      // { key: 'CMD', imgUrl: 'CMD' }\n      // { key: 'SHELL', imgUrl: 'SHELL' },\n      // { key: 'PYTHON', imgUrl: 'PYTHON2' },\n      // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\n      // { key: 'PERL', imgUrl: 'PERL' }\n      ],\n\n      stepTypeList3: [\n      // { key: 'SQL', imgUrl: 'SQL' },\n      // { key: 'JAVA', imgUrl: 'JAVA' },\n      // { key: 'HTTP_POST', imgUrl: 'POST' },\n      // { key: 'HTTP_GET', imgUrl: 'GET' },\n      // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\n      // { key: 'HTTP_PUT', imgUrl: 'PUT' },\n      {\n        key: 'HTTP_HEAD',\n        imgUrl: 'HEAD'\n      }, {\n        key: 'CMD',\n        imgUrl: 'CMD'\n      }, {\n        key: 'SHELL',\n        imgUrl: 'SHELL'\n      }\n      // { key: 'PYTHON', imgUrl: 'PYTHON2' },\n      // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\n      // { key: 'PERL', imgUrl: 'PERL' }\n      ],\n\n      stepTypeList4: [\n      // { key: 'SQL', imgUrl: 'SQL' },\n      // { key: 'JAVA', imgUrl: 'JAVA' },\n      // { key: 'HTTP_POST', imgUrl: 'POST' },\n      // { key: 'HTTP_GET', imgUrl: 'GET' },\n      // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\n      // { key: 'HTTP_PUT', imgUrl: 'PUT' },\n      // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\n      // { key: 'CMD', imgUrl: 'CMD' },\n      // { key: 'SHELL', imgUrl: 'SHELL' },\n      {\n        key: 'PYTHON',\n        imgUrl: 'PYTHON2'\n      }, {\n        key: 'PYTHON3',\n        imgUrl: 'PYTHON3'\n      }, {\n        key: 'PERL',\n        imgUrl: 'PERL'\n      }],\n      lastStatusData: [\n      // Ready Done Runing Failed Pending Dispatcher\n      {\n        label: 'Ready',\n        value: 'Ready'\n      }, {\n        label: 'Done',\n        value: 'Done'\n      }, {\n        label: 'Runing',\n        value: 'Runing'\n      }, {\n        label: 'Failed',\n        value: 'Failed'\n      }, {\n        label: 'Pending',\n        value: 'Pending'\n      }, {\n        label: 'Dispatcher',\n        value: 'Dispatcher'\n      }],\n      taskStatusData: [\n      // 1->新增；2->变更；3->下线；4->上线完成',\n      {\n        label: '新增',\n        value: 1\n      }, {\n        label: '变更',\n        value: 2\n      }, {\n        label: '下线',\n        value: 3\n      }, {\n        label: '上线完成',\n        value: 4\n      }],\n      depJobRuler: {\n        depPlatform: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        depSystem: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        depJob: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        depBatch: [{\n          required: true,\n          message: '请输入数据！'\n        }]\n      },\n      formRule: {\n        streamType: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        platform: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        systems: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        job: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        // jobName: [{\n        //   required: true,\n        //   message: '请输入数据！'\n        // }],\n        jobType: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        jobDate: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        lastStatus: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        taskStatus: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        multiBatch: [{\n          validator: checkMultiBatch,\n          trigger: 'blur'\n        }],\n        timeWindow: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        virtualEnable: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        priority: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        callAgainMaxNum: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        callAgainWaitSec: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        checkFrequency: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        checkTimeTrigger: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        checkStreamSelf: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        depJob: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        jobStep: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        jobFrequency: [{\n          validator: checkCron,\n          trigger: 'blur'\n        }],\n        offsetDay: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        ignoreError: [{\n          required: true,\n          message: '请输入数据！'\n        }]\n      },\n      jobStepDrawerRecord: {},\n      filePath: '',\n      filePathPre: ''\n    };\n  },\n  methods: {\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      var _this2 = this;\n      if (this.transData.row) {\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\n        this.initFlag = 1;\n        this.isEdit = true;\n        var params = {\n          platform: this.transData.row.platform,\n          systems: this.transData.row.systems,\n          job: this.transData.row.job,\n          version: this.transData.row.version\n        };\n        var loadConfig = {\n          method: 'GET',\n          url: RESOURCE_PATH + '/loadByJobName/',\n          params: params\n        };\n        this.$ajax(loadConfig).then(function (resp) {\n          _this2.formBean = Object.assign({}, resp.data);\n          var timeWindow = _this2.formBean.timeWindow;\n          if (timeWindow) {\n            _this2.formBean.timeWindow = timeWindow.split('-');\n            _this2.formBean.checkFrequency = _this2.formBean.checkFrequency ? 1 : 0;\n            _this2.formBean.checkStreamSelf = _this2.formBean.checkStreamSelf ? 1 : 0;\n            _this2.formBean.checkTimeTrigger = _this2.formBean.checkTimeTrigger ? 1 : 0;\n            _this2.formBean.ignoreError = _this2.formBean.ignoreError ? 1 : 0;\n            _this2.formBean.virtualEnable = _this2.formBean.virtualEnable ? 1 : 0;\n          }\n          if (_this2.formBean.depJob) {\n            var arr = _this2.formBean.depJob.split(',');\n            arr.forEach(function (e) {\n              var tmp = {\n                depPlatform: e.split('@')[0],\n                depSystem: e.split('@')[1],\n                depJob: e.split('@')[2],\n                depBatch: e.split('@')[3]\n              };\n              _this2.depJobList.push(tmp);\n            });\n          }\n          if (_this2.formBean.jobStep) {\n            var _arr = _this2.formBean.jobStep.split(',');\n            _arr.forEach(function (e) {\n              // 4@python3@null@$AUTO_HOME/APP/BDP/ADM/BDP_ADM_DTR_DAILY_RPT/bin/bdp_adm_dtr_daily_rpt0400.py@1 2\n              // stepNum@operCmd@stepType@scriptPath@parameter@environments\n              var tmp = {\n                stepNum: e.split('@')[0],\n                operCmd: e.split('@')[1],\n                stepType: e.split('@')[2],\n                scriptPath: e.split('@')[3],\n                parameter: e.split('@')[4],\n                environments: e.split('@')[5]\n              };\n              _this2.jobStepList.push(tmp);\n            });\n          }\n        });\n      } else {\n        this.bindData();\n      }\n      // this.queryCodeType()\n      // this.queryNoticeObj()\n      this.queryPlatform();\n      this.queryJobType();\n      this.genCallAgainMaxNumData();\n      // this.queryServerityType()\n      // this.queryAlarmType()\n    },\n    queryPlatform: function queryPlatform() {\n      var _this3 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this3.platformData.push(tmp);\n      });\n    },\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\n    bindData: function bindData() {\n      try {\n        this.formBean = Object.assign({}, this.transData.initFormBean);\n        this.$set(this.formBean, 'lastStatus', 'Done');\n        this.$set(this.formBean, 'taskStatus', 1);\n        this.$set(this.formBean, 'callAgainMaxNum', 0);\n        this.$set(this.formBean, 'timeWindow', ['00:00', '23:59']);\n        this.$set(this.formBean, 'offsetDay', 0);\n        this.$set(this.formBean, 'callAgainWaitSec', 120);\n        this.$set(this.formBean, 'streamType', '4');\n        this.$set(this.formBean, 'virtualEnable', 0);\n        this.$set(this.formBean, 'multiBatch', 0);\n        this.$set(this.formBean, 'checkStreamSelf', 0);\n        this.$set(this.formBean, 'ignoreError', 0);\n        this.$set(this.formBean, 'jobDate', new Date());\n        this.$set(this.formBean, 'priority', '500');\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    querySystem: function querySystem() {\n      var _this4 = this;\n      this.systemsData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this4.systemsData.push(tmp);\n        });\n      }\n    },\n    queryDepSystem: function queryDepSystem() {\n      var _this5 = this;\n      this.depSystemsData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.depJobDrawer.data.depPlatform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.depJobDrawer.data.depPlatform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this5.depSystemsData.push(tmp);\n        });\n      }\n    },\n    queryDepJob: function queryDepJob() {\n      var _this6 = this;\n      this.depJobData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.depJobDrawer.data.depPlatform && this.depJobDrawer.data.depSystem) {\n        var params = {};\n        params.platform = this.depJobDrawer.data.depPlatform;\n        params.systems = this.depJobDrawer.data.depSystem;\n        var loadConfig = {\n          method: 'GET',\n          url: '/udsJob/selectJobList',\n          params: params\n        };\n        this.$ajax(loadConfig).then(function (resp) {\n          if (resp.status && resp.status === 200) {\n            resp.data.forEach(function (e) {\n              var tmp = {};\n              tmp.value = e.job;\n              tmp.label = e.job;\n              _this6.depJobData.push(tmp);\n            });\n          }\n        });\n      }\n    },\n    uploadStepShow: function uploadStepShow(item, index) {\n      this.jobStepDrawerRecord = item;\n      var path = this.jobStepDrawerRecord.scriptPath;\n      if (path) {\n        var _index = path.lastIndexOf(':////');\n        this.filePathPre = path.substring(0, _index + 4);\n        this.filePath = path.substring(_index + 4, path.length);\n        if (path.indexOf('local:///') != -1) {\n          this.radioData = 'local';\n        } else if (path.indexOf('nas:///') != -1) {\n          this.radioData = 'nas';\n        } else if (path.indexOf('aws:///') != -1) {\n          this.radioData = 'aws';\n        } else if (path.indexOf('spdb:///') != -1) {\n          this.radioData = 'rpc';\n        }\n      } else {\n        this.filePathPre = 'local:///';\n        this.radioData = 'local';\n      }\n      this.jobStepDrawer.uploadShow = true;\n    },\n    changeStreamType: function changeStreamType() {\n      if (this.formBean.streamType === '2') {\n        this.$set(this.formBean, 'checkStreamSelf', 1);\n      } else {\n        this.$set(this.formBean, 'checkStreamSelf', 0);\n      }\n      // 作业出发类型如果是信号出发，是否启用stream file触发默认为采用，否则为不采用，这个不可选\n      // 检测是否采用时间触发在定时作业时默认为采用，否则为不采用，不可选\n    },\n    changeJobType: function changeJobType() {\n      if (this.formBean.jobType === 'C') {\n        this.$set(this.formBean, 'checkTimeTrigger', 1);\n      } else {\n        this.$set(this.formBean, 'checkTimeTrigger', 0);\n      }\n    },\n    jobStepConfig: function jobStepConfig() {\n      var _this7 = this;\n      if (this.transData.row && this.transData.row.id) {\n        this.depJobDrawer.data.depBatch = 0;\n        this.jobStepDrawer.data.list = [];\n        this.jobStepList.sort(utils.compare('index')).map(function (item) {\n          _this7.jobStepDrawer.data.list.push(Object.assign(item, {\n            status: 1\n          }));\n        });\n      }\n      this.jobStepDrawer.show = true;\n    },\n    handleAdd: function handleAdd(fileType) {\n      if (this.jobStepDrawer.data.list && this.jobStepDrawer.data.list.length > 8) {\n        return this.$Message.warning('当前作业脚本配置数量已达最大值');\n      }\n      this.jobStepDrawer.data.list.push({\n        operCmd: fileType,\n        parameter: '',\n        environments: '',\n        status: 1\n      });\n      this.fileType = fileType;\n    },\n    saveJobStep: function saveJobStep() {\n      var _this8 = this;\n      var list = this.jobStepDrawer.data.list;\n      this.jobStepList = [];\n      if (list && list.length > 0) {\n        list.forEach(function (e, index) {\n          var tmp = {\n            operCmd: e.operCmd,\n            stepNum: index + 1,\n            stepType: e.stepType,\n            environments: e.environments,\n            parameter: e.parameter,\n            scriptPath: e.scriptPath\n          };\n          _this8.jobStepList.push(tmp);\n        });\n      }\n      var tmparr = [];\n      if (this.jobStepList && this.jobStepList.length > 0) {\n        this.jobStepList.forEach(function (e) {\n          // 平台@应用@作业@批次\n          tmparr.push(e.stepNum + '@' + e.operCmd + '@' + e.stepType + '@' + e.scriptPath + '@' + e.parameter + '@' + e.environments);\n        });\n        this.formBean.jobStep = tmparr.join(',');\n      }\n      this.jobStepDrawer.show = false;\n    },\n    handleRemove: function handleRemove(index) {\n      this.jobStepDrawer.data.list[index].status = 0;\n      this.jobStepDrawer.data.list.splice(index, 1);\n    },\n    parameterShow: function parameterShow(item, index) {\n      var _this9 = this;\n      if (item.parameter && item.parameter.length > 0) {\n        this.jobStepDrawer.parameter.list = [];\n        item.parameter.split(' ').forEach(function (e) {\n          var tmp = {\n            parameter: e,\n            status: 1,\n            placeholder: '${参数}'\n          };\n          _this9.jobStepDrawer.parameter.list.push(tmp);\n        });\n      }\n      this.currentIndex = index;\n      this.jobStepDrawer.parameterShow = true;\n    },\n    parameterOk: function parameterOk() {\n      var list = this.jobStepDrawer.parameter.list;\n      var str = '';\n      if (list && list.length > 0) {\n        list.forEach(function (e) {\n          str = str + ' ' + e.parameter;\n        });\n      }\n      this.jobStepDrawer.data.list[this.currentIndex].parameter = str.trim();\n      this.jobStepDrawer.parameterShow = false;\n    },\n    parameterAdd: function parameterAdd() {\n      this.jobStepDrawer.parameter.list.push({\n        placeholder: '${参数}',\n        parameter: '',\n        status: 1\n      });\n    },\n    parameterRemove: function parameterRemove(index) {\n      this.jobStepDrawer.parameter.list[index].status = 0;\n      this.jobStepDrawer.parameter.list.splice(index, 1);\n    },\n    envShow: function envShow(item, index) {\n      var _this10 = this;\n      item.environments = 'Password=?;name=?';\n      if (item.environments) {\n        this.jobStepDrawer.env.list = [];\n        item.environments.split(';').forEach(function (e) {\n          var tmp = {\n            environments: e,\n            status: 1,\n            placeholder: '${参数}'\n          };\n          _this10.jobStepDrawer.env.list.push(tmp);\n        });\n      }\n      this.currentIndex = index;\n      this.jobStepDrawer.envShow = true;\n    },\n    envOk: function envOk() {\n      var list = this.jobStepDrawer.env.list;\n      var str = '';\n      if (list && list.length > 0) {\n        list.forEach(function (e) {\n          str = str + ';' + e.environments;\n        });\n      }\n      this.jobStepDrawer.data.list[this.currentIndex].environments = str.trim().replace(/^;/, '');\n      this.jobStepDrawer.envShow = false;\n    },\n    envAdd: function envAdd() {\n      this.jobStepDrawer.env.list.push({\n        environments: '',\n        placeholder: 'key=value;key=value',\n        status: 1\n      });\n    },\n    envRemove: function envRemove(index) {\n      this.jobStepDrawer.env.list[index].status = 0;\n      this.jobStepDrawer.env.list.splice(index, 1);\n    },\n    depJobConfig: function depJobConfig() {\n      this.$set(this.depJobDrawer.data, 'depBatch', 0);\n      this.depJobDrawer.show = true;\n    },\n    addDepJob: function addDepJob() {\n      var _this11 = this;\n      this.$refs.depJobDrawerForm.validate(function (valid) {\n        if (!valid) return;\n        var tmp = Object.assign({}, _this11.depJobDrawer.data);\n        var params = {\n          platform: tmp.depPlatform,\n          systems: tmp.depSystem,\n          job: tmp.depJob\n        };\n        if (_this11.depJobList && _this11.depJobList.length > 0) {\n          try {\n            _this11.depJobList.forEach(function (e) {\n              if (JSON.stringify(e) === JSON.stringify(tmp)) {\n                _this11.$Message.warning('请勿重复添加！');\n                throw new Error('repeatAddError');\n              }\n            });\n            _this11.jobSearch(params, tmp);\n          } catch (e) {\n            if (e.message !== 'repeatAddError') throw e;\n          }\n        } else {\n          _this11.jobSearch(params, tmp);\n        }\n      });\n    },\n    jobSearch: function jobSearch(params, tmp) {\n      var _this12 = this;\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/jobSearch',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          if (resp.data && resp.data.length > 0) {\n            _this12.depJobList.push(tmp);\n          } else {\n            _this12.$Message.warning('当前作业不存！');\n          }\n        }\n      });\n    },\n    removeDepJob: function removeDepJob(index) {\n      this.depJobList.splice(index, 1);\n    },\n    saveDepJob: function saveDepJob() {\n      // this.depJobList = []\n      var tmparr = [];\n      if (this.depJobList && this.depJobList.length > 0) {\n        this.depJobList.forEach(function (e) {\n          // 平台@应用@作业@批次\n          tmparr.push(e.depPlatform + '@' + e.depSystem + '@' + e.depJob + '@' + e.depBatch);\n        });\n        this.formBean.depJob = tmparr.join(',');\n      }\n      this.depJobDrawer.show = false;\n    },\n    addjobDep: function addjobDep() {},\n    handleUpload: function handleUpload(file) {\n      if (!this.multiple) {\n        if (this.files.length > 0) {\n          this.fileError = \"\\u4E0D\\u80FD\\u9009\\u62E9\\u591A\\u4E2A\\u7684\\u6587\\u4EF6\";\n          return false;\n        }\n      }\n      if (this.files.find(function (e) {\n        return e.name == file.name;\n      })) {\n        this.fileError = \"\".concat(file.name, \"\\u5DF2\\u5B58\\u5728\\u4E0A\\u4F20\\u5217\\u8868\\uFF0C\\u5DF2\\u81EA\\u52A8\\u8FC7\\u6EE4\\u6389\\uFF01\");\n        return false;\n      }\n      this.files.push(file);\n      return false;\n    },\n    importExcel: function importExcel() {\n      var _this13 = this;\n      var formData = new FormData();\n      formData.append('fileType', this.fileType);\n      formData.append('platform', this.formBean.platform);\n      formData.append('systems', this.formBean.systems);\n      formData.append('job', this.formBean.job);\n      formData.append('version', this.transData.row.version);\n      this.jobStepDrawerRecord.scriptPath = this.filePathPre + this.filePath;\n      if (this.files.length == 0 || this.files == null) {\n        this.$Message.warning('请选择导入Excel');\n      } else {\n        var _iterator = _createForOfIteratorHelper(this.files),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var ele = _step.value;\n            formData.append('file', ele);\n          }\n          // formData.authps = systems\n          // String fileType, String platform, String systems, String job\n          // return\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.loadingStatus = true;\n        this.$ajax.post('/jobattributes/upload', formData).then(function (resp) {\n          _this13.loadingStatus = false;\n          _this13.files = [];\n          _this13.jobStepDrawer.uploadShow = false;\n        });\n      }\n      // })\n    },\n    /**\r\n     * 保存表单\r\n     **/\n    save: function save() {\n      var _this14 = this;\n      this.$refs.alarmConfigForm.validate(function (valid) {\n        if (!valid) return;\n        var params = {};\n        var tmpObj = Object.assign(_this14.formBean);\n        if (tmpObj.timeWindow) {\n          tmpObj.timeWindow = tmpObj.timeWindow.join('-');\n        }\n        if (tmpObj.jobDate) {\n          tmpObj.jobDate = utils.fmtDate(_this14.formBean.jobDate, 'yyyy-MM-dd');\n        }\n        debugger;\n        params.dyJobAttributes = JSON.stringify(tmpObj);\n        params.jobStepList = JSON.stringify(_this14.jobStepList);\n        params.depJobList = JSON.stringify(_this14.depJobList);\n        // let dyJobAttributes = {\n        //   callAgainMaxNum: 3,\n        //   callAgainWaitSec: 2,\n        //   checkFrequency: 0,\n        //   checkStreamSelf: 1,\n        //   checkTimeTrigger: 1,\n        //   ignoreError: 1,\n        //   job: 'BDP_ADM_DTR_DAILY_RPT',\n        //   jobDate: '2022-04-28',\n        //   jobFrequency: '1',\n        //   jobName: 'test',\n        //   jobType: 'D',\n        //   offsetDay: 1,\n        //   platform: 'BDP',\n        //   priority: '1',\n        //   sysytems: 'ADM',\n        //   stakStatus: 1,\n        //   timeWindow: '00:00-23:59',\n        //   virtualEnable: 1\n\n        // }\n        // let depJobList = [\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 2 },\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 1 }\n        // ]\n        // let jobStepList = [\n        //   {\n        //     environments: 'Password=?;name=?',\n        //     parameter: ' ${platform} ${systems} ${job} ${job_date} ${batch}',\n        //     stepNum: '1',\n        //     stepType: 'shell'\n        //   }\n        // ]\n        // params.dyJobAttributes = JSON.stringify(dyJobAttributes)\n        // params.jobStepList = JSON.stringify(jobStepList)\n        // params.depJobList = JSON.stringify(depJobList)\n        var httpConfig = {\n          url: RESOURCE_PATH,\n          data: params\n        };\n        httpConfig.contentType = 'json';\n        if (_this14.transData.row.id) {\n          httpConfig.method = 'PUT';\n          httpConfig.data.id = tmpObj.id;\n          httpConfig.url = RESOURCE_PATH + '/update';\n        } else {\n          httpConfig.method = 'POST';\n          httpConfig.url = RESOURCE_PATH + '/add';\n        }\n        // return\n        _this14.loading = true;\n        _this14.$ajax(httpConfig).then(function (resp) {\n          _this14.cancel();\n        });\n      });\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    genCallAgainMaxNumData: function genCallAgainMaxNumData() {\n      this.callAgainMaxNumData = [];\n      for (var i = 0; i < 11; i++) {\n        var tmp = {\n          label: i,\n          value: i\n        };\n        this.callAgainMaxNumData.push(tmp);\n      }\n    },\n    queryJobType: function queryJobType() {\n      this.jobTypeData = [{\n        value: 'D',\n        label: '每天执行'\n      }, {\n        value: 'W',\n        label: '每周执行'\n      }, {\n        value: 'M',\n        label: '每月执行'\n      }, {\n        value: 'C',\n        label: '定时执行'\n      }];\n    },\n    /**\r\n     * 返回到数据视图\r\n     **/\n    cancel: function cancel() {\n      if (!this.transData.id) {\n        this.$router.push({\n          path: '/workflow/workflowmanage'\n        });\n      } else {\n        var queryCache = {\n          formBean: this.transData.formBean,\n          currentPage: this.transData.currentPage,\n          pageSize: this.transData.pageSize\n        };\n        this.$emit('switch', Object.assign({}, queryCache));\n      }\n    },\n    checkRadio: function checkRadio() {\n      this.isShow = true;\n      if (this.radioData === 'local') {\n        this.filePathPre = 'local:///';\n      } else if (this.radioData === 'nas') {\n        this.filePathPre = 'nas:///';\n      } else if (this.radioData === 'aws') {\n        this.filePathPre = 'aws:///';\n      } else if (this.radioData === 'rpc') {\n        this.filePathPre = 'spdb:///';\n      } else if (this.radioData === 'scp') {\n        this.filePathPre = 'scp:///';\n      }\n    }\n  },\n  /**\r\n   * 视图挂载\r\n   **/\n  mounted: function mounted() {\n    this.init();\n  },\n  watch: {\n    'formBean.jobType': function formBeanJobType(e) {\n      this.disJobFrequency = false;\n      if (this.formBean.jobType === 'D') {\n        this.disJobFrequency = true;\n      }\n    }\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","checkCron","rule","value","callback","disJobFrequency","arr","trim","split","length","Error","parser","require","parseExpression","e","message","checkMultiBatch","formBean","job","initFlag","isShow","radioData","depColumns","title","key","align","minWidth","fixed","width","render","h","_ref","column","index","row","size","style","marginRight","on","click","removeDepJob","loadingStatus","files","fileError","file","depJobDrawer","show","depJobList","currentIndex","jobStepDrawer","uploadShow","env","list","environments","status","envShow","parameterShow","parameter","jobStepList","fileType","loading","platformData","systemsData","depSystemsData","depJobData","jobTypeData","streamTypeData","label","priorityData","isEdit","callAgainMaxNumData","stepTypeData","stepTypeList","imgUrl","stepTypeList2","stepTypeList3","stepTypeList4","lastStatusData","taskStatusData","depJobRuler","depPlatform","required","depSystem","depJob","depBatch","formRule","streamType","platform","systems","jobType","jobDate","lastStatus","taskStatus","multiBatch","validator","trigger","timeWindow","virtualEnable","priority","callAgainMaxNum","callAgainWaitSec","checkFrequency","checkTimeTrigger","checkStreamSelf","jobStep","jobFrequency","offsetDay","ignoreError","jobStepDrawerRecord","filePath","filePathPre","methods","init","_this2","params","version","loadConfig","method","url","$ajax","then","resp","assign","forEach","tmp","push","stepNum","operCmd","stepType","scriptPath","bindData","queryPlatform","queryJobType","genCallAgainMaxNumData","_this3","platformList","$store","getters","getUserPlatform","initFormBean","$set","Date","error","console","querySystem","_this4","$refs","refsystem","setQuery","userSystemList","getUserSystem","userSystem","queryDepSystem","_this5","queryDepJob","_this6","uploadStepShow","item","path","lastIndexOf","substring","indexOf","changeStreamType","changeJobType","jobStepConfig","_this7","id","sort","compare","map","handleAdd","$Message","warning","saveJobStep","_this8","tmparr","join","handleRemove","splice","_this9","placeholder","parameterOk","str","parameterAdd","parameterRemove","_this10","envOk","replace","envAdd","envRemove","depJobConfig","addDepJob","_this11","depJobDrawerForm","validate","valid","JSON","stringify","jobSearch","_this12","httpConfig","saveDepJob","addjobDep","handleUpload","multiple","find","name","concat","importExcel","_this13","formData","FormData","append","_iterator","_createForOfIteratorHelper","_step","s","n","done","ele","err","f","post","save","_this14","alarmConfigForm","tmpObj","fmtDate","dyJobAttributes","contentType","cancel","filterMethod","option","toUpperCase","i","$router","queryCache","currentPage","pageSize","$emit","checkRadio","mounted","watch","formBeanJobType"],"sources":["src/view/app/workflow/workflowmanage/Form.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"alarmConfigForm\" :model=\"formBean\" class=\"work-flow\" :label-width=\"210\" :rules=\"formRule\">\r\n      <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n        <Col span=\"20\">\r\n          <Row>\r\n            <p>名称属性定义</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"platform\" label=\"平台名\">\r\n                    <Select :disabled=\"isEdit\" filterable v-model=\"formBean.platform\" clearable  @on-change=\"querySystem\">\r\n                      <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"systems\" label=\"应用名\">\r\n                    <Select ref=\"refsystem\" :disabled=\"isEdit\" v-model=\"formBean.systems\" filterable clearable>\r\n                      <Option v-for=\"item in systemsData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"job\" label=\"作业名\">\r\n                    <Input :disabled=\"isEdit\" v-model=\"formBean.job\"/>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col  span=\"1\">\r\n                  <Poptip trigger=\"hover\" title=\"作业命名规则\" style=\"margin-top:5px\" >\r\n                    <Icon type=\"md-help-circle\" style=\"font-size:22px;margin-left:10px;cursor:pointer\"></Icon>\r\n                    <div slot=\"content\">\r\n                      平台名_系统名_表名_【作业类型：D/W/M/C，分别表示日作业/周作业/月作业/定时作业】\r\n                    </div>\r\n                  </Poptip>\r\n                </Col>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobName\" label=\"作业名中文\">\r\n                    <Input v-model=\"formBean.jobName\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务执行频度设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobType\" label=\"作业类型\">\r\n                    <Select v-model=\"formBean.jobType\" @on-change=\"changeJobType\" filterable clearable>\r\n                      <Option v-for=\"item in jobTypeData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"jobFrequency\" label=\"作业频度\" >\r\n                    <Input v-model=\"formBean.jobFrequency\" :disabled=\"disJobFrequency\"></Input>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col  span=\"1\">\r\n                  <Poptip trigger=\"hover\" title=\"Corn表达式\" style=\"margin-top:5px\" >\r\n                    <Icon type=\"md-help-circle\" style=\"font-size:22px;margin-left:10px;cursor:pointer\"></Icon>\r\n                    <div slot=\"content\">\r\n                       <img src=\"@/assets/images/corn.png\" width=\"880\"/>\r\n                    </div>\r\n                  </Poptip>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"offsetDay\" label=\"偏移天数\" >\r\n                    <InputNumber style=\"width: 100%\" :step=\"1\" :editable=\"false\" v-model=\"formBean.offsetDay\"></InputNumber>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"timeWindow\" label=\"窗口执行时间\">\r\n                    <TimePicker format=\"HH:mm\" type=\"timerange\" v-model=\"formBean.timeWindow\"></TimePicker>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"multiBatch\" label=\"批次号\">\r\n                    <Input v-model=\"formBean.multiBatch\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务触发设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"streamType\" label=\"作业触发类型\">\r\n                    <!-- <Input :disabled=\"isEdit\" v-model=\"formBean.streamType\"/> -->\r\n                    <Select :disabled=\"isEdit\" v-model=\"formBean.streamType\" @on-change=\"changeStreamType\" filterable clearable>\r\n                      <Option v-for=\"item in streamTypeData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"checkStreamSelf\" label=\"是否启用stream file\">\r\n                    <Select v-model=\"formBean.checkStreamSelf\" disabled filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不采用</Option>\r\n                      <Option :value=\"1\" :key=\"1\">采用</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"checkTimeTrigger\" label=\"检测是否采用时间触发\">\r\n                    <Select v-model=\"formBean.checkTimeTrigger\" disabled filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不检测</Option>\r\n                      <Option :value=\"1\" :key=\"1\">检测</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"checkFrequency\" label=\"是否检测时间\">\r\n                    <Select v-model=\"formBean.checkFrequency\" filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不检测</Option>\r\n                      <Option :value=\"1\" :key=\"1\">检测</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>异常重调设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"callAgainMaxNum\" label=\"自动重调最大次数\">\r\n                    <Select v-model=\"formBean.callAgainMaxNum\" filterable clearable>\r\n                      <Option v-for=\"item in callAgainMaxNumData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"callAgainWaitSec\" label=\"自动重调等待时间(秒)\">\r\n                    <InputNumber style=\"width: 100%\" :min=\"1\" :max=\"2592000\" :step=\"1\" v-model=\"formBean.callAgainWaitSec\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"ignoreError\" label=\"是否忽视错误现场\" >\r\n                    <Select v-model=\"formBean.ignoreError\" filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不忽视</Option>\r\n                      <Option :value=\"1\" :key=\"1\">忽视</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务状态属性</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"lastStatus\" label=\"作业运行状态\">\r\n                    <Select filterable v-model=\"formBean.lastStatus\" disabled clearable>\r\n                      <Option v-for=\"item in lastStatusData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"taskStatus\" label=\"任务状态\">\r\n                    <Select filterable v-model=\"formBean.taskStatus\" disabled clearable>\r\n                      <Option v-for=\"item in taskStatusData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobDate\" label=\"批量日期\">\r\n                    <DatePicker :transfer=\"true\" type=\"date\" parse=\"yyyy-MM-dd\" format=\"yyyy-MM-dd\" v-model=\"formBean.jobDate\"></DatePicker>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"virtualEnable\" label=\"作业是否置虚\">\r\n                    <Select v-model=\"formBean.virtualEnable\" filterable clearable>\r\n                      <Option :value=\"1\" :key=\"1\">虚作业</Option>\r\n                      <Option :value=\"0\" :key=\"0\">非虚作业</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"priority\" label=\"作业执行优先级\">\r\n                    <Select filterable v-model=\"formBean.priority\" clearable>\r\n                      <Option v-for=\"item in priorityData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"des\" label=\"描述\" >\r\n                    <Input v-model=\"formBean.des\"></Input>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务依赖配置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <Button type=\"primary\" @click=\"depJobConfig\">依赖配置</Button>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务脚本配置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <Button type=\"primary\" @click=\"jobStepConfig\">脚本配置</Button>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <div style=\"text-align:center\">\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n\r\n    <Modal\r\n      title=\"依赖配置\"\r\n      v-model=\"depJobDrawer.show\"\r\n      width=\"720\"\r\n      :mask-closable=\"false\"\r\n      fullscreen\r\n      style=\"z-index: 999;!important\"\r\n      >\r\n      <Form ref=\"depJobDrawerForm\" :model=\"depJobDrawer.data\" :label-width=\"100\" :rules=\"depJobRuler\">\r\n        <Row :gutter=\"32\">\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depPlatform\" label=\"依赖平台\" label-position=\"top\">\r\n                    <!-- <Input v-model=\"depJobDrawer.data.depPlatform\"/> -->\r\n                    <Select filterable v-model=\"depJobDrawer.data.depPlatform\" clearable  @on-change=\"queryDepSystem\">\r\n                      <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n            </Col>\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depSystem\" label=\"依赖应用\" label-position=\"top\">\r\n                    <!-- <Input v-model=\"depJobDrawer.data.depSystem\">\r\n                    </Input> -->\r\n                    <Select ref=\"refsystem\" v-model=\"depJobDrawer.data.depSystem\" @on-change=\"queryDepJob\" filterable clearable>\r\n                      <Option v-for=\"item in depSystemsData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n            </Col>\r\n        </Row>\r\n        <Row :gutter=\"32\">\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depJob\" label=\"依赖作业\" label-position=\"top\">\r\n                  <!-- <Input v-model=\"depJobDrawer.data.depJob\"> -->\r\n                  <Select ref=\"refjob\" v-model=\"depJobDrawer.data.depJob\" filterable clearable>\r\n                      <Option v-for=\"item in depJobData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                  </Select>\r\n                    <!-- </Input> -->\r\n                </FormItem>\r\n            </Col>\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depBatch\" label=\"批次\" label-position=\"top\">\r\n                  <!-- <Input v-model=\"depJobDrawer.data.depBatch\"></Input> -->\r\n                    <InputNumber style=\"width: 100%\" :step=\"1\" :min=\"0\" v-model=\"depJobDrawer.data.depBatch\"></InputNumber>\r\n                </FormItem>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col :offset=\"11\" span=\"2\">\r\n              <Button type=\"primary\" icon=\"md-add\" @click=\"addDepJob\">添加</Button>\r\n            </Col>\r\n        </Row>\r\n        <Row style=\"margin-top:6%\" :gutter=\"32\">\r\n            <Col span=\"24\">\r\n              <Table :columns=\"depColumns\" :data=\"depJobList\" stripe></Table>\r\n            </Col>\r\n        </Row>\r\n      </Form>\r\n      <div slot=\"footer\" class=\"drawer-footer\">\r\n        <Button style=\"margin-right: 8px\" @click=\"depJobDrawer.show = false\">取消</Button>\r\n        <Button type=\"primary\" @click=\"saveDepJob\">保存</Button>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal\r\n      title=\"脚本配置\"\r\n      v-model=\"jobStepDrawer.show\"\r\n      width=\"80%\"\r\n      fullscreen\r\n      :mask-closable=\"false\"\r\n      >\r\n      <Row>\r\n        <Col style=\"background:#eee;padding:20px\" span=\"6\">\r\n          <Card style=\"background-color:#eeeee\" shadow>\r\n            <p slot=\"title\">\r\n              <Icon type=\"ios-bookmark\"></Icon>\r\n              <span  style=\"font-size:16px\">脚本类型 </span>\r\n            </p>\r\n            <!-- <Row style=\"background:#d9dee9;padding:5px\">\r\n              <Col>\r\n                <span class=\"jobsetp-title\">脚本模块</span>\r\n              </Col>\r\n            </Row> -->\r\n            <!-- <Row>\r\n            </Row> -->\r\n            <!-- <Col> -->\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList2\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList3\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList4\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n            <!-- </Col> -->\r\n          </Card>\r\n        </Col>\r\n        <Col style=\"background:#eee;padding:20px\" span=\"18\">\r\n          <Card  shadow>\r\n            <Row style=\"background:#d9dee9;padding:5px\">\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">序号</span>\r\n              </Col>\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">类型</span>\r\n              </Col>\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">脚本上传</span>\r\n              </Col>\r\n              <Col span=\"4\" :offset=\"2\">\r\n                <span class=\"jobsetp-title\">脚本参数</span>\r\n              </Col>\r\n              <Col span=\"5\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">环境参数</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n               <Form ref=\"jobStepDrawerForm\" :model=\"jobStepDrawer.data\" :label-width=\"100\" style=\"margin-top:2%\">\r\n                <FormItem\r\n                  v-for=\"(item,index) in jobStepDrawer.data.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"'序号'+(index+1)\"\r\n                  :prop=\"'list.'+index+'.value'\"\r\n                  >\r\n                  <Row>\r\n                    <Col span=\"3\" :offset=\"1\">\r\n                      <span>{{item.operCmd}}</span>\r\n                    </Col>\r\n                    <Col span=\"2\" :offset=\"1\">\r\n                      <Button icon=\"ios-cloud-upload-outline\" @click=\"uploadStepShow(item,index)\">上传</Button>\r\n                    </Col>\r\n                    <Col span=\"5\" :offset=\"1\">\r\n                      <Input v-model=\"item.parameter\" readonly @click.native=\"parameterShow(item,index)\">\r\n                      </Input>\r\n                    </Col>\r\n                    <Col span=\"5\" :offset=\"1\">\r\n                      <Input v-model=\"item.environments\" readonly @click.native=\"envShow(item,index)\">\r\n                      </Input>\r\n                    </Col>\r\n                    <Col span=\"2\" :offset=\"1\">\r\n                      <Button @click=\"handleRemove(index)\">删除</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider/>\r\n                </FormItem>\r\n              </Form>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <!-- <Row style=\"background:#d9dee9;padding:5px\"> -->\r\n        <!-- <Col span=\"4\">\r\n          <span class=\"jobsetp-title\">脚本模块</span>\r\n        </Col> -->\r\n        <!-- <Col span=\"20\">\r\n      序号 脚本 脚本参数 环境参数\r\n        </Col> -->\r\n        <!-- <Col span=\"1\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">序号</span>\r\n        </Col>\r\n        <Col span=\"2\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">类型</span>\r\n        </Col>\r\n        <Col span=\"2\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">脚本上传</span>\r\n        </Col>\r\n        <Col span=\"4\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">脚本参数</span>\r\n        </Col>\r\n        <Col span=\"5\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">环境参数</span>\r\n        </Col>\r\n      </Row>\r\n      <Row> -->\r\n        <!-- <Col span=\"4\">\r\n          <div v-for=\"item in stepTypeList\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n          <div v-for=\"item in stepTypeList2\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n          <div v-for=\"item in stepTypeList3\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n        </Col> -->\r\n        <!-- <Col span=\"20\"> -->\r\n          <!-- 脚本执行顺序 执行命令 脚本类型 脚本执行路径 脚本执行所需参数\r\n          stepNum operCmd stepType scriptPath parameter environments-->\r\n          <!-- :rules=\"{required: true,message:'数据不能为空',trigger: 'blur'}\" -->\r\n          <!-- <Form ref=\"jobStepDrawerForm\" :model=\"jobStepDrawer.data\" :label-width=\"100\" style=\"margin-top:2%\">\r\n            <FormItem\r\n              v-for=\"(item,index) in jobStepDrawer.data.list\"\r\n              v-if=\"item.status\"\r\n              :key=\"index\"\r\n              :label=\"'序号'+(index+1)\"\r\n              :prop=\"'list.'+index+'.value'\"\r\n              >\r\n              <Row>\r\n                <Col span=\"3\" :offset=\"1\">\r\n                  <span>{{item.operCmd}}</span>\r\n                </Col>\r\n                <Col span=\"2\" :offset=\"1\">\r\n                  <Button icon=\"ios-cloud-upload-outline\" @click=\"uploadStepShow(item,index)\">上传</Button>\r\n                </Col>\r\n                <Col span=\"5\" :offset=\"1\">\r\n                  <Input v-model=\"item.parameter\" readonly @click.native=\"parameterShow(item,index)\">\r\n                  </Input>\r\n                </Col>\r\n                <Col span=\"5\" :offset=\"1\">\r\n                  <Input v-model=\"item.environments\" readonly @click.native=\"envShow(item,index)\">\r\n                  </Input>\r\n                </Col>\r\n                <Col span=\"2\" :offset=\"1\">\r\n                  <Button @click=\"handleRemove(index)\">删除</Button>\r\n                </Col>\r\n              </Row>\r\n              <Divider/>\r\n            </FormItem>\r\n          </Form> -->\r\n        <!-- </Col>\r\n      </Row> -->\r\n      <div slot=\"footer\" class=\"drawer-footer\">\r\n        <Button style=\"margin-right: 8px\" @click=\"jobStepDrawer.show = false\">取消</Button>\r\n        <Button type=\"primary\" @click=\"saveJobStep\">保存</Button>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"uploadOp\" v-model=\"jobStepDrawer.uploadShow\" title=\"脚本上传\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Form ref=\"importOpForm\" :label-width=\"100\" >\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"请选择协议:\" >\r\n                    <RadioGroup v-model='radioData' @on-change=\"checkRadio\">\r\n                      <Radio label='local'>本地存储</Radio>\r\n                      <Radio label='nas'>本地共享存储</Radio>\r\n                      <Radio label='aws'>对象存储</Radio>\r\n                      <Radio label='rpc'>rpc</Radio>\r\n                    </RadioGroup>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"脚本部署路径:\" style=\"cursor:pointer;\" >\r\n                  <Input style=\"width:400px;\" v-model='filePath' >\r\n                    <span slot=\"prepend\">{{filePathPre}}</span>\r\n                  </Input>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"导入文件名:\" style=\"cursor:pointer;\" >\r\n                  <Upload v-if=\"isShow\" ref=\"importexcel\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n                    <Input style=\"width:400px;\" type=\"textarea\" :format=\"['xlsx','xls']\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n                  </Upload>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <div class=\"spdb-toolbar\">\r\n                  <Button icon=\"md-add\" type=\"primary\" @click=\"importExcel\" :loading=\"loadingStatus\" :disabled=\"loadingStatus\" >{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button>\r\n                  <Button icon=\"md-close\" type=\"primary\" @click=\"jobStepDrawer.uploadShow=false\" > 取消 </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <!-- <Row>\r\n              <FormItem >\r\n                <div><font style='color: red;'>注：填写脚本部署路径时，请勿删除协议名！例如：local:///</font></div>\r\n              </FormItem>\r\n            </Row> -->\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\r\n    <Drawer\r\n      title=\"脚本参数配置\"\r\n      v-model=\"jobStepDrawer.parameterShow\"\r\n      width=\"40%\"\r\n      :closable=\"false\"\r\n      class=\"drawer-calss\"\r\n      >\r\n        <Form ref=\"formDynamic\" :model=\"jobStepDrawer.parameter\" :label-width=\"80\" style=\"width: 300px\">\r\n          <!-- :rules=\"{required: true, message: '参数数据不要为空', trigger: 'blur'}\"> -->\r\n          <FormItem\r\n                  v-for=\"(item, index) in jobStepDrawer.parameter.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"index+1+''\"\r\n                  :prop=\"'list.' + index + '.parameter'\"\r\n                  >\r\n              <Row>\r\n                  <Col span=\"18\">\r\n                      <Input type=\"text\" v-model=\"item.parameter\" :placeholder=\"item.placeholder\"></Input>\r\n                  </Col>\r\n                  <Col span=\"4\" offset=\"1\">\r\n                      <Button @click=\"parameterRemove(index)\">删除</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Row>\r\n                  <Col span=\"12\">\r\n                      <Button type=\"dashed\" long @click=\"parameterAdd\" icon=\"md-add\">添加</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Button type=\"primary\" @click=\"parameterOk\">确定</Button>\r\n              <Button @click=\"jobStepDrawer.parameterShow = false\" style=\"margin-left: 8px\">取消</Button>\r\n          </FormItem>\r\n      </Form>\r\n    </Drawer>\r\n\r\n    <Drawer\r\n      title=\"环境参数配置\"\r\n      v-model=\"jobStepDrawer.envShow\"\r\n      width=\"40%\"\r\n      :closable=\"false\"\r\n      class=\"drawer-calss\"\r\n      >\r\n        <Form ref=\"formDynamic\" :model=\"jobStepDrawer.env\" :label-width=\"80\" style=\"width: 300px\">\r\n          <FormItem\r\n                  v-for=\"(item, index) in jobStepDrawer.env.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"index+1+''\"\r\n                  :prop=\"'list.' + index + '.environments'\"\r\n                  :rules=\"{required: true, message: '参数数据不要为空', trigger: 'blur'}\">\r\n              <Row>\r\n                  <Col span=\"20\">\r\n                      <Input type=\"text\" v-model=\"item.environments\" :placeholder=\"item.placeholder\"></Input>\r\n                  </Col>\r\n                  <Col span=\"2\" offset=\"1\">\r\n                      <Button @click=\"envRemove(index)\">删除</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Row>\r\n                  <Col span=\"12\">\r\n                      <Button type=\"dashed\" long @click=\"envAdd\" icon=\"md-add\">添加</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Button type=\"primary\" @click=\"envOk\">确定</Button>\r\n              <Button @click=\"jobStepDrawer.envShow = false\" style=\"margin-left: 8px\">取消</Button>\r\n          </FormItem>\r\n      </Form>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/jobattributes'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    const checkCron = (rule, value, callback) => {\r\n      if (this.disJobFrequency) return callback()\r\n      if (value) {\r\n        let arr = value.trim().split(' ')\r\n        if (!arr || arr.length < 6) {\r\n          callback(new Error('cron表达至少填写到星期（秒 分钟 小时 日 月 星期 年），请添加！'))\r\n        } else {\r\n          let parser = require('cron-parser')\r\n          try {\r\n            parser.parseExpression(value)\r\n            callback()\r\n          } catch (e) {\r\n            callback(new Error('非cron表达式格式，请检查！' + e.message))\r\n          }\r\n        }\r\n      } else {\r\n        callback(new Error('请输入数据'))\r\n      }\r\n    }\r\n    const checkMultiBatch = (rule, value, callback) => {\r\n      if (value || value === 0) {\r\n        if (!this.formBean.job) {\r\n          callback(new Error('请先输入作业名'))\r\n        } else {\r\n          callback()\r\n        }\r\n      } else {\r\n        callback(new Error('请输入数据'))\r\n      }\r\n    }\r\n    return {\r\n      initFlag: 0,\r\n      isShow: true,\r\n      radioData: 'local',\r\n      depColumns: [\r\n        {\r\n          title: '依赖平台',\r\n          key: 'depPlatform',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '依赖应用',\r\n          key: 'depSystem',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '依赖作业',\r\n          key: 'depJob',\r\n          align: 'center',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '批次',\r\n          key: 'depBatch',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '操作',\r\n          fixed: 'right',\r\n          width: 80,\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  // icon: 'md-close',\r\n                  // shape: 'circle',\r\n                  type: 'primary'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.removeDepJob(index)\r\n                  }\r\n                }\r\n              }, '删除')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      disJobFrequency: false,\r\n      loadingStatus: false,\r\n      files: [],\r\n      fileError: '',\r\n      file: null,\r\n      depJobDrawer: {\r\n        show: false,\r\n        data: {}\r\n      },\r\n      depJobList: [],\r\n      currentIndex: null,\r\n      jobStepDrawer: {\r\n        show: false,\r\n        uploadShow: false, // 上传脚本\r\n        env: {\r\n          list: [\r\n            {\r\n              environments: 'Password=?;name=?',\r\n              status: 1\r\n            }\r\n          ]\r\n        },\r\n        envShow: false,\r\n        parameterShow: false, // 脚本参数\r\n        parameter: {\r\n          list: [\r\n            {\r\n              parameter: '${platform}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${systems}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${job}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${job_date}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${batch}',\r\n              status: 1\r\n            }\r\n          ]\r\n        }, // 脚本参数\r\n        data: {\r\n          list: [\r\n            // {\r\n            //   parameter: '',\r\n            //   environments: '',\r\n            //   index: 1,\r\n            //   status: 1\r\n            // }\r\n          ]\r\n        }\r\n      },\r\n      jobStepList: [],\r\n      fileType: '',\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      systemsData: [],\r\n      depSystemsData: [],\r\n      depJobData: [],\r\n      jobTypeData: [],\r\n      streamTypeData: [\r\n        { value: '1', label: '定时触发' },\r\n        { value: '2', label: '信号文件触发' },\r\n        { value: '3', label: 'HTTP请求触发' },\r\n        { value: '4', label: '依赖触发' }\r\n      ],\r\n      priorityData: [\r\n        { value: '100', label: 'L1' },\r\n        { value: '200', label: 'L2' },\r\n        { value: '300', label: 'L3' },\r\n        { value: '400', label: 'M1' },\r\n        { value: '500', label: 'M2' },\r\n        { value: '600', label: 'M3' },\r\n        { value: '700', label: 'H1' },\r\n\t\t    { value: '800', label: 'H2' },\r\n        { value: '900', label: 'H3' }\r\n      ],\r\n      isEdit: false,\r\n      callAgainMaxNumData: [],\r\n      stepTypeData: [\r\n        // 'shell', 'python', 'python3', 'perl', 'http_get', 'http_post', 'java', 'cmd'\r\n        'SQL', 'JAVA', 'HTTP_POST', 'HTTP_GET', 'HTTP_DELETE', 'HTTP_PUT', 'HTTP_HEAD', 'CMD', 'SHELL',\r\n        'PYTHON', 'PYTHON3', 'PERL'\r\n      ],\r\n      stepTypeList: [\r\n        { key: 'SQL', imgUrl: 'SQL' },\r\n        { key: 'JAVA', imgUrl: 'JAVA' },\r\n        { key: 'HTTP_POST', imgUrl: 'POST' }\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' }\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' },\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList2: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        { key: 'HTTP_PUT', imgUrl: 'PUT' }\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' }\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList3: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        { key: 'CMD', imgUrl: 'CMD' },\r\n        { key: 'SHELL', imgUrl: 'SHELL' }\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList4: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' },\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      lastStatusData: [\r\n        // Ready Done Runing Failed Pending Dispatcher\r\n        { label: 'Ready', value: 'Ready' },\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Runing', value: 'Runing' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Dispatcher', value: 'Dispatcher' }\r\n      ],\r\n      taskStatusData: [\r\n        // 1->新增；2->变更；3->下线；4->上线完成',\r\n        { label: '新增', value: 1 },\r\n        { label: '变更', value: 2 },\r\n        { label: '下线', value: 3 },\r\n        { label: '上线完成', value: 4 }\r\n      ],\r\n      depJobRuler: {\r\n        depPlatform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depSystem: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depJob: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depBatch: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      formRule: {\r\n        streamType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        platform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        systems: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        job: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        // jobName: [{\r\n        //   required: true,\r\n        //   message: '请输入数据！'\r\n        // }],\r\n        jobType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        lastStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        taskStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        multiBatch: [{\r\n          validator: checkMultiBatch,\r\n          trigger: 'blur'\r\n        }],\r\n        timeWindow: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        virtualEnable: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        priority: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        callAgainMaxNum: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        callAgainWaitSec: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkFrequency: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkTimeTrigger: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkStreamSelf: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depJob: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobStep: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobFrequency: [{\r\n          validator: checkCron,\r\n          trigger: 'blur'\r\n        }],\r\n        offsetDay: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        ignoreError: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      jobStepDrawerRecord: {},\r\n      filePath: '',\r\n      filePathPre: ''\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.initFlag = 1\r\n        this.isEdit = true\r\n        let params = { platform: this.transData.row.platform, systems: this.transData.row.systems, job: this.transData.row.job, version: this.transData.row.version }\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/loadByJobName/',\r\n          params: params\r\n        }\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            this.formBean = Object.assign({}, resp.data)\r\n            let timeWindow = this.formBean.timeWindow\r\n            if (timeWindow) {\r\n              this.formBean.timeWindow = timeWindow.split('-')\r\n              this.formBean.checkFrequency = this.formBean.checkFrequency ? 1 : 0\r\n              this.formBean.checkStreamSelf = this.formBean.checkStreamSelf ? 1 : 0\r\n              this.formBean.checkTimeTrigger = this.formBean.checkTimeTrigger ? 1 : 0\r\n              this.formBean.ignoreError = this.formBean.ignoreError ? 1 : 0\r\n              this.formBean.virtualEnable = this.formBean.virtualEnable ? 1 : 0\r\n            }\r\n            if (this.formBean.depJob) {\r\n              let arr = this.formBean.depJob.split(',')\r\n              arr.forEach(e => {\r\n                let tmp = {\r\n                  depPlatform: e.split('@')[0],\r\n                  depSystem: e.split('@')[1],\r\n                  depJob: e.split('@')[2],\r\n                  depBatch: e.split('@')[3]\r\n                }\r\n                this.depJobList.push(tmp)\r\n              })\r\n            }\r\n            if (this.formBean.jobStep) {\r\n              let arr = this.formBean.jobStep.split(',')\r\n              arr.forEach(e => {\r\n                // 4@python3@null@$AUTO_HOME/APP/BDP/ADM/BDP_ADM_DTR_DAILY_RPT/bin/bdp_adm_dtr_daily_rpt0400.py@1 2\r\n                // stepNum@operCmd@stepType@scriptPath@parameter@environments\r\n                let tmp = {\r\n                  stepNum: e.split('@')[0],\r\n                  operCmd: e.split('@')[1],\r\n                  stepType: e.split('@')[2],\r\n                  scriptPath: e.split('@')[3],\r\n                  parameter: e.split('@')[4],\r\n                  environments: e.split('@')[5]\r\n                }\r\n                this.jobStepList.push(tmp)\r\n              })\r\n            }\r\n          })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.queryCodeType()\r\n      // this.queryNoticeObj()\r\n      this.queryPlatform()\r\n      this.queryJobType()\r\n      this.genCallAgainMaxNumData()\r\n      // this.queryServerityType()\r\n      // this.queryAlarmType()\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n        this.$set(this.formBean, 'lastStatus', 'Done')\r\n        this.$set(this.formBean, 'taskStatus', 1)\r\n        this.$set(this.formBean, 'callAgainMaxNum', 0)\r\n        this.$set(this.formBean, 'timeWindow', ['00:00', '23:59'])\r\n        this.$set(this.formBean, 'offsetDay', 0)\r\n        this.$set(this.formBean, 'callAgainWaitSec', 120)\r\n        this.$set(this.formBean, 'streamType', '4')\r\n        this.$set(this.formBean, 'virtualEnable', 0)\r\n        this.$set(this.formBean, 'multiBatch', 0)\r\n        this.$set(this.formBean, 'checkStreamSelf', 0)\r\n        this.$set(this.formBean, 'ignoreError', 0)\r\n        this.$set(this.formBean, 'jobDate', new Date())\r\n        this.$set(this.formBean, 'priority', '500')\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    querySystem () {\r\n      this.systemsData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemsData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryDepSystem () {\r\n      this.depSystemsData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.depJobDrawer.data.depPlatform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.depJobDrawer.data.depPlatform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.depSystemsData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryDepJob () {\r\n      this.depJobData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.depJobDrawer.data.depPlatform && this.depJobDrawer.data.depSystem) {\r\n        let params = {}\r\n        params.platform = this.depJobDrawer.data.depPlatform\r\n        params.systems = this.depJobDrawer.data.depSystem\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: '/udsJob/selectJobList',\r\n          params: params\r\n        }\r\n\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              resp.data.forEach(e => {\r\n                let tmp = {}\r\n                tmp.value = e.job\r\n                tmp.label = e.job\r\n                this.depJobData.push(tmp)\r\n              })\r\n            }\r\n          })\r\n      }\r\n    },\r\n    uploadStepShow (item, index) {\r\n      this.jobStepDrawerRecord = item\r\n      let path = this.jobStepDrawerRecord.scriptPath\r\n      if (path) {\r\n        let index = path.lastIndexOf(':////')\r\n        this.filePathPre = path.substring(0, index + 4)\r\n        this.filePath = path.substring(index + 4, path.length)\r\n        if (path.indexOf('local:///') != -1) {\r\n          this.radioData = 'local'\r\n        } else if (path.indexOf('nas:///') != -1) {\r\n          this.radioData = 'nas'\r\n        } else if (path.indexOf('aws:///') != -1) {\r\n          this.radioData = 'aws'\r\n        } else if (path.indexOf('spdb:///') != -1) {\r\n          this.radioData = 'rpc'\r\n        }\r\n      } else {\r\n        this.filePathPre = 'local:///'\r\n        this.radioData = 'local'\r\n      }\r\n      this.jobStepDrawer.uploadShow = true\r\n    },\r\n    changeStreamType () {\r\n      if (this.formBean.streamType === '2') {\r\n        this.$set(this.formBean, 'checkStreamSelf', 1)\r\n      } else {\r\n        this.$set(this.formBean, 'checkStreamSelf', 0)\r\n      }\r\n      // 作业出发类型如果是信号出发，是否启用stream file触发默认为采用，否则为不采用，这个不可选\r\n      // 检测是否采用时间触发在定时作业时默认为采用，否则为不采用，不可选\r\n    },\r\n    changeJobType () {\r\n      if (this.formBean.jobType === 'C') {\r\n        this.$set(this.formBean, 'checkTimeTrigger', 1)\r\n      } else {\r\n        this.$set(this.formBean, 'checkTimeTrigger', 0)\r\n      }\r\n    },\r\n    jobStepConfig () {\r\n      if (this.transData.row && this.transData.row.id) {\r\n        this.depJobDrawer.data.depBatch = 0\r\n        this.jobStepDrawer.data.list = []\r\n        this.jobStepList.sort(utils.compare('index')).map(item => {\r\n          this.jobStepDrawer.data.list.push(Object.assign(item, { status: 1 }))\r\n        })\r\n      }\r\n      this.jobStepDrawer.show = true\r\n    },\r\n    handleAdd (fileType) {\r\n      if (this.jobStepDrawer.data.list && this.jobStepDrawer.data.list.length > 8) {\r\n        return this.$Message.warning('当前作业脚本配置数量已达最大值')\r\n      }\r\n      this.jobStepDrawer.data.list.push({\r\n        operCmd: fileType,\r\n        parameter: '',\r\n        environments: '',\r\n        status: 1\r\n      })\r\n      this.fileType = fileType\r\n    },\r\n    saveJobStep () {\r\n      let list = this.jobStepDrawer.data.list\r\n      this.jobStepList = []\r\n      if (list && list.length > 0) {\r\n        list.forEach((e, index) => {\r\n          let tmp = {\r\n            operCmd: e.operCmd,\r\n            stepNum: index + 1,\r\n            stepType: e.stepType,\r\n            environments: e.environments,\r\n            parameter: e.parameter,\r\n            scriptPath: e.scriptPath\r\n          }\r\n          this.jobStepList.push(tmp)\r\n        })\r\n      }\r\n      let tmparr = []\r\n      if (this.jobStepList && this.jobStepList.length > 0) {\r\n        this.jobStepList.forEach(e => {\r\n        // 平台@应用@作业@批次\r\n          tmparr.push(e.stepNum + '@' + e.operCmd + '@' + e.stepType + '@' + e.scriptPath + '@' + e.parameter + '@' + e.environments)\r\n        })\r\n        this.formBean.jobStep = tmparr.join(',')\r\n      }\r\n      this.jobStepDrawer.show = false\r\n    },\r\n    handleRemove (index) {\r\n      this.jobStepDrawer.data.list[index].status = 0\r\n      this.jobStepDrawer.data.list.splice(index, 1)\r\n    },\r\n    parameterShow (item, index) {\r\n      if (item.parameter && item.parameter.length > 0) {\r\n        this.jobStepDrawer.parameter.list = []\r\n        item.parameter.split(' ').forEach(e => {\r\n          let tmp = {\r\n            parameter: e,\r\n            status: 1,\r\n            placeholder: '${参数}'\r\n          }\r\n          this.jobStepDrawer.parameter.list.push(tmp)\r\n        })\r\n      }\r\n      this.currentIndex = index\r\n      this.jobStepDrawer.parameterShow = true\r\n    },\r\n    parameterOk () {\r\n      let list = this.jobStepDrawer.parameter.list\r\n      let str = ''\r\n      if (list && list.length > 0) {\r\n        list.forEach(e => {\r\n          str = str + ' ' + e.parameter\r\n        })\r\n      }\r\n      this.jobStepDrawer.data.list[this.currentIndex].parameter = str.trim()\r\n      this.jobStepDrawer.parameterShow = false\r\n    },\r\n    parameterAdd () {\r\n      this.jobStepDrawer.parameter.list.push({\r\n        placeholder: '${参数}',\r\n        parameter: '',\r\n        status: 1\r\n      })\r\n    },\r\n    parameterRemove (index) {\r\n      this.jobStepDrawer.parameter.list[index].status = 0\r\n      this.jobStepDrawer.parameter.list.splice(index, 1)\r\n    },\r\n    envShow (item, index) {\r\n      item.environments = 'Password=?;name=?'\r\n      if (item.environments) {\r\n        this.jobStepDrawer.env.list = []\r\n        item.environments.split(';').forEach(e => {\r\n          let tmp = {\r\n            environments: e,\r\n            status: 1,\r\n            placeholder: '${参数}'\r\n          }\r\n          this.jobStepDrawer.env.list.push(tmp)\r\n        })\r\n      }\r\n      this.currentIndex = index\r\n      this.jobStepDrawer.envShow = true\r\n    },\r\n    envOk () {\r\n      let list = this.jobStepDrawer.env.list\r\n      let str = ''\r\n      if (list && list.length > 0) {\r\n        list.forEach(e => {\r\n          str = str + ';' + e.environments\r\n        })\r\n      }\r\n      this.jobStepDrawer.data.list[this.currentIndex].environments = str.trim().replace(/^;/, '')\r\n      this.jobStepDrawer.envShow = false\r\n    },\r\n    envAdd () {\r\n      this.jobStepDrawer.env.list.push({\r\n        environments: '',\r\n        placeholder: 'key=value;key=value',\r\n        status: 1\r\n      })\r\n    },\r\n    envRemove (index) {\r\n      this.jobStepDrawer.env.list[index].status = 0\r\n      this.jobStepDrawer.env.list.splice(index, 1)\r\n    },\r\n    depJobConfig () {\r\n      this.$set(this.depJobDrawer.data, 'depBatch', 0)\r\n      this.depJobDrawer.show = true\r\n    },\r\n    addDepJob () {\r\n      this.$refs.depJobDrawerForm.validate(valid => {\r\n        if (!valid) return\r\n        let tmp = Object.assign({}, this.depJobDrawer.data)\r\n        let params = { platform: tmp.depPlatform, systems: tmp.depSystem, job: tmp.depJob }\r\n        if (this.depJobList && this.depJobList.length > 0) {\r\n          try {\r\n            this.depJobList.forEach(e => {\r\n              if (JSON.stringify(e) === JSON.stringify(tmp)) {\r\n                this.$Message.warning('请勿重复添加！')\r\n                throw new Error('repeatAddError')\r\n              }\r\n            })\r\n            this.jobSearch(params, tmp)\r\n          } catch (e) {\r\n            if (e.message !== 'repeatAddError') throw e\r\n          }\r\n        } else {\r\n          this.jobSearch(params, tmp)\r\n        }\r\n      })\r\n    },\r\n    jobSearch (params, tmp) {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/jobSearch',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (resp.data && resp.data.length > 0) {\r\n              this.depJobList.push(tmp)\r\n            } else {\r\n              this.$Message.warning('当前作业不存！')\r\n            }\r\n          }\r\n        })\r\n    },\r\n    removeDepJob (index) {\r\n      this.depJobList.splice(index, 1)\r\n    },\r\n    saveDepJob () {\r\n      // this.depJobList = []\r\n      let tmparr = []\r\n      if (this.depJobList && this.depJobList.length > 0) {\r\n        this.depJobList.forEach(e => {\r\n        // 平台@应用@作业@批次\r\n          tmparr.push(e.depPlatform + '@' + e.depSystem + '@' + e.depJob + '@' + e.depBatch)\r\n        })\r\n        this.formBean.depJob = tmparr.join(',')\r\n      }\r\n      this.depJobDrawer.show = false\r\n    },\r\n    addjobDep () {\r\n\r\n    },\r\n    handleUpload: function (file) {\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    importExcel () {\r\n      var formData = new FormData()\r\n      formData.append('fileType', this.fileType)\r\n      formData.append('platform', this.formBean.platform)\r\n      formData.append('systems', this.formBean.systems)\r\n      formData.append('job', this.formBean.job)\r\n      formData.append('version', this.transData.row.version)\r\n      this.jobStepDrawerRecord.scriptPath = this.filePathPre + this.filePath\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入Excel')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        // formData.authps = systems\r\n        // String fileType, String platform, String systems, String job\r\n        // return\r\n        this.loadingStatus = true\r\n        this.$ajax.post('/jobattributes/upload', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            this.files = []\r\n            this.jobStepDrawer.uploadShow = false\r\n          })\r\n      }\r\n      // })\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmConfigForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        let tmpObj = Object.assign(this.formBean)\r\n        if (tmpObj.timeWindow) {\r\n          tmpObj.timeWindow = tmpObj.timeWindow.join('-')\r\n        }\r\n        if (tmpObj.jobDate) {\r\n          tmpObj.jobDate = utils.fmtDate(this.formBean.jobDate, 'yyyy-MM-dd')\r\n        }\r\n        debugger\r\n        params.dyJobAttributes = JSON.stringify(tmpObj)\r\n        params.jobStepList = JSON.stringify(this.jobStepList)\r\n        params.depJobList = JSON.stringify(this.depJobList)\r\n        // let dyJobAttributes = {\r\n        //   callAgainMaxNum: 3,\r\n        //   callAgainWaitSec: 2,\r\n        //   checkFrequency: 0,\r\n        //   checkStreamSelf: 1,\r\n        //   checkTimeTrigger: 1,\r\n        //   ignoreError: 1,\r\n        //   job: 'BDP_ADM_DTR_DAILY_RPT',\r\n        //   jobDate: '2022-04-28',\r\n        //   jobFrequency: '1',\r\n        //   jobName: 'test',\r\n        //   jobType: 'D',\r\n        //   offsetDay: 1,\r\n        //   platform: 'BDP',\r\n        //   priority: '1',\r\n        //   sysytems: 'ADM',\r\n        //   stakStatus: 1,\r\n        //   timeWindow: '00:00-23:59',\r\n        //   virtualEnable: 1\r\n\r\n        // }\r\n        // let depJobList = [\r\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 2 },\r\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 1 }\r\n        // ]\r\n        // let jobStepList = [\r\n        //   {\r\n        //     environments: 'Password=?;name=?',\r\n        //     parameter: ' ${platform} ${systems} ${job} ${job_date} ${batch}',\r\n        //     stepNum: '1',\r\n        //     stepType: 'shell'\r\n        //   }\r\n        // ]\r\n        // params.dyJobAttributes = JSON.stringify(dyJobAttributes)\r\n        // params.jobStepList = JSON.stringify(jobStepList)\r\n        // params.depJobList = JSON.stringify(depJobList)\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n        httpConfig.contentType = 'json'\r\n        if (this.transData.row.id) {\r\n          httpConfig.method = 'PUT'\r\n          httpConfig.data.id = tmpObj.id\r\n          httpConfig.url = RESOURCE_PATH + '/update'\r\n        } else {\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/add'\r\n        }\r\n        // return\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    genCallAgainMaxNumData () {\r\n      this.callAgainMaxNumData = []\r\n      for (let i = 0; i < 11; i++) {\r\n        let tmp = { label: i, value: i }\r\n        this.callAgainMaxNumData.push(tmp)\r\n      }\r\n    },\r\n    queryJobType () {\r\n      this.jobTypeData = [\r\n        { value: 'D', label: '每天执行' },\r\n        { value: 'W', label: '每周执行' },\r\n        { value: 'M', label: '每月执行' },\r\n        { value: 'C', label: '定时执行' }\r\n      ]\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      if (!this.transData.id) {\r\n        this.$router.push({ path: '/workflow/workflowmanage' })\r\n      } else {\r\n        let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n        this.$emit('switch', Object.assign({}, queryCache))\r\n      }\r\n    },\r\n\r\n    checkRadio () {\r\n      this.isShow = true\r\n      if (this.radioData === 'local') {\r\n        this.filePathPre = 'local:///'\r\n      } else if (this.radioData === 'nas') {\r\n        this.filePathPre = 'nas:///'\r\n      } else if (this.radioData === 'aws') {\r\n        this.filePathPre = 'aws:///'\r\n      } else if (this.radioData === 'rpc') {\r\n        this.filePathPre = 'spdb:///'\r\n      } else if (this.radioData === 'scp') {\r\n        this.filePathPre = 'scp:///'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  watch: {\r\n    'formBean.jobType': function (e) {\r\n      this.disJobFrequency = false\r\n      if (this.formBean.jobType === 'D') {\r\n        this.disJobFrequency = true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n  .drawer-calss .ivu-drawer-wrap  {\r\n      z-index: 3000 !important\r\n  }\r\n  .drawer-calss .ivu-drawer-mask {\r\n      z-index: 3000 !important\r\n  }\r\n  .drawer-footer{\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    text-align: right;\r\n    background: #fff;\r\n  }\r\n  .jobsetp-title{\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    color: #495060;\r\n    text-align: center;\r\n  }\r\n  .jobsetp-tag .ivu-tag{\r\n    font-size: 14px;\r\n    margin-top: 10%;\r\n    margin-left: 10%;\r\n    /* align-items: center; */\r\n  }\r\n  .work-flow .ivu-form-item-error-tip {\r\n    white-space: nowrap;\r\n  }\r\n</style>\r\n"],"mappings":"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GACA;QAAAgE,KAAA;QAAAhE,KAAA;MAAA,EACA;MACA4E,WAAA;QACAC,WAAA;UACAC,QAAA;UACAlE,OAAA;QACA;QACAmE,SAAA;UACAD,QAAA;UACAlE,OAAA;QACA;QACAoE,MAAA;UACAF,QAAA;UACAlE,OAAA;QACA;QACAqE,QAAA;UACAH,QAAA;UACAlE,OAAA;QACA;MACA;MACAsE,QAAA;QACAC,UAAA;UACAL,QAAA;UACAlE,OAAA;QACA;QACAwE,QAAA;UACAN,QAAA;UACAlE,OAAA;QACA;QACAyE,OAAA;UACAP,QAAA;UACAlE,OAAA;QACA;QACAG,GAAA;UACA+D,QAAA;UACAlE,OAAA;QACA;QACA;QACA;QACA;QACA;QACA0E,OAAA;UACAR,QAAA;UACAlE,OAAA;QACA;QACA2E,OAAA;UACAT,QAAA;UACAlE,OAAA;QACA;QACA4E,UAAA;UACAV,QAAA;UACAlE,OAAA;QACA;QACA6E,UAAA;UACAX,QAAA;UACAlE,OAAA;QACA;QACA8E,UAAA;UACAC,SAAA,EAAA9E,eAAA;UACA+E,OAAA;QACA;QACAC,UAAA;UACAf,QAAA;UACAlE,OAAA;QACA;QACAkF,aAAA;UACAhB,QAAA;UACAlE,OAAA;QACA;QACAmF,QAAA;UACAjB,QAAA;UACAlE,OAAA;QACA;QACAoF,eAAA;UACAlB,QAAA;UACAlE,OAAA;QACA;QACAqF,gBAAA;UACAnB,QAAA;UACAlE,OAAA;QACA;QACAsF,cAAA;UACApB,QAAA;UACAlE,OAAA;QACA;QACAuF,gBAAA;UACArB,QAAA;UACAlE,OAAA;QACA;QACAwF,eAAA;UACAtB,QAAA;UACAlE,OAAA;QACA;QACAoE,MAAA;UACAF,QAAA;UACAlE,OAAA;QACA;QACAyF,OAAA;UACAvB,QAAA;UACAlE,OAAA;QACA;QACA0F,YAAA;UACAX,SAAA,EAAA7F,SAAA;UACA8F,OAAA;QACA;QACAW,SAAA;UACAzB,QAAA;UACAlE,OAAA;QACA;QACA4F,WAAA;UACA1B,QAAA;UACAlE,OAAA;QACA;MACA;MACA6F,mBAAA;MACAC,QAAA;MACAC,WAAA;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"}]}