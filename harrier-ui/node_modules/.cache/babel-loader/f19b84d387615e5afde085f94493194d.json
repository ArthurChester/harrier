{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\JobRecord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\JobRecord.vue","mtime":1681468306536},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/web.dom.iterable\";\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/udsJobRecord';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      jobtypeList: {},\n      loadingTable: false,\n      formBean: {},\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      streamTypeList: {},\n      gridColumns: [{\n        title: '平台名',\n        key: 'platform',\n        width: 90\n      }, {\n        title: '应用名',\n        key: 'systems',\n        width: 90\n      }, {\n        title: '作业名',\n        key: 'job',\n        minWidth: 175\n        // render: (h, { column, index, row }) => {\n        //   return h('div', [\n        //     h('a', {\n        //       props: {\n        //         size: 'small',\n        //         type: 'info'\n        //       },\n        //       style: {\n        //         // marginRight: '5px'\n        //         // color: \"green\"\n        //       },\n        //       on: {\n        //         click: () => {\n        //           let id = row.job\n        //           this.$emit('switch', { id: id, statusName: 'jobdetail', jobData: row, formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }) // 提交form事件，在parent中显示form\n        //         }\n        //       }\n        //     }, row.job)\n        //   ])\n        // }\n      }, {\n        title: '作业类型',\n        key: 'jobType',\n        width: 100\n        // render: (h, { column, index, row }) => {\n        //   return h('div', [\n        //     h('span', {\n        //       props: {\n        //         size: 'small',\n        //         type: 'info'\n        //       },\n        //       style: {\n        //         // marginLeft: '5px',\n        //         // color: '#3399ff'\n        //       }\n        //     }, this.jobtypeList[row.jobType])\n        //   ])\n        // }\n      }, {\n        title: '作业最后状态',\n        key: 'lastStatus',\n        width: 130\n      }, {\n        title: '触发方式',\n        key: 'streamType',\n        width: 120\n        // render: (h, { column, index, row }) => {\n        //   return h('div', [\n        //     h('div', {\n        //     }, this.streamTypeList[row.streamType])\n        //   ])\n        // }\n      },\n      // {\n      // \ttitle: '作业进入pending状态时间',\n      // \tkey: 'pendingTime',\n      // },\n      {\n        title: '开始时间',\n        key: 'startTime',\n        width: 175\n      }, {\n        title: '结束时间',\n        key: 'endTime',\n        width: 175\n      }, {\n        title: 'TxDate',\n        key: 'jobDate',\n        width: 120\n      }, {\n        title: '批次号',\n        key: 'multiBatch',\n        width: 90\n      }, {\n        title: '执行次数',\n        key: 'numTimes',\n        width: 100\n      }, {\n        title: '日志',\n        width: 80,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-search'\n            },\n            style: {\n              // marginRight: '5px'\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              background: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.id + '';\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'log',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'log',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, '')]);\n        }\n      }\n      // {\n      // \ttitle: '操作',\n      // \tfixed: 'right',\n      // \trender: (h, {column,index, row}) => {\n      // \t\treturn h('div', [\n      // \t\t\th('Button', {\n      // \t\t\t\tprops: {\n      // \t\t\t\t\tsize: 'small',\n      // \t\t\t\t\ttype: 'info',\n      // \t\t\t\t},\n      // \t\t\t\tstyle: {\n      // \t\t\t\t\tmarginRight: '5px'\n      // \t\t\t\t},\n      // \t\t\t\ton: {\n      // \t\t\t\t\tclick :() => {\n      // \t\t\t\t\t\tlet id = row.system;\n      // \t\t\t\t\t\tthis.$emit('switch', {id: id}); //提交form事件，在parent中显示form\n      // \t\t\t\t\t}\n      // \t\t\t\t}\n      // \t\t\t}, '编辑')\n      // \t\t])\n      // \t}\n      // }\n      ],\n\n      statusList: [{\n        label: 'Done',\n        key: 'Done'\n      }, {\n        label: 'Failed',\n        key: 'Failed'\n      }],\n      gridData: [],\n      selection: [],\n      systemData: [],\n      platformData: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {}\n    };\n  },\n  methods: {\n    queryjobtypeList: function queryjobtypeList() {\n      var _this2 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'jobtype'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this2.jobtypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this2.jobtypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    queryPlatform: function queryPlatform() {\n      var _this3 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getPlatformList'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this3.platformData.push(tmp);\n        });\n      });\n    },\n    querySystem: function querySystem() {\n      var _this4 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getSysList',\n        params: {\n          platform: this.formBean.platform\n        }\n      };\n\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\n      // this.$ajax(loadConfig)\n      // .then(resp => {\n      //  this.formBean.system = \"\";\n      //  this.systemData = resp.data;\n      //\n      // })\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data;\n            tmp.label = data;\n            _this4.systemData.push(tmp);\n          });\n        });\n      }\n    },\n    getStartTime: function getStartTime(startTime) {\n      this.formBean.startTime = startTime;\n    },\n    getEndTime: function getEndTime(endTime) {\n      this.formBean.endTime = endTime;\n    },\n    /**\r\n     * 初始化\r\n     **/\n    init: function init() {\n      if (this.transData.jobData) {\n        // Object.assign(this.formBean, this.transData.jobData)\n        this.page.size = this.transData.pageSize;\n        this.page.current = this.transData.currentPage;\n        this.search();\n      }\n      // this.queryStreamTypeList()\n      // this.queryPlatform()\n      // this.queryjobtypeList()\n      // this.search()\n    },\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\n    // bindData (fields) {\n    //   try {\n    //     const data = Object.assign({}, this.transData.initFormBean)\n    //     if (fields) { // 进行可选字段初始化\n    //       for (const field of fields) {\n    //         this.formBean[field] = data[field]\n    //       }\n    //     } else { // 进行全量字段初始化（默认是只有主表的主键的）\n    //       this.formBean = Object.assign({}, data)\n    //     }\n    //   } catch (error) {\n    //     console.error(error)\n    //   }\n    // },\n    /**\r\n     * 下载\r\n     **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n     * 查询\r\n     **/\n    search: function search() {\n      var _this5 = this;\n      var params = {};\n      // if (this.formBean.startTime === '') {\n      //   this.$Message.error('未填写开始时间')\n      //   return\n      // }\n      // if (this.formBean.endTime === '') {\n      //   this.$Message.error('未填写结束时间')\n      //   return\n      // }\n      // let stime = new Date(this.formBean.startTime)\n      // let etime = new Date(this.formBean.endTime)\n      // let num = parseInt((etime.getTime() - stime.getTime()) / 1000 / 60 / 60 / 24)\n      // if (num < 0 || num > 30) {\n      //   this.$Message.error('查询时间应在30天之内')\n      //   return\n      // }\n      // if (etime <= stime) {\n      //   this.$Message.error('结束时间应大于开始时间')\n      //   return\n      // }\n      // Object.assign(params, this.formBean)\n      params.current = this.page.current;\n      params.size = this.page.size;\n      // for (let key in params) {\n      //   if (key === 'job' && params[key]) {\n      //     params[key] = params[key].trim().toUpperCase()\n      //   }\n      // }\n      params.platform = this.transData.jobData.platform;\n      params.systems = this.transData.jobData.systems;\n      params.job = this.transData.jobData.job;\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/selectJobRecord',\n        params: params\n      };\n      this.loadingTable = true;\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          _this5.gridData = resp.data.records;\n          _this5.page.total = resp.data.total;\n        }\n        _this5.loadingTable = false;\n      });\n    },\n    queryStreamTypeList: function queryStreamTypeList() {\n      var _this6 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'stream_type'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this6.streamTypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this6.streamTypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.formBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n     * 清空\r\n     **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n     * 新增\r\n     **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n     * 删除\r\n     **/\n    del: function del() {\n      var _this7 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.system;\n      });\n      ids.forEach(function (id) {\n        _this7.request.delReq.url = RESOURCE_PATH + '/' + id;\n        _this7.request.delReq.method = 'DELETE';\n        _this7.$ajax(_this7.request.delReq).then(function (resp) {\n          _this7.search();\n        });\n      });\n    },\n    /**\r\n     * 数据复选事件\r\n     **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    /**\r\n     * 改变页码事件\r\n     **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n     * 改变分页大小事件\r\n     **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    /**\r\n    * 返回到数据视图\r\n    **/\n    cancel: function cancel() {\n      var prevTab = '';\n      if (this.transData.tabObj) {\n        prevTab = this.transData.tabObj.prevTab;\n        // prevTab = 'joblist'\n      }\n\n      var queryCache = {\n        formBean: this.transData.formBean,\n        currentPage: this.transData.currentPage,\n        pageSize: this.transData.pageSize\n      };\n      var backParam = {\n        statusName: 'table',\n        prevTab: prevTab,\n        type: 'back'\n      };\n      if (this.transData.tablePage) {\n        queryCache = {\n          formBean: this.transData.formBean,\n          currentPage: this.tablePage.current,\n          pageSize: this.tablePage.size\n        };\n      }\n      if (this.transData.prequeryCache) {\n        if (this.transData.jobStatus) {\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus;\n        }\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam));\n      } else {\n        this.$emit('switch', Object.assign({}, queryCache, backParam, {\n          jobData: this.transData.jobData\n        }));\n      }\n    }\n  },\n  /**\r\n   * 视图挂载\r\n   **/\n  mounted: function mounted() {\n    this.init();\n    // this.queryStreamTypeList()\n    // this.queryPlatform()\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","jobtypeList","loadingTable","formBean","request","delReq","method","url","addReq","streamTypeList","gridColumns","title","key","width","minWidth","align","render","h","_ref","column","index","row","icon","style","margin","fontSize","border","padding","color","background","on","click","id","jobStatus","$emit","assign","statusName","jobData","getPageParam","statusList","label","gridData","selection","systemData","platformData","page","current","total","size","opt","ruleValidate","methods","queryjobtypeList","_this2","loadConfig","params","dicCode","$ajax","then","resp","rows","forEach","dicValue","dicName","queryPlatform","_this3","tmp","value","push","querySystem","_this4","platform","$refs","refsystem","setQuery","getStartTime","startTime","getEndTime","endTime","init","pageSize","currentPage","search","download","_this5","systems","job","httpConfig","status","records","queryStreamTypeList","_this6","clear","add","del","_this7","ids","Array","from","e","system","select","filterMethod","option","toUpperCase","indexOf","changePage","changePageSize","cancel","prevTab","tabObj","queryCache","backParam","tablePage","prequeryCache","mounted"],"sources":["src/view/spdb/job/jobList/JobRecord.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<Row>\r\n\t\t\t<Col span=\"24\">\r\n\t\t\t\t<div style=\"font-size:14px;font-weight: bold; color: #464c5b;margin-left:5px;\">\r\n\t\t\t\t运行记录\r\n\t\t\t\t&nbsp;&nbsp;平台名:{{this.transData.jobData.platform}}\r\n\t\t\t\t&nbsp;&nbsp;应用名:{{this.transData.jobData.systems}}\r\n\t\t\t\t&nbsp;&nbsp;作业名:{{this.transData.jobData.job}}\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row>\r\n\t\t<Form :label-width=\"80\">\r\n\t\t\t<Col span=\"13\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"4\">\r\n\t\t\t\t<FormItem  label=\"TXDate\" >\r\n\t\t\t\t\t<DatePicker :transfer=\"true\" v-model=\"formBean.startTime\" type=\"datetime\"  @on-change=\"getStartTime\" format=\"yyyyMMdd\" placeholder=\"请选择\" ></DatePicker>\r\n\t\t\t\t<!--\r\n\t\t\t\t\t<Select v-model=\"jobDate\" @on-change=\"search\" filterable multiple>\r\n\t\t\t\t\t\t<Option v-for=\"item in jobDateList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t</Select>-->\r\n\t\t\t\t</FormItem>\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"1\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"6\">\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">&nbsp;&nbsp;查询</Button>\r\n\t\t\t\t<!-- <Button type=\"primary\" @click=\"showJobScriptOp\" style=\"\">所有脚本</Button>\r\n        <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"hisDownload\" style=\"\">下载</Button> -->\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\t\t\t</Col>\r\n\t\t</Form>\r\n\t\t</Row>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" :loading=\"loadingTable\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t<!-- <Modal id=\"jobScript\"\r\n\t\t\tv-model=\"jobScriptOp.show\"\r\n\t\t\ttitle=\"所有脚本\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t> -->\r\n\t\t\t<!-- <div>\r\n\t\t\t\t<div class=\"spdb-table\" >\r\n\t\t\t\t\t<Table border :columns=\"scriptGridColumns\" :data=\"scriptGridData\" stripe>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t</div> -->\r\n\t\t\t<div slot=\"footer\">\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobRecord'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 175\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('a', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginRight: '5px'\r\n          //         // color: \"green\"\r\n          //       },\r\n          //       on: {\r\n          //         click: () => {\r\n          //           let id = row.job\r\n          //           this.$emit('switch', { id: id, statusName: 'jobdetail', jobData: row, formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }) // 提交form事件，在parent中显示form\r\n          //         }\r\n          //       }\r\n          //     }, row.job)\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          width: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('span', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginLeft: '5px',\r\n          //         // color: '#3399ff'\r\n          //       }\r\n          //     }, this.jobtypeList[row.jobType])\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业最后状态',\r\n          key: 'lastStatus',\r\n          width: 130\r\n        },\r\n        {\r\n          title: '触发方式',\r\n          key: 'streamType',\r\n          width: 120\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('div', {\r\n          //     }, this.streamTypeList[row.streamType])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '作业进入pending状态时间',\r\n        // \tkey: 'pendingTime',\r\n        // },\r\n        {\r\n          title: '开始时间',\r\n          key: 'startTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          key: 'endTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: 'TxDate',\r\n          key: 'jobDate',\r\n          width: 120\r\n        },\r\n        {\r\n          title: '批次号',\r\n          key: 'multiBatch',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '执行次数',\r\n          key: 'numTimes',\r\n          width: 100\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-search'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.id + ''\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        }\r\n        // {\r\n        // \ttitle: '操作',\r\n        // \tfixed: 'right',\r\n        // \trender: (h, {column,index, row}) => {\r\n        // \t\treturn h('div', [\r\n        // \t\t\th('Button', {\r\n        // \t\t\t\tprops: {\r\n        // \t\t\t\t\tsize: 'small',\r\n        // \t\t\t\t\ttype: 'info',\r\n        // \t\t\t\t},\r\n        // \t\t\t\tstyle: {\r\n        // \t\t\t\t\tmarginRight: '5px'\r\n        // \t\t\t\t},\r\n        // \t\t\t\ton: {\r\n        // \t\t\t\t\tclick :() => {\r\n        // \t\t\t\t\t\tlet id = row.system;\r\n        // \t\t\t\t\t\tthis.$emit('switch', {id: id}); //提交form事件，在parent中显示form\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t}\r\n        // \t\t\t}, '编辑')\r\n        // \t\t])\r\n        // \t}\r\n        // }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //  this.formBean.system = \"\";\r\n      //  this.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        // Object.assign(this.formBean, this.transData.jobData)\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n      // this.queryStreamTypeList()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.search()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    // bindData (fields) {\r\n    //   try {\r\n    //     const data = Object.assign({}, this.transData.initFormBean)\r\n    //     if (fields) { // 进行可选字段初始化\r\n    //       for (const field of fields) {\r\n    //         this.formBean[field] = data[field]\r\n    //       }\r\n    //     } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n    //       this.formBean = Object.assign({}, data)\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(error)\r\n    //   }\r\n    // },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      // if (this.formBean.startTime === '') {\r\n      //   this.$Message.error('未填写开始时间')\r\n      //   return\r\n      // }\r\n      // if (this.formBean.endTime === '') {\r\n      //   this.$Message.error('未填写结束时间')\r\n      //   return\r\n      // }\r\n      // let stime = new Date(this.formBean.startTime)\r\n      // let etime = new Date(this.formBean.endTime)\r\n      // let num = parseInt((etime.getTime() - stime.getTime()) / 1000 / 60 / 60 / 24)\r\n      // if (num < 0 || num > 30) {\r\n      //   this.$Message.error('查询时间应在30天之内')\r\n      //   return\r\n      // }\r\n      // if (etime <= stime) {\r\n      //   this.$Message.error('结束时间应大于开始时间')\r\n      //   return\r\n      // }\r\n      // Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      // for (let key in params) {\r\n      //   if (key === 'job' && params[key]) {\r\n      //     params[key] = params[key].trim().toUpperCase()\r\n      //   }\r\n      // }\r\n      params.platform = this.transData.jobData.platform\r\n      params.systems = this.transData.jobData.systems\r\n      params.job = this.transData.jobData.job\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectJobRecord',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n    // this.queryStreamTypeList()\r\n    // this.queryPlatform()\r\n  }\r\n}\r\n\r\n</script>\r\n"],"mappings":";;;;AA+DA,OAAAA,KAAA;AACA,IAAAC,aAAA;AAEA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QACA;MACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IAAA,IAAAC,KAAA;IACA;MACAC,WAAA;MACAC,YAAA;MACAC,QAAA;MACAC,OAAA;QACAC,MAAA;UACAC,MAAA;UACAC,GAAA,EAAAf;QACA;QACAgB,MAAA;UACAF,MAAA;UACAC,GAAA,EAAAf;QACA;MACA;MACAiB,cAAA;MACAC,WAAA,GACA;QACAC,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAE,QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,GACA;QACAH,KAAA;QACAC,GAAA;QACAC,KAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAE,KAAA;QACAE,KAAA;QACA;QACAC,MAAA,WAAAA,OAAAC,CAAA,EAAAC,IAAA;UAAA,IAAAC,MAAA,GAAAD,IAAA,CAAAC,MAAA;YAAAC,KAAA,GAAAF,IAAA,CAAAE,KAAA;YAAAC,GAAA,GAAAH,IAAA,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"}]}