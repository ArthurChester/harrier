{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\platformConfig\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\platformConfig\\Table.vue","mtime":1681468306548},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/web.dom.iterable\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nimport common from '@/mixins/common';\nvar RESOURCE_PATH = '/udsSystem';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  mixins: [common],\n  data: function data() {\n    var _this = this;\n    return {\n      formBean: {},\n      formBean3: {},\n      formBean2: {},\n      dbControlList: [],\n      dbControlName: {},\n      allStop: {\n        show: false\n      },\n      allStart: {\n        show: false\n      },\n      loadingStatus: false,\n      loadingStatus2: false,\n      loadingdel: false,\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      statusList: [{\n        value: '1',\n        label: '执行节点并发配置'\n      }, {\n        value: '0',\n        label: '调度系统并发配置'\n      }],\n      strategyList: [],\n      gridColumns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      }, {\n        title: '平台名',\n        key: 'platform',\n        minWidth: 100\n      }, {\n        title: '应用名',\n        key: 'systems',\n        minWidth: 100\n      }, {\n        title: '逻辑集群',\n        key: 'serverRoleNameGroup',\n        minWidth: 100\n        // render: (h, { column, index, row }) => {\n        //   return h('div', [\n        //     h('Span', {}, this.dbControlName[row.serverRoleNameGroup])\n        //   ])\n        // }\n      },\n      // {\n      // \ttitle: '脚本信号文件保存天数',\n      // \tkey: 'dataKeepDay',\n      // },\n      // {\n      // \ttitle: '脚本日志保存天数',\n      // \tkey: 'logKeepDay',\n      // },\n      // {\n      // \ttitle: '记录保存天数',\n      // \tkey: 'recordKeepDay',\n      // },\n\n      // {\n      //   title: '该平台最大运行作业数',\n      //   key: 'sumMax',\n      //   width: 160,\n      //   align: 'center'\n      // },\n      {\n        title: '最大运行作业数',\n        key: 'maxRunJob',\n        align: 'center',\n        minWidth: 110\n      }, {\n        title: '分发策略',\n        key: 'select',\n        align: 'center',\n        minWidth: 150,\n        render: function render(h, params) {\n          var strategy = params.row.select;\n          var str = '';\n          _this.strategyList.forEach(function (data1) {\n            if (data1.value == strategy) {\n              str = data1.label;\n            }\n          });\n          if (str == '') {\n            str = strategy;\n          }\n          return h('div', {\n            props: {}\n          }, str);\n        }\n      }, {\n        title: '策略参数',\n        key: 'selectPro',\n        // width: 200,\n        minWidth: 200,\n        // 超出长度省略符号\n        render: function render(h, params) {\n          var str = params.row.selectPro;\n          var str1 = '';\n          var str0 = '';\n          while (str.length > 30) {\n            str0 = str.substring(0, 30) + '\\n';\n            str = str.substring(30, str.length);\n            str1 = str1 + str0;\n          }\n          return h('div', [h('span', {\n            style: {\n              display: 'inline-block',\n              width: '100%',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap' // 'nowrap'\n            },\n\n            // 鼠标悬停 显示完整信息\n            domProps: {\n              title: str1 // params.row.strategyPro,\n            },\n\n            on: {\n              click: function click(e) {\n                e.stopPropagation();\n              }\n            }\n          }, params.row.selectPro)]);\n        }\n      }, {\n        title: '是否启用平台数据',\n        key: 'usePlatformMsg',\n        align: 'center',\n        minWidth: 110\n      }, {\n        title: '描述',\n        key: 'des',\n        minWidth: 150\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 100,\n        // fixed: 'right',\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('Button', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                var platform = row.platform;\n                var sys = row.systems;\n                var dbControl = row.serverRoleNameGroup;\n                var queryCache = {\n                  formBean: _this.formBean,\n                  currentPage: _this.page.current,\n                  pageSize: _this.page.size\n                };\n                _this.$emit('switch', Object.assign({\n                  platform: platform,\n                  sys: sys,\n                  dbControl: dbControl,\n                  data: row\n                }, queryCache)); // 提交form事件，在parent中显示form\n              }\n            }\n          }, '编辑')]);\n        }\n      }],\n      gridData: [],\n      systemData: [],\n      platformData: [],\n      platformData2: [],\n      platformData3: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {}\n    };\n  },\n  methods: {\n    paramChange: function paramChange() {\n      if (this.formBean.param == 1) {\n        this.$emit('switch', {\n          mtable: 'true'\n        });\n      }\n    },\n    queryPlatform: function queryPlatform() {\n      var _this2 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getPlatformList'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        resp.data.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this2.platformData.push(tmp);\n          _this2.platformData2.push(tmp);\n          _this2.platformData3.push(tmp);\n        });\n      });\n    },\n    querySystem: function querySystem() {\n      var _this3 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/msys/getSysList',\n        params: {\n          platform: this.formBean.platform\n        }\n      };\n\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\n      // this.$ajax(loadConfig)\n      // .then(resp => {\n      //\tthis.formBean.system = \"\";\n      //\tthis.systemData = resp.data;\n      //\n      // })\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data;\n            tmp.label = data;\n            _this3.systemData.push(tmp);\n          });\n        });\n      }\n    },\n    filterMethod: function filterMethod(value, option) {\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    },\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      if (this.transData.currentPage) {\n        this.formBean = this.transData.formBean;\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      // this.queryDbControlList()\n      this.search();\n      this.getPlatformList();\n      // this.queryPlatform()\n    },\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    queryDbControlList: function queryDbControlList() {\n      var _this4 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'db_control'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this4.dbControlList = [];\n        resp.data.rows.forEach(function (data) {\n          _this4.dbControlName[parseInt(data.dicValue)] = data.dicName;\n          var tmp = {};\n          tmp.value = parseInt(data.dicValue);\n          tmp.label = data.dicName;\n          _this4.dbControlList.push(tmp);\n        });\n      });\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this5 = this;\n      this.selection = [];\n      var params = {};\n      Object.assign(params, this.formBean);\n      // params.currentPage = this.page.current\n      // params.pageSize = this.page.size\n      params.current = this.page.current;\n      params.size = this.page.size;\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/selectAll',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this5.loading = false;\n        _this5.gridData = resp.data.rows;\n        _this5.page.total = resp.data.total;\n        resp.data.rows.forEach(function (data1) {\n          if (data1.usePlatform) {\n            data1.usePlatform = '1';\n            data1.usePlatformMsg = '启用';\n          } else {\n            data1.usePlatform = '0';\n            data1.usePlatformMsg = '禁用';\n          }\n          // if (data1.strategy == 0) {\n          //   data1.strategy = '普通策略'\n          // } else {\n          //   // alert(data1.strategy);\n          //   data1.strategy = '指定机器分发机器'\n          // }\n\n          data1.strategy = data1.select + '';\n        });\n      });\n    },\n    demand: function demand() {\n      this.page.current = 1;\n      this.search();\n    },\n    allStartOpen: function allStartOpen() {\n      this.allStart.show = true;\n    },\n    allStopOpen: function allStopOpen() {\n      this.allStop.show = true;\n    },\n    allstop: function allstop() {\n      var _this6 = this;\n      // this.$refs.allStopForm.validate(valid => {\n      // if(!valid) return;\n      if (!this.formBean3.platform) {\n        this.$Message.warning('请选择平台');\n        return;\n      }\n      var params = {};\n      Object.assign(params, this.formBean3);\n      params.authps = this.formBean3.platform + '*';\n      var httpConfig = {\n        url: RESOURCE_PATH,\n        data: params\n      };\n      if (this.formBean3.platform) {\n        httpConfig.method = 'PUT';\n        httpConfig.url = RESOURCE_PATH + '/allStop';\n      }\n      this.loadingStatus2 = true;\n      this.$ajax(httpConfig).then(function (resp) {\n        _this6.loadingStatus2 = false;\n        // let str=resp.data;\n        if (resp.status && resp.status == 200) {\n          _this6.allStop.show = false;\n          _this6.search();\n        }\n      });\n      // });\n    },\n    allstart: function allstart() {\n      var _this7 = this;\n      // if(!this.formBean2.maxRunJob){\n      // \tthis.$Message.warning(\"请输入默认值\");\n      // \treturn ;\n      // }\n      if (!this.formBean2.platform) {\n        this.$Message.warning('请选择平台');\n        return;\n      }\n      var params = {};\n      Object.assign(params, this.formBean2);\n      params.authps = this.formBean2.platform + '*';\n      var httpConfig = {\n        url: RESOURCE_PATH,\n        data: params\n      };\n      if (this.formBean2.platform) {\n        httpConfig.method = 'PUT';\n        httpConfig.url = RESOURCE_PATH + '/allStart';\n      }\n      this.loadingStatus = true;\n      this.$ajax(httpConfig).then(function (resp) {\n        _this7.loadingStatus = false;\n        // let str=resp.data;\n        if (resp.status && resp.status == 200) {\n          _this7.allStart.show = false;\n          _this7.search();\n        }\n      });\n    },\n    /**\r\n    * 清空\r\n    **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n    * 新增\r\n    **/\n    add: function add() {\n      this.$emit('switch', null);\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    // harrier getPlatformList\n    getPlatformList: function getPlatformList() {\n      var _this8 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/udsSystem/listQuery'\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        var platformList = [];\n        resp.data.forEach(function (data) {\n          platformList.push(data.platform);\n          // this.formBean.platform = \"UDS\";\n        });\n\n        platformList = Array.from(new Set(platformList));\n        _this8.platformData = [];\n        _this8.platformData2 = [];\n        _this8.platformData3 = [];\n        platformList.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this8.platformData.push(tmp);\n          _this8.platformData2.push(tmp);\n          _this8.platformData3.push(tmp);\n          // this.formBean.platform = \"UDS\";\n        });\n\n        _this8.search();\n      });\n    },\n    // harrier getSystemList\n    getSystemList: function getSystemList() {\n      var _this9 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/udsSystem/listQuery'\n      };\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        this.$ajax(loadConfig).then(function (resp) {\n          resp.data.forEach(function (data) {\n            if (_this9.formBean.platform === data.platform && data.systems !== '*') {\n              var tmp = {};\n              tmp.value = data.systems;\n              tmp.label = data.systems;\n              _this9.systemData.push(tmp);\n            }\n          });\n        });\n      }\n    },\n    // harrier test end\n    querySelectType: function querySelectType() {\n      var _this10 = this;\n      this.strategyList = [];\n      var params = {\n        dicCode: 'selectType'\n      };\n      var loadConfig = {\n        method: 'GET',\n        url: '/mDictionary/selectDicCode',\n        params: params\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data1) {\n            var temp = {};\n            temp.key = data1.dicValue;\n            temp.value = parseInt(data1.dicKey);\n            temp.label = data1.dicValue;\n            _this10.strategyList.push(temp);\n          });\n        }\n      });\n    },\n    /**\r\n     * 删除\r\n     **/\n    del: function del() {\n      var _this11 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.id;\n      });\n      var deleteConfig = {\n        method: 'DELETE',\n        url: \"/udsSystem/\".concat(ids, \"/delete\"),\n        data: {}\n      };\n      this.loadingdel = true;\n      this.$ajax(deleteConfig).then(function (resp) {\n        _this11.loadingdel = false;\n        _this11.search();\n      });\n    }\n  },\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    this.querySelectType();\n    // this.init()\n  }\n};",{"version":3,"names":["utils","common","RESOURCE_PATH","props","transData","type","Object","default","_default","mixins","data","_this","formBean","formBean3","formBean2","dbControlList","dbControlName","allStop","show","allStart","loadingStatus","loadingStatus2","loadingdel","request","delReq","method","url","addReq","statusList","value","label","strategyList","gridColumns","width","align","title","key","minWidth","render","h","params","strategy","row","select","str","forEach","data1","selectPro","str1","str0","length","substring","style","display","overflow","textOverflow","whiteSpace","domProps","on","click","e","stopPropagation","_ref","column","index","size","marginRight","platform","sys","systems","dbControl","serverRoleNameGroup","queryCache","currentPage","page","current","pageSize","$emit","assign","gridData","systemData","platformData","platformData2","platformData3","selection","total","opt","ruleValidate","methods","paramChange","param","mtable","queryPlatform","_this2","loadConfig","$ajax","then","resp","tmp","push","querySystem","_this3","$refs","refsystem","setQuery","filterMethod","option","toUpperCase","indexOf","init","search","getPlatformList","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","err","f","error","console","download","queryDbControlList","_this4","dicCode","rows","parseInt","dicValue","dicName","_this5","httpConfig","loading","usePlatform","usePlatformMsg","demand","allStartOpen","allStopOpen","allstop","_this6","$Message","warning","authps","status","allstart","_this7","clear","add","changePage","changePageSize","_this8","platformList","Array","from","Set","getSystemList","_this9","querySelectType","_this10","temp","dicKey","del","_this11","ids","id","deleteConfig","concat","mounted"],"sources":["src/view/spdb/systemsetting/platformConfig/Table.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div class=\"spdb-form\">\r\n\t\t\t<Form ref=\"systemForm\" :model=\"formBean\" :label-width=\"75\" :rules='ruleValidate'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<!--\r\n\t\t\t\t\t<Col span=\"6\">\r\n\t\t\t\t\t\t<Form-Item prop=\"param\" label=\"配置选择\">\r\n\t\t\t\t\t\t\t<Select filterable placeholder=\"请选择执行节点或者调度系统\" v-model=\"formBean.param\" style=\"width:190px\" @on-change=\"paramChange()\">\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in statusList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<Form-Item label=\"调度系统并发配置\" label-width=\"110\">\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>-->\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem prop=\"platform\" label=\"平台名\">\r\n\t\t\t\t\t\t<Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n\t\t\t\t\t\t\t<Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n\t\t\t\t\t\t\t  <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t  </Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n          <Col span=\"4\">\r\n            <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n          </Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"是否启用\" >\r\n            \t<Select filterable v-model=\"formBean.usePlatform\" clearable>\r\n                <Option value=\"1\">启用</Option>\r\n                <Option value=\"0\">禁用</Option>\r\n\t\t\t\t\t\t  </Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t\t<Modal id=\"allStart\"\r\n\t\t\tv-model=\"allStart.show\"\r\n\t\t\ttitle=\"全平台恢复并发\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form  ref=\"allStartForm\" :label-width=\"150\"  inline>\r\n\t\t\t\t\t<!--\t<Row>\r\n\t\t\t\t\t\t\t<FormItem prop=\"maxRunJob\" label=\"最大运行作业数默认值\">\r\n\t\t\t\t\t\t\t<input type=\"number\" style=\"border-radius:5px\" v-model=\"formBean2.maxRunJob\"  oninput=\"if(value<0)value=0\" />\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>-->\r\n\t\t\t\t\t\t<Row>\r\n              <Col span=\"9\">\r\n                <FormItem style='width:100%'  label=\"恢复并发平台\">\r\n                  <Select filterable v-model=\"formBean2.platform\" clearable>\r\n                    <Option v-for=\"item in platformData2\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"9\">\r\n                    <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean2.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n                </Col>\r\n\t\t\t\t\t\t\t<Button style='width:10%' type=\"primary\" @click=\"allstart\" :loading=\"loadingStatus\">\r\n\t\t\t\t\t\t\t\t{{ loadingStatus ? 'Loading' : '恢复' }}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<Modal id=\"allStop\"\r\n\t\t\tv-model=\"allStop.show\"\r\n\t\t\ttitle=\"全平台停止并发\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form  ref=\"allStopForm\" :label-width=\"150\"  inline>\r\n\t\t\t\t\t\t<Row>\r\n             <Col span=\"9\">\r\n                <FormItem style='width:100%'  label=\"停止并发平台:\">\r\n                  <Select filterable v-model=\"formBean3.platform\" clearable>\r\n                    <Option v-for=\"item in platformData3\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"9\">\r\n                    <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean3.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n                </Col>\r\n\t\t\t\t\t\t\t\t<Button style='width:10%' type=\"primary\" @click=\"allstop\" :loading=\"loadingStatus2\">\r\n\t\t\t\t\t\t\t\t\t{{ loadingStatus2 ? 'Loading' : '停止' }}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"demand\">查询</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add\">新增</Button>\r\n      <Button type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</Button>\r\n\t\t\t<!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button>\r\n\t\t\t<Button type=\"primary\"  @click=\"allStartOpen\" :requestConfig=request.delReq>全平台恢复并发 </Button>\r\n\t\t\t<Button type=\"primary\"  @click=\"allStopOpen\" :requestConfig=request.delReq>全平台停止并发</Button> -->\r\n\t\t</div>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<!-- <Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\"></Table> -->\r\n      <Table :loading=\"loading\" :columns=\"gridColumns\" :data=\"gridData\" @on-selection-change=\"select\"></Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport common from '@/mixins/common'\r\n\r\nconst RESOURCE_PATH = '/udsSystem'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      formBean3: {},\r\n      formBean2: {},\r\n      dbControlList: [],\r\n      dbControlName: {},\r\n      allStop: {\r\n        show: false\r\n      },\r\n      allStart: {\r\n        show: false\r\n      },\r\n      loadingStatus: false,\r\n      loadingStatus2: false,\r\n      loadingdel: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      statusList: [\r\n        {\r\n          value: '1',\r\n          label: '执行节点并发配置'\r\n        },\r\n        {\r\n          value: '0',\r\n          label: '调度系统并发配置'\r\n        }\r\n\r\n      ],\r\n      strategyList: [],\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '逻辑集群',\r\n          key: 'serverRoleNameGroup',\r\n          minWidth: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('Span', {}, this.dbControlName[row.serverRoleNameGroup])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '脚本信号文件保存天数',\r\n        // \tkey: 'dataKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '脚本日志保存天数',\r\n        // \tkey: 'logKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '记录保存天数',\r\n        // \tkey: 'recordKeepDay',\r\n        // },\r\n\r\n        // {\r\n        //   title: '该平台最大运行作业数',\r\n        //   key: 'sumMax',\r\n        //   width: 160,\r\n        //   align: 'center'\r\n        // },\r\n        {\r\n          title: '最大运行作业数',\r\n          key: 'maxRunJob',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '分发策略',\r\n          key: 'select',\r\n          align: 'center',\r\n          minWidth: 150,\r\n          render: (h, params) => {\r\n            let strategy = params.row.select\r\n            let str = ''\r\n            this.strategyList.forEach(data1 => {\r\n              if (data1.value == strategy) {\r\n                str = data1.label\r\n              }\r\n            })\r\n            if (str == '') {\r\n              str = strategy\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        },\r\n        {\r\n          title: '策略参数',\r\n          key: 'selectPro',\r\n          // width: 200,\r\n          minWidth: 200,\r\n          // 超出长度省略符号\r\n          render: (h, params) => {\r\n            let str = params.row.selectPro\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1 // params.row.strategyPro,\r\n\r\n                },\r\n                on: {\r\n                  click: (e) => {\r\n                    e.stopPropagation()\r\n                  }\r\n                }\r\n              }, params.row.selectPro)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '是否启用平台数据',\r\n          key: 'usePlatformMsg',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '描述',\r\n          key: 'des',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 100,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let platform = row.platform\r\n                    let sys = row.systems\r\n                    let dbControl = row.serverRoleNameGroup\r\n                    let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                    this.$emit('switch', Object.assign({ platform: platform, sys: sys, dbControl: dbControl, data: row }, queryCache)) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      platformData2: [],\r\n      platformData3: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    paramChange () {\r\n      if (this.formBean.param == 1) {\r\n        this.$emit('switch', { mtable: 'true' })\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //\tthis.formBean.system = \"\";\r\n      //\tthis.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      // this.queryDbControlList()\r\n      this.search()\r\n      this.getPlatformList()\r\n      // this.queryPlatform()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    queryDbControlList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'db_control' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.dbControlList = []\r\n        resp.data.rows.forEach(data => {\r\n          this.dbControlName[parseInt(data.dicValue)] = data.dicName\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.dbControlList.push(tmp)\r\n        })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      this.selection = []\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.currentPage = this.page.current\r\n      // params.pageSize = this.page.size\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          resp.data.rows.forEach(data1 => {\r\n            if (data1.usePlatform) {\r\n              data1.usePlatform = '1'\r\n              data1.usePlatformMsg = '启用'\r\n            } else {\r\n              data1.usePlatform = '0'\r\n              data1.usePlatformMsg = '禁用'\r\n            }\r\n            // if (data1.strategy == 0) {\r\n            //   data1.strategy = '普通策略'\r\n            // } else {\r\n            //   // alert(data1.strategy);\r\n            //   data1.strategy = '指定机器分发机器'\r\n            // }\r\n\r\n            data1.strategy = data1.select + ''\r\n          })\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    allStartOpen () {\r\n      this.allStart.show = true\r\n    },\r\n    allStopOpen () {\r\n      this.allStop.show = true\r\n    },\r\n    allstop () {\r\n      // this.$refs.allStopForm.validate(valid => {\r\n      // if(!valid) return;\r\n      if (!this.formBean3.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean3)\r\n      params.authps = this.formBean3.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean3.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStop'\r\n      }\r\n      this.loadingStatus2 = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus2 = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStop.show = false\r\n            this.search()\r\n          }\r\n        })\r\n      // });\r\n    },\r\n    allstart () {\r\n      // if(!this.formBean2.maxRunJob){\r\n      // \tthis.$Message.warning(\"请输入默认值\");\r\n      // \treturn ;\r\n      // }\r\n      if (!this.formBean2.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean2)\r\n      params.authps = this.formBean2.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean2.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStart'\r\n      }\r\n      this.loadingStatus = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStart.show = false\r\n            this.search()\r\n          }\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch', null)\r\n    },\r\n\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    // harrier getPlatformList\r\n    getPlatformList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          let platformList = []\r\n          resp.data.forEach(data => {\r\n            platformList.push(data.platform)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          platformList = Array.from(new Set(platformList))\r\n          this.platformData = []\r\n          this.platformData2 = []\r\n          this.platformData3 = []\r\n          platformList.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          this.search()\r\n        })\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              if (this.formBean.platform === data.platform && data.systems !== '*') {\r\n                let tmp = {}\r\n                tmp.value = data.systems\r\n                tmp.label = data.systems\r\n                this.systemData.push(tmp)\r\n              }\r\n            })\r\n          })\r\n      }\r\n    },\r\n    // harrier test end\r\n    querySelectType () {\r\n      this.strategyList = []\r\n      let params = { dicCode: 'selectType' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicValue\r\n              temp.value = parseInt(data1.dicKey)\r\n              temp.label = data1.dicValue\r\n              this.strategyList.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del: function () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/udsSystem/${ids}/delete`,\r\n        data: {}\r\n      }\r\n      this.loadingdel = true\r\n      this.$ajax(deleteConfig)\r\n        .then(resp => {\r\n          this.loadingdel = false\r\n          this.search()\r\n        })\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.querySelectType()\r\n    // this.init()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}