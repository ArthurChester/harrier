{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\user\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\user\\Table.vue","mtime":1681468306531},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport common from '@/mixins/common';\nimport store from '@/store/index';\nimport utils from '@/common/utils';\nvar enums = {\n  state: [{\n    key: '1',\n    val: '启用'\n  }, {\n    key: '0',\n    val: '停用'\n  }]\n};\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  mixins: [common],\n  data: function data() {\n    var _this = this;\n    return {\n      cUserData: {\n        platformData: [],\n        systemData: [],\n        roleData: {}\n      },\n      searchBean: {},\n      loadingdel: false,\n      loadingactive: false,\n      loadinginactive: false,\n      loadingreset: false,\n      platformDlg: {\n        show: false,\n        platformData: [],\n        targetData: []\n      },\n      systemDlg: {\n        show: false,\n        systemData: [],\n        targetData: []\n      },\n      gridTitles: [\n      /* {\r\n      type: 'index',\r\n      title: ' ',\r\n      width: 80,\r\n      align: 'center'\r\n      }, */\n      {\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      }, {\n        title: '用户名',\n        key: 'userCode'\n      }, {\n        title: '中文名',\n        key: 'userName'\n      }, {\n        title: '工号',\n        key: 'empId'\n      }, {\n        title: '状态',\n        key: 'isEnable',\n        render: function render(h, params) {\n          var status = {\n            true: '启用',\n            false: '停用'\n          };\n          return h('span', {}, status[params.row.isEnable]);\n        }\n      }, {\n        title: '操作',\n        width: 320,\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'info',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                var userId = params.row.userId;\n                _this.checkAuth('update', userId);\n              }\n            }\n          }, '修改'), h('Button', {\n            props: {\n              type: 'info',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.roleDlg.userId = params.row.userId;\n                _this.roleDlg.userCode = params.row.userCode;\n                _this.showRoleDlg();\n              }\n            }\n          }, '分配角色'),\n          // h('Button', {\n          //   props: {\n          //     size: 'small',\n          //     type: 'info'\n          //   },\n          //   style: {\n          //     marginRight: '5px'\n          //   },\n          //   on: {\n          //     click: () => {\n          //       // this.currentSelect = {roleId: params.row.role_id, roleName: params.row.role_chname};\n          //       this.roleDlg.userId = params.row.userId\n          //       this.roleDlg.userCode = params.row.userCode\n          //       this.showPlatformDlg()\n          //     }\n          //   }\n          // }, '分配平台'),\n          h('Button', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                // this.currentSelect = {roleId: params.row.role_id, roleName: params.row.role_chname};\n                _this.roleDlg.userId = params.row.userId;\n                _this.roleDlg.userCode = params.row.userCode;\n                _this.showSystemDlg();\n              }\n            }\n          }, '分配平台')]);\n        }\n      }],\n      gridData: [],\n      enums: enums,\n      roleDlg: {\n        show: false,\n        userId: '',\n        userCode: '',\n        roleData: [],\n        targetData: []\n      }\n    };\n  },\n  methods: {\n    init: function init() {\n      if (this.transData.currentPage) {\n        this.searchBean = this.transData.searchBean;\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      this.search();\n    },\n    search: function search() {\n      var _this2 = this;\n      this.selection = [];\n      var params = Object.assign({}, this.searchBean);\n      if (!params.userCode || params.userCode === '') {\n        delete params.userCode;\n      }\n      params.current = this.page.current;\n      params.size = this.page.size;\n      var httpConfig = {\n        method: 'GET',\n        url: '/user',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this2.gridData = resp.data.records;\n        _this2.page.total = resp.data.total;\n      }).then(function (resp) {\n        _this2.loading = false;\n      }).catch(function (error) {\n        _this2.loading = false;\n        console.log(error);\n      });\n    },\n    demand: function demand() {\n      this.page.current = 1;\n      this.search();\n    },\n    clear: function clear() {\n      this.searchBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    add: function add() {\n      this.$emit('exit', null);\n    },\n    del: function del() {\n      var _this3 = this;\n      var userIds = Array.from(this.selection, function (e) {\n        return e.userId;\n      });\n      var deleteConfig = {\n        method: 'DELETE',\n        url: \"/user/\".concat(userIds, \"/delete\"),\n        data: {}\n      };\n      var authSystems = 'ROLE_ADMIN'; // store.getters.getSystems\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\n        if (userIds.length > 1) {\n          this.$Message.warning('请选择单个用户，仅系统管理员支持批量操作');\n        } else {\n          var msconfig = {\n            url: 'resource/metasystem',\n            method: 'GET',\n            params: {\n              userId: userIds[0]\n            }\n          };\n          this.$ajax(msconfig).then(function (res) {\n            if (res.data) {\n              for (var i = 0; i < res.data.length; i++) {\n                if (authSystems.indexOf(res.data[i]) == -1 && res.data[i] != 'nullnull') {\n                  _this3.$Message.warning('该用户具有其他平台应用的权限，仅系统管理员可以操作该用户');\n                  return;\n                }\n              }\n              var param = authSystems.find(function (item) {\n                if (item.indexOf('*') > -1) {\n                  return item;\n                }\n              });\n              deleteConfig.data.authps = param;\n              _this3.loadingdel = true;\n              _this3.$ajax(deleteConfig).then(function (resp) {\n                _this3.loadingdel = false;\n                _this3.search();\n              });\n            }\n          });\n        }\n      } else {\n        this.loadingdel = true;\n        this.$ajax(deleteConfig).then(function (resp) {\n          _this3.loadingdel = false;\n          _this3.search();\n        });\n      }\n    },\n    active: function active() {\n      var _this4 = this;\n      var userIds = Array.from(this.selection, function (e) {\n        return e.userId;\n      });\n      var params = {\n        userIds: userIds.toString(),\n        isEnable: true\n      };\n      var activeConfig = {\n        method: 'POST',\n        url: \"/user/\".concat(userIds, \"/updateEnable\"),\n        data: params\n      };\n      this.loadingactive = true;\n      this.$ajax(activeConfig).then(function (resp) {\n        _this4.loadingactive = false;\n        _this4.search();\n      });\n    },\n    inactive: function inactive() {\n      var _this5 = this;\n      var userIds = Array.from(this.selection, function (e) {\n        return e.userId;\n      });\n      var params = {\n        userIds: userIds.toString(),\n        isEnable: false\n      };\n      var inactiveConfig = {\n        method: 'POST',\n        url: \"/user/\".concat(userIds, \"/updateEnable\"),\n        data: params\n      };\n      this.loadinginactive = true;\n      this.$ajax(inactiveConfig).then(function (resp) {\n        _this5.loadinginactive = false;\n        _this5.search();\n      });\n    },\n    reset: function reset() {\n      var _this6 = this;\n      var userIds = Array.from(this.selection, function (e) {\n        return e.userId;\n      });\n      var params = {\n        userIds: userIds.toString()\n      };\n      var resetConfig = {\n        method: 'POST',\n        url: \"/user/resetPwd\",\n        data: params\n      };\n      this.loadingreset = true;\n      this.$ajax(resetConfig).then(function (resp) {\n        _this6.loadingreset = false;\n        _this6.search();\n      });\n    },\n    checkAuth: function checkAuth(opName, userId) {\n      var _this7 = this;\n      var authSystems = 'ROLE_ADMIN'; // store.getters.getSystems\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\n        var msconfig = {\n          url: 'resource/metasystem',\n          method: 'GET',\n          params: {\n            userId: userId\n          }\n        };\n        this.$ajax(msconfig).then(function (res) {\n          if (res.data) {\n            for (var i = 0; i < res.data.length; i++) {\n              if (authSystems.indexOf(res.data[i]) == -1 && res.data[i] != 'nullnull') {\n                _this7.$Message.warning('该用户具有其他平台应用的权限，仅系统管理员可以操作该用户');\n                return;\n              }\n            }\n            if (opName == 'showRoleDlg') {\n              _this7.showRoleDlgReal();\n            } else if (opName == 'showPlatformDlg') {\n              _this7.showPlatformDlgReal();\n            } else if (opName == 'showSystemDlg') {\n              _this7.showSystemDlgReal();\n            } else if (opName == 'update') {\n              var queryCache = {\n                searchBean: _this7.searchBean,\n                currentPage: _this7.page.current,\n                pageSize: _this7.page.size\n              };\n              _this7.$emit('exit', Object.assign({\n                id: userId\n              }, queryCache));\n            }\n          }\n        });\n      } else {\n        if (opName == 'showRoleDlg') {\n          this.showRoleDlgReal();\n        } else if (opName == 'showPlatformDlg') {\n          this.showPlatformDlgReal();\n        } else if (opName == 'showSystemDlg') {\n          this.showSystemDlgReal();\n        } else if (opName == 'update') {\n          var queryCache = {\n            searchBean: this.searchBean,\n            currentPage: this.page.current,\n            pageSize: this.page.size\n          };\n          this.$emit('exit', Object.assign({\n            id: userId\n          }, queryCache));\n        }\n      }\n    },\n    showRoleDlg: function showRoleDlg() {\n      this.checkAuth('showRoleDlg', this.roleDlg.userId);\n    },\n    showPlatformDlg: function showPlatformDlg() {\n      this.checkAuth('showPlatformDlg', this.roleDlg.userId);\n    },\n    showSystemDlg: function showSystemDlg() {\n      this.checkAuth('showSystemDlg', this.roleDlg.userId);\n    },\n    showRoleDlgReal: function showRoleDlgReal() {\n      var _this8 = this;\n      this.roleDlg.show = true;\n      this.roleDlg.roleData = [];\n      this.roleDlg.targetData = [];\n      // 初始化穿梭框\n      var allRoleConfig = {\n        method: 'GET',\n        url: '/role',\n        params: {\n          currentPage: 1,\n          pageSize: 999\n        }\n      };\n      this.$ajax(allRoleConfig).then(function (resp) {\n        // 获取该用户该有的角色\n        var rolesConfig = {\n          method: 'GET',\n          url: \"/role/\".concat(_this8.roleDlg.userCode, \"/list\")\n        };\n        _this8.$ajax(rolesConfig).then(function (res) {\n          _this8.roleDlg.targetData = Array.from(res.data, function (e) {\n            return e.roleId;\n          });\n          if (resp.data) {\n            resp.data.records.forEach(function (role) {\n              var temp = {};\n              temp.key = role.roleId;\n              temp.label = role.roleName;\n              temp.description = role.roleName;\n              _this8.roleDlg.roleData.push(temp);\n            });\n          }\n        });\n      });\n    },\n    showPlatformDlgReal: function showPlatformDlgReal() {\n      var _this9 = this;\n      this.platformDlg = {\n        show: true,\n        platformData: [],\n        targetData: []\n      };\n      // 初始化穿梭框\n      var allResConfig = {\n        method: 'GET',\n        url: '/udsSystem/listQuery'\n        // params: { currentPage: 1, pageSize: 999 }\n      };\n\n      this.$ajax(allResConfig).then(function (resp) {\n        var curdata = [];\n        var uobj = {};\n        if (resp.data) {\n          var sdata = resp.data;\n          for (var i = 0; i < sdata.length; i++) {\n            if (uobj.hasOwnProperty(sdata[i].platform)) {} else {\n              uobj[sdata[i].platform] = '1';\n              curdata.push(sdata[i]);\n            }\n          }\n        }\n        // 获取该角色该有的资源\n        var roleResConfig = {\n          method: 'GET',\n          url: \"/user/\".concat(_this9.roleDlg.userId, \"/platform/permiss\")\n        };\n        _this9.$ajax(roleResConfig).then(function (res) {\n          _this9.platformDlg.targetData = Array.from(res.data, function (e) {\n            return e.id;\n          });\n          var authSystems = 'ROLE_ADMIN'; // store.getters.getSystems\n          if (authSystems.indexOf('ROLE_ADMIN') == -1) {\n            _this9.platformDlg.platformData = _this9.cUserData.platformData;\n          } else {\n            if (resp.data) {\n              curdata.forEach(function (platform) {\n                var temp = {};\n                temp.key = platform.id;\n                temp.method = '';\n                temp.label = platform.etlPlatform;\n                // temp.description = resource.remark;\n\n                _this9.platformDlg.platformData.push(temp);\n              });\n            }\n          }\n        });\n      });\n    },\n    showSystemDlgReal: function showSystemDlgReal() {\n      var _this10 = this;\n      this.systemDlg = {\n        show: true,\n        systemTreeData: []\n      };\n      // 初始化应用\n      var systemConfig = {\n        method: 'GET',\n        url: '/udsSystem/listQuery'\n      };\n      this.$ajax(systemConfig).then(function (resp) {\n        var userBySystemConfig = {\n          method: 'GET',\n          url: \"/user/\".concat(_this10.roleDlg.userId, \"/platform/permiss\")\n        };\n        _this10.$ajax(userBySystemConfig).then(function (res) {\n          var tree = getSystemTree(resp.data, res.data);\n          _this10.systemDlg.systemTreeData = tree.systems; // 把处理好的数据赋值给组件\n        });\n      });\n      // 转换树形结构\n      function getSystemTree(udsSystems, checkedSystems) {\n        var systemMsgs = Array.from(checkedSystems, function (e) {\n          return e.systems === '*' ? e.platform : e.platform + '-' + e.systems;\n        });\n        var result = {\n          systems: [],\n          checked: true\n        };\n        udsSystems.forEach(function (udsSystem) {\n          if (udsSystem.systems === '*') {\n            var temp = {};\n            temp.Key = udsSystem.id;\n            temp.title = udsSystem.platform;\n            temp.expand = true;\n            // const t = getSystemTree(menu.children, checkedMenus)\n            // temp.children = t.menus\n            // temp.checked = (checkedSystems.includes(temp.title) && temp.children.every(e => e.checked))\n            temp.checked = systemMsgs.includes(temp.title);\n            temp.children = [];\n            // 权限\n            temp.permissions = '';\n            var sysPermissions = checkedSystems.find(function (item) {\n              return item.platform === udsSystem.platform && item.systems === udsSystem.systems;\n            });\n            if (sysPermissions && sysPermissions.permissions) {\n              temp.permissions = sysPermissions.permissions;\n            }\n            result.systems.push(temp);\n          }\n        });\n        udsSystems.forEach(function (udsSystem) {\n          if (udsSystem.systems !== '*') {\n            var temp = {};\n            temp.Key = udsSystem.id;\n            temp.title = udsSystem.platform + '-' + udsSystem.systems;\n            temp.expand = true;\n            temp.checked = systemMsgs.includes(temp.title);\n            // 权限\n            temp.permissions = '';\n            var sysPermissions = checkedSystems.find(function (item) {\n              return item.platform === udsSystem.platform && item.systems === udsSystem.systems;\n            });\n            if (sysPermissions && sysPermissions.permissions) {\n              temp.permissions = sysPermissions.permissions;\n            }\n            var platform = result.systems.find(function (item) {\n              return item.title === udsSystem.platform;\n            });\n            if (platform.permissions && (platform.permissions === 'W' || temp.permissions === '')) {\n              temp.permissions = platform.permissions;\n            }\n            platform.children.push(temp);\n          }\n        });\n        return result;\n      }\n    },\n    renderContent: function renderContent(h, _ref) {\n      var root = _ref.root,\n        node = _ref.node,\n        data = _ref.data;\n      return h('span', {\n        style: {\n          display: 'inline-block',\n          width: '100%'\n        }\n      }, [h('span', [h('span', data.title)]), h('span', {\n        style: {\n          display: 'inline-block',\n          float: 'right',\n          marginRight: '32px'\n        }\n      }, [h('RadioGroup', {\n        props: {\n          value: data.permissions,\n          label: '读/写'\n        },\n        style: {\n          width: '100px'\n        },\n        on: {\n          'on-change': function onChange(val) {\n            data.permissions = val;\n          }\n        }\n      }, [h('Radio', {\n        props: {\n          // value: 'R',\n          // label: '读'\n          label: 'R'\n        },\n        style: {\n          width: '34px'\n        }\n      }, '读'), h('Radio', {\n        props: {\n          // value: 'W',\n          // label: '写'\n          label: 'W'\n        },\n        style: {\n          width: '14px'\n        }\n      }, '写')])])]);\n    },\n    checkChange: function checkChange(data, checkData) {\n      if (checkData.checked) {\n        if (checkData.permissions && checkData.permissions !== '') {\n          if (checkData.children) {\n            checkData.children.forEach(function (children) {\n              children.permissions = checkData.permissions;\n            });\n          }\n        } else {\n          checkData.permissions = 'R';\n          if (checkData.children) {\n            checkData.children.forEach(function (children) {\n              children.permissions = 'R';\n            });\n          }\n        }\n      } else {\n        checkData.permissions = '';\n        if (checkData.children) {\n          checkData.children.forEach(function (children) {\n            children.permissions = '';\n          });\n        }\n      }\n    },\n    recusiveNode: function recusiveNode(needAdd, node, flatState) {\n      if (typeof node.parent === 'undefined') {} else {\n        var _iterator = _createForOfIteratorHelper(needAdd),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var t = _step.value;\n            if (t.nodeKey === node.parent) {\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        needAdd.push(flatState[node.parent].node);\n        this.recusiveNode(needAdd, flatState[node.parent], flatState);\n      }\n    },\n    roleOk: function roleOk() {\n      var roleIds = this.roleDlg.targetData;\n      var addRoles = {\n        method: 'POST',\n        url: \"/user/\".concat(this.roleDlg.userId, \"/role\"),\n        data: {\n          'userId': this.roleDlg.userId,\n          'roleIds': roleIds.toString()\n        }\n      };\n      this.$ajax(addRoles);\n    },\n    platformOk: function platformOk() {\n      var platformIds = this.platformDlg.targetData;\n      var authSystems = 'ROLE_ADMIN'; // store.getters.getSystems\n      var param = authSystems.find(function (item) {\n        if (item.indexOf('*') > -1) {\n          return item;\n        }\n      });\n      var addResources = {\n        method: 'POST',\n        url: \"/user/\".concat(this.roleDlg.userId, \"/platform\"),\n        data: {\n          'platformIds': platformIds.toString(),\n          'authps': param\n        }\n      };\n      this.$ajax(addResources);\n    },\n    systemOk: function systemOk() {\n      var _this11 = this;\n      var checkeds = this.$refs['systemTree'].getCheckedNodes();\n      if (!checkeds || checkeds.length === 0) {\n        this.$Modal.error({\n          title: '提示',\n          content: '未选择平台！！'\n        });\n        return;\n      }\n      // let flatState = this.$refs['systemTree'].flatState\n      // for (const t of checkeds) {\n      //   this.recusiveNode(checkeds, flatState[t.nodeKey], flatState)\n      // }\n      // const systemIds = Array.from(checkeds, e => e.Key)\n      var permissList = [];\n      var _iterator2 = _createForOfIteratorHelper(checkeds),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var t = _step2.value;\n          var userSystems = {};\n          userSystems.userId = this.roleDlg.userId;\n          userSystems.systemsId = t.Key;\n          if (t.permissions === undefined || t.permissions === '') {\n            t.permissions = 'R';\n          }\n          userSystems.permissions = t.permissions;\n          permissList.push(userSystems);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var addPermiss = {\n        method: 'POST',\n        url: \"/user/\".concat(this.roleDlg.userId, \"/allot/permiss\"),\n        data: permissList,\n        contentType: 'json'\n      };\n      this.$ajax(addPermiss).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          if (_this11.roleDlg.userId === _this11.$store.getters.getUserId) {\n            utils.getUserPlatform(_this11.$store.getters.getUserId);\n          }\n        }\n      });\n    },\n    filterRole: function filterRole(data, query) {\n      return data.label.indexOf(query) > -1;\n    },\n    handleChange: function handleChange(newTarget) {\n      this.roleDlg.targetData = newTarget;\n    },\n    filterResource: function filterResource(data, query) {\n      return data.label.indexOf(query) > -1;\n    },\n    renderResource: function renderResource(item) {\n      return \"<span class=\\\"resource-label\\\">\".concat(item.label, \"</span>\\n\\t\\t\\t\\t\\t<span class=\\\"resource-method\\\">\").concat(item.method, \"</span>\");\n    },\n    platformHandleChange: function platformHandleChange(newTarget) {\n      this.platformDlg.targetData = newTarget;\n    },\n    systemHandleChange: function systemHandleChange(newTarget) {\n      this.systemDlg.targetData = newTarget;\n    }\n  },\n  mounted: function mounted() {\n    //\n  },\n  computed: {\n    resourceStyle: function resourceStyle() {\n      return {\n        width: '250px',\n        height: '300px'\n      };\n    },\n    systemDlgNew: function systemDlgNew() {\n      if (this.systemDlg.systemTreeData) {\n        return JSON.parse(JSON.stringify(this.systemDlg.systemTreeData));\n      }\n    }\n  },\n  watch: {\n    systemDlgNew: {\n      handler: function handler(newVal, oldVal) {\n        var _this12 = this;\n        var _loop = function _loop(i) {\n          if (oldVal[i] && newVal[i].permissions && oldVal[i].permissions && newVal[i].permissions !== oldVal[i].permissions) {\n            _this12.systemDlg.systemTreeData[i].children.forEach(function (children) {\n              if (children.checked) {\n                children.permissions = newVal[i].permissions;\n              }\n            });\n          }\n        };\n        for (var i = 0; i < newVal.length; i++) {\n          _loop(i);\n        }\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"names":["common","store","utils","enums","state","key","val","props","transData","type","Object","default","_default","mixins","data","_this","cUserData","platformData","systemData","roleData","searchBean","loadingdel","loadingactive","loadinginactive","loadingreset","platformDlg","show","targetData","systemDlg","gridTitles","width","align","title","render","h","params","status","true","false","row","isEnable","size","style","marginRight","on","click","userId","checkAuth","roleDlg","userCode","showRoleDlg","showSystemDlg","gridData","methods","init","currentPage","page","current","pageSize","search","_this2","selection","assign","httpConfig","method","url","$ajax","then","resp","records","total","loading","catch","error","console","log","demand","clear","add","$emit","del","_this3","userIds","Array","from","e","deleteConfig","concat","authSystems","indexOf","length","$Message","warning","msconfig","res","i","param","find","item","authps","active","_this4","toString","activeConfig","inactive","_this5","inactiveConfig","reset","_this6","resetConfig","opName","_this7","showRoleDlgReal","showPlatformDlgReal","showSystemDlgReal","queryCache","id","showPlatformDlg","_this8","allRoleConfig","rolesConfig","roleId","forEach","role","temp","label","roleName","description","push","_this9","allResConfig","curdata","uobj","sdata","hasOwnProperty","platform","roleResConfig","etlPlatform","_this10","systemTreeData","systemConfig","userBySystemConfig","tree","getSystemTree","systems","udsSystems","checkedSystems","systemMsgs","result","checked","udsSystem","Key","expand","includes","children","permissions","sysPermissions","renderContent","_ref","root","node","display","float","value","onChange","checkChange","checkData","recusiveNode","needAdd","flatState","parent","_iterator","_createForOfIteratorHelper","_step","s","n","done","t","nodeKey","err","f","roleOk","roleIds","addRoles","platformOk","platformIds","addResources","systemOk","_this11","checkeds","$refs","getCheckedNodes","$Modal","content","permissList","_iterator2","_step2","userSystems","systemsId","undefined","addPermiss","contentType","$store","getters","getUserId","getUserPlatform","filterRole","query","handleChange","newTarget","filterResource","renderResource","platformHandleChange","systemHandleChange","mounted","computed","resourceStyle","height","systemDlgNew","JSON","parse","stringify","watch","handler","newVal","oldVal","_this12","_loop","deep"],"sources":["src/view/spdb/authority/user/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form :label-width=\"80\">\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"用户名\">\r\n              <Input v-model=\"searchBean.userCode\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"用户状态\">\r\n              <Select filterable v-model=\"searchBean.isEnable\">\r\n                <Option v-for=\"item in enums.state\" :key=\"item.key\" :value=\"item.key\">{{item.val}}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div class=\"spdb-toolbar\">\r\n      <Button type=\"primary\" icon=\"ios-search\" @click=\"demand()\">搜索</Button>\r\n      <Button type=\"primary\" icon=\"md-close\" @click=\"clear()\">清空查询</Button>\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add()\">新增</Button>\r\n      <Button type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</Button>\r\n      <Button type=\"primary\" :loading=\"loadingactive\" :disabled=\"ctrlDisable\" icon=\"ios-play\" @click=\"active()\">启用</Button>\r\n      <Button type=\"primary\" :loading=\"loadinginactive\" :disabled=\"ctrlDisable\" icon=\"ios-pause\" @click=\"inactive()\">停用</Button>\r\n      <Button type=\"primary\" :loading=\"loadingreset\" :disabled=\"ctrlDisable\" icon=\"md-refresh\" @click=\"reset()\">重置密码</Button>\r\n    </div>\r\n\r\n    <div class=\"spdb-table\">\r\n      <Table :loading=\"loading\" :columns=\"gridTitles\" :data=\"gridData\" @on-selection-change=\"select\"></Table>\r\n    </div>\r\n\r\n    <div class=\"spdb-page\">\r\n      <Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n    </div>\r\n    <Modal\r\n    v-model=\"roleDlg.show\"\r\n    title=\"分配角色\"\r\n    @on-ok=\"roleOk\">\r\n      <div>\r\n        <div>\r\n          <Form :label-width=\"80\" inline>\r\n            <FormItem label=\"用户名称\">\r\n              <Input readonly v-model=\"roleDlg.userCode\"/>\r\n            </FormItem>\r\n          </Form>\r\n        </div>\r\n        <div>\r\n          <Transfer\r\n          :data=\"roleDlg.roleData\"\r\n          :target-keys=\"roleDlg.targetData\"\r\n          :titles=\"['所有角色', '当前角色']\"\r\n          :filter-method=\"filterRole\"\r\n          filterable\r\n          @on-change=\"handleChange\"></Transfer>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal\r\n      v-model=\"platformDlg.show\"\r\n      title=\"分配平台\"\r\n      width=\"600px\"\r\n      @on-ok=\"platformOk\">\r\n      <div>\r\n        <div>\r\n          <Form :label-width=\"80\" inline>\r\n            <FormItem label=\"用户名称\">\r\n              <Input readonly v-model=\"roleDlg.userCode\"/>\r\n            </FormItem>\r\n          </Form>\r\n        </div>\r\n        <div>\r\n        <Transfer\r\n        :data=\"platformDlg.platformData\"\r\n        :target-keys=\"platformDlg.targetData\"\r\n        :titles=\"['所有平台', '当前角色资源']\"\r\n        :list-style=\"resourceStyle\"\r\n        :filter-method=\"filterResource\"\r\n        :render-format=\"renderResource\"\r\n        filterable\r\n        @on-change=\"platformHandleChange\"></Transfer>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal\r\n      v-model=\"systemDlg.show\"\r\n      title=\"分配平台\"\r\n      width=\"600px\"\r\n      @on-ok=\"systemOk\">\r\n      <div>\r\n        <div>\r\n          <Form :label-width=\"80\" inline>\r\n            <FormItem label=\"用户名称\">\r\n              <Input readonly v-model=\"roleDlg.userCode\"/>\r\n            </FormItem>\r\n          </Form>\r\n        </div>\r\n        <div>\r\n          <Tree ref=\"systemTree\" @on-check-change=\"checkChange\" :render=\"renderContent\" :data=\"systemDlg.systemTreeData\" show-checkbox></Tree>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport common from '@/mixins/common'\r\nimport store from '@/store/index'\r\nimport utils from '@/common/utils'\r\nconst enums = {\r\n  state: [\r\n    {\r\n      key: '1',\r\n      val: '启用'\r\n    },\r\n    {\r\n      key: '0',\r\n      val: '停用'\r\n    }\r\n  ]\r\n}\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      cUserData: {\r\n        platformData: [],\r\n        systemData: [],\r\n        roleData: {}\r\n      },\r\n      searchBean: {},\r\n      loadingdel: false,\r\n      loadingactive: false,\r\n      loadinginactive: false,\r\n      loadingreset: false,\r\n      platformDlg: {\r\n        show: false,\r\n        platformData: [],\r\n        targetData: []\r\n      },\r\n      systemDlg: {\r\n        show: false,\r\n        systemData: [],\r\n        targetData: []\r\n      },\r\n      gridTitles: [\r\n        /* {\r\n        type: 'index',\r\n        title: ' ',\r\n        width: 80,\r\n        align: 'center'\r\n        }, */\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '用户名',\r\n          key: 'userCode'\r\n        },\r\n        {\r\n          title: '中文名',\r\n          key: 'userName'\r\n        },\r\n        {\r\n          title: '工号',\r\n          key: 'empId'\r\n        },\r\n        {\r\n          title: '状态',\r\n          key: 'isEnable',\r\n          render: (h, params) => {\r\n            const status = { true: '启用', false: '停用' }\r\n            return h('span', {}, status[params.row.isEnable])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 320,\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  type: 'info',\r\n                  size: 'small'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    const userId = params.row.userId\r\n                    this.checkAuth('update', userId)\r\n                  }\r\n                }\r\n              }, '修改'),\r\n              h('Button', {\r\n                props: {\r\n                  type: 'info',\r\n                  size: 'small'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.roleDlg.userId = params.row.userId\r\n                    this.roleDlg.userCode = params.row.userCode\r\n                    this.showRoleDlg()\r\n                  }\r\n                }\r\n              }, '分配角色'),\r\n              // h('Button', {\r\n              //   props: {\r\n              //     size: 'small',\r\n              //     type: 'info'\r\n              //   },\r\n              //   style: {\r\n              //     marginRight: '5px'\r\n              //   },\r\n              //   on: {\r\n              //     click: () => {\r\n              //       // this.currentSelect = {roleId: params.row.role_id, roleName: params.row.role_chname};\r\n              //       this.roleDlg.userId = params.row.userId\r\n              //       this.roleDlg.userCode = params.row.userCode\r\n              //       this.showPlatformDlg()\r\n              //     }\r\n              //   }\r\n              // }, '分配平台'),\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    // this.currentSelect = {roleId: params.row.role_id, roleName: params.row.role_chname};\r\n                    this.roleDlg.userId = params.row.userId\r\n                    this.roleDlg.userCode = params.row.userCode\r\n                    this.showSystemDlg()\r\n                  }\r\n                }\r\n              }, '分配平台')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      enums: enums,\r\n      roleDlg: {\r\n        show: false,\r\n        userId: '',\r\n        userCode: '',\r\n        roleData: [],\r\n        targetData: []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init: function () {\r\n      if (this.transData.currentPage) {\r\n        this.searchBean = this.transData.searchBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n\r\n      this.search()\r\n    },\r\n    search: function () {\r\n      this.selection = []\r\n      let params = Object.assign({}, this.searchBean)\r\n      if (!params.userCode || params.userCode === '') {\r\n        delete params.userCode\r\n      }\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/user',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n        .then(resp => {\r\n          this.loading = false\r\n        })\r\n        .catch(error => {\r\n          this.loading = false\r\n          console.log(error)\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    clear: function () {\r\n      this.searchBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    add: function () {\r\n      this.$emit('exit', null)\r\n    },\r\n    del: function () {\r\n      const userIds = Array.from(this.selection, e => e.userId)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/user/${userIds}/delete`,\r\n        data: {}\r\n      }\r\n      let authSystems = 'ROLE_ADMIN' // store.getters.getSystems\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        if (userIds.length > 1) {\r\n          this.$Message.warning('请选择单个用户，仅系统管理员支持批量操作')\r\n        } else {\r\n          const msconfig = {\r\n            url: 'resource/metasystem',\r\n            method: 'GET',\r\n            params: { userId: userIds[0] }\r\n          }\r\n          this.$ajax(msconfig)\r\n            .then(res => {\r\n              if (res.data) {\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                  if (authSystems.indexOf(res.data[i]) == -1 && res.data[i] != 'nullnull') {\r\n                    this.$Message.warning('该用户具有其他平台应用的权限，仅系统管理员可以操作该用户')\r\n                    return\r\n                  }\r\n                }\r\n                let param = authSystems.find(item => { if (item.indexOf('*') > -1) { return item } })\r\n                deleteConfig.data.authps = param\r\n                this.loadingdel = true\r\n                this.$ajax(deleteConfig)\r\n                  .then(resp => {\r\n                    this.loadingdel = false\r\n                    this.search()\r\n                  })\r\n              }\r\n            })\r\n        }\r\n      } else {\r\n        this.loadingdel = true\r\n        this.$ajax(deleteConfig)\r\n          .then(resp => {\r\n            this.loadingdel = false\r\n            this.search()\r\n          })\r\n      }\r\n    },\r\n    active: function () {\r\n      const userIds = Array.from(this.selection, e => e.userId)\r\n      let params = { userIds: userIds.toString(), isEnable: true }\r\n      const activeConfig = {\r\n        method: 'POST',\r\n        url: `/user/${userIds}/updateEnable`,\r\n        data: params\r\n      }\r\n      this.loadingactive = true\r\n      this.$ajax(activeConfig)\r\n        .then(resp => {\r\n          this.loadingactive = false\r\n          this.search()\r\n        })\r\n    },\r\n    inactive: function () {\r\n      const userIds = Array.from(this.selection, e => e.userId)\r\n      let params = { userIds: userIds.toString(), isEnable: false }\r\n      const inactiveConfig = {\r\n        method: 'POST',\r\n        url: `/user/${userIds}/updateEnable`,\r\n        data: params\r\n      }\r\n      this.loadinginactive = true\r\n      this.$ajax(inactiveConfig)\r\n        .then(resp => {\r\n          this.loadinginactive = false\r\n          this.search()\r\n        })\r\n    },\r\n    reset: function () {\r\n      const userIds = Array.from(this.selection, e => e.userId)\r\n      let params = { userIds: userIds.toString() }\r\n      const resetConfig = {\r\n        method: 'POST',\r\n        url: `/user/resetPwd`,\r\n        data: params\r\n      }\r\n      this.loadingreset = true\r\n      this.$ajax(resetConfig)\r\n        .then(resp => {\r\n          this.loadingreset = false\r\n          this.search()\r\n        })\r\n    },\r\n    checkAuth (opName, userId) {\r\n      let authSystems = 'ROLE_ADMIN' // store.getters.getSystems\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        const msconfig = {\r\n          url: 'resource/metasystem',\r\n          method: 'GET',\r\n          params: { userId: userId }\r\n        }\r\n        this.$ajax(msconfig)\r\n          .then(res => {\r\n            if (res.data) {\r\n              for (let i = 0; i < res.data.length; i++) {\r\n                if (authSystems.indexOf(res.data[i]) == -1 && res.data[i] != 'nullnull') {\r\n                  this.$Message.warning('该用户具有其他平台应用的权限，仅系统管理员可以操作该用户')\r\n                  return\r\n                }\r\n              }\r\n              if (opName == 'showRoleDlg') {\r\n                this.showRoleDlgReal()\r\n              } else if (opName == 'showPlatformDlg') {\r\n                this.showPlatformDlgReal()\r\n              } else if (opName == 'showSystemDlg') {\r\n                this.showSystemDlgReal()\r\n              } else if (opName == 'update') {\r\n                let queryCache = { searchBean: this.searchBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                this.$emit('exit', Object.assign({ id: userId }, queryCache))\r\n              }\r\n            }\r\n          })\r\n      } else {\r\n        if (opName == 'showRoleDlg') {\r\n          this.showRoleDlgReal()\r\n        } else if (opName == 'showPlatformDlg') {\r\n          this.showPlatformDlgReal()\r\n        } else if (opName == 'showSystemDlg') {\r\n          this.showSystemDlgReal()\r\n        } else if (opName == 'update') {\r\n          let queryCache = { searchBean: this.searchBean, currentPage: this.page.current, pageSize: this.page.size }\r\n          this.$emit('exit', Object.assign({ id: userId }, queryCache))\r\n        }\r\n      }\r\n    },\r\n    showRoleDlg: function () {\r\n      this.checkAuth('showRoleDlg', this.roleDlg.userId)\r\n    },\r\n    showPlatformDlg: function () {\r\n      this.checkAuth('showPlatformDlg', this.roleDlg.userId)\r\n    },\r\n    showSystemDlg: function () {\r\n      this.checkAuth('showSystemDlg', this.roleDlg.userId)\r\n    },\r\n    showRoleDlgReal: function () {\r\n      this.roleDlg.show = true\r\n      this.roleDlg.roleData = []\r\n      this.roleDlg.targetData = []\r\n      // 初始化穿梭框\r\n      const allRoleConfig = {\r\n        method: 'GET',\r\n        url: '/role',\r\n        params: { currentPage: 1, pageSize: 999 }\r\n      }\r\n      this.$ajax(allRoleConfig)\r\n        .then(resp => {\r\n          // 获取该用户该有的角色\r\n          const rolesConfig = {\r\n            method: 'GET', url: `/role/${this.roleDlg.userCode}/list`\r\n          }\r\n          this.$ajax(rolesConfig)\r\n            .then(res => {\r\n              this.roleDlg.targetData = Array.from(res.data, e => e.roleId)\r\n\r\n              if (resp.data) {\r\n                resp.data.records.forEach(role => {\r\n                  let temp = {}\r\n                  temp.key = role.roleId\r\n                  temp.label = role.roleName\r\n                  temp.description = role.roleName\r\n                  this.roleDlg.roleData.push(temp)\r\n                })\r\n              }\r\n            })\r\n        })\r\n    },\r\n    showPlatformDlgReal: function () {\r\n      this.platformDlg = {\r\n        show: true,\r\n        platformData: [],\r\n        targetData: []\r\n      }\r\n      // 初始化穿梭框\r\n      const allResConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n        // params: { currentPage: 1, pageSize: 999 }\r\n      }\r\n      this.$ajax(allResConfig)\r\n        .then(resp => {\r\n          let curdata = []\r\n          let uobj = {}\r\n          if (resp.data) {\r\n            let sdata = resp.data\r\n            for (let i = 0; i < sdata.length; i++) {\r\n              if (uobj.hasOwnProperty(sdata[i].platform)) {\r\n              } else {\r\n                uobj[sdata[i].platform] = '1'\r\n                curdata.push(sdata[i])\r\n              }\r\n            }\r\n          }\r\n          // 获取该角色该有的资源\r\n          const roleResConfig = {\r\n            method: 'GET',\r\n            url: `/user/${this.roleDlg.userId}/platform/permiss`\r\n          }\r\n          this.$ajax(roleResConfig)\r\n            .then(res => {\r\n              this.platformDlg.targetData = Array.from(res.data, e => e.id)\r\n              let authSystems = 'ROLE_ADMIN' // store.getters.getSystems\r\n              if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n                this.platformDlg.platformData = this.cUserData.platformData\r\n              } else {\r\n                if (resp.data) {\r\n                  curdata.forEach(platform => {\r\n                    let temp = {}\r\n                    temp.key = platform.id\r\n                    temp.method = ''\r\n                    temp.label = platform.etlPlatform\r\n                    // temp.description = resource.remark;\r\n\r\n                    this.platformDlg.platformData.push(temp)\r\n                  })\r\n                }\r\n              }\r\n            })\r\n        })\r\n    },\r\n    showSystemDlgReal: function () {\r\n      this.systemDlg = {\r\n        show: true,\r\n        systemTreeData: []\r\n      }\r\n      // 初始化应用\r\n      const systemConfig = { method: 'GET', url: '/udsSystem/listQuery' }\r\n      this.$ajax(systemConfig)\r\n        .then(resp => {\r\n          const userBySystemConfig = { method: 'GET', url: `/user/${this.roleDlg.userId}/platform/permiss` }\r\n          this.$ajax(userBySystemConfig)\r\n            .then(res => {\r\n              let tree = getSystemTree(resp.data, res.data)\r\n              this.systemDlg.systemTreeData = tree.systems // 把处理好的数据赋值给组件\r\n            })\r\n        })\r\n      // 转换树形结构\r\n      function getSystemTree (udsSystems, checkedSystems) {\r\n        const systemMsgs = Array.from(checkedSystems, e => e.systems === '*' ? e.platform : e.platform + '-' + e.systems)\r\n        let result = { systems: [], checked: true }\r\n        udsSystems.forEach(udsSystem => {\r\n          if (udsSystem.systems === '*') {\r\n            let temp = {}\r\n            temp.Key = udsSystem.id\r\n            temp.title = udsSystem.platform\r\n            temp.expand = true\r\n            // const t = getSystemTree(menu.children, checkedMenus)\r\n            // temp.children = t.menus\r\n            // temp.checked = (checkedSystems.includes(temp.title) && temp.children.every(e => e.checked))\r\n            temp.checked = systemMsgs.includes(temp.title)\r\n            temp.children = []\r\n            // 权限\r\n            temp.permissions = ''\r\n            let sysPermissions = checkedSystems.find(item => item.platform === udsSystem.platform && item.systems === udsSystem.systems)\r\n            if (sysPermissions && sysPermissions.permissions) {\r\n              temp.permissions = sysPermissions.permissions\r\n            }\r\n            result.systems.push(temp)\r\n          }\r\n        })\r\n        udsSystems.forEach(udsSystem => {\r\n          if (udsSystem.systems !== '*') {\r\n            let temp = {}\r\n            temp.Key = udsSystem.id\r\n            temp.title = udsSystem.platform + '-' + udsSystem.systems\r\n            temp.expand = true\r\n            temp.checked = systemMsgs.includes(temp.title)\r\n            // 权限\r\n            temp.permissions = ''\r\n            let sysPermissions = checkedSystems.find(item => item.platform === udsSystem.platform && item.systems === udsSystem.systems)\r\n            if (sysPermissions && sysPermissions.permissions) {\r\n              temp.permissions = sysPermissions.permissions\r\n            }\r\n            let platform = result.systems.find(item => item.title === udsSystem.platform)\r\n            if (platform.permissions && (platform.permissions === 'W' || temp.permissions === '')) {\r\n              temp.permissions = platform.permissions\r\n            }\r\n            platform.children.push(temp)\r\n          }\r\n        })\r\n        return result\r\n      }\r\n    },\r\n    renderContent (h, { root, node, data }) {\r\n      return h('span', {\r\n        style: {\r\n          display: 'inline-block',\r\n          width: '100%'\r\n        }\r\n      }, [\r\n        h('span', [\r\n          h('span', data.title)\r\n        ]),\r\n        h('span', {\r\n          style: {\r\n            display: 'inline-block',\r\n            float: 'right',\r\n            marginRight: '32px'\r\n          }\r\n        }, [\r\n          h('RadioGroup', {\r\n            props: {\r\n              value: data.permissions,\r\n              label: '读/写'\r\n            },\r\n            style: {\r\n              width: '100px'\r\n            },\r\n            on: {\r\n              'on-change': (val) => {\r\n                data.permissions = val\r\n              }\r\n            }\r\n          },\r\n          [\r\n            h('Radio', {\r\n              props: {\r\n                // value: 'R',\r\n                // label: '读'\r\n                label: 'R'\r\n              },\r\n              style: {\r\n                width: '34px'\r\n              }\r\n            }, '读'),\r\n            h('Radio', {\r\n              props: {\r\n                // value: 'W',\r\n                // label: '写'\r\n                label: 'W'\r\n              },\r\n              style: {\r\n                width: '14px'\r\n              }\r\n            }, '写')\r\n          ])\r\n        ])\r\n      ])\r\n    },\r\n    checkChange: function (data, checkData) {\r\n      if (checkData.checked) {\r\n        if (checkData.permissions && checkData.permissions !== '') {\r\n          if (checkData.children) {\r\n            checkData.children.forEach(children => {\r\n              children.permissions = checkData.permissions\r\n            })\r\n          }\r\n        } else {\r\n          checkData.permissions = 'R'\r\n          if (checkData.children) {\r\n            checkData.children.forEach(children => {\r\n              children.permissions = 'R'\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        checkData.permissions = ''\r\n        if (checkData.children) {\r\n          checkData.children.forEach(children => {\r\n            children.permissions = ''\r\n          })\r\n        }\r\n      }\r\n    },\r\n    recusiveNode: function (needAdd, node, flatState) {\r\n      if (typeof node.parent === 'undefined') {\r\n\r\n      } else {\r\n        for (const t of needAdd) {\r\n          if (t.nodeKey === node.parent) {\r\n            return\r\n          }\r\n        }\r\n        needAdd.push(flatState[node.parent].node)\r\n        this.recusiveNode(needAdd, flatState[node.parent], flatState)\r\n      }\r\n    },\r\n    roleOk: function () {\r\n      const roleIds = this.roleDlg.targetData\r\n      const addRoles = {\r\n        method: 'POST',\r\n        url: `/user/${this.roleDlg.userId}/role`,\r\n        data: { 'userId': this.roleDlg.userId, 'roleIds': roleIds.toString() }\r\n      }\r\n      this.$ajax(addRoles)\r\n    },\r\n    platformOk: function () {\r\n      const platformIds = this.platformDlg.targetData\r\n      let authSystems = 'ROLE_ADMIN' // store.getters.getSystems\r\n      let param = authSystems.find(item => { if (item.indexOf('*') > -1) { return item } })\r\n      const addResources = {\r\n        method: 'POST',\r\n        url: `/user/${this.roleDlg.userId}/platform`,\r\n        data: { 'platformIds': platformIds.toString(), 'authps': param }\r\n      }\r\n      this.$ajax(addResources)\r\n    },\r\n    systemOk: function () {\r\n      let checkeds = this.$refs['systemTree'].getCheckedNodes()\r\n      if (!checkeds || checkeds.length === 0) {\r\n        this.$Modal.error({\r\n          title: '提示',\r\n          content: '未选择平台！！'\r\n        })\r\n        return\r\n      }\r\n      // let flatState = this.$refs['systemTree'].flatState\r\n      // for (const t of checkeds) {\r\n      //   this.recusiveNode(checkeds, flatState[t.nodeKey], flatState)\r\n      // }\r\n      // const systemIds = Array.from(checkeds, e => e.Key)\r\n      let permissList = []\r\n      for (const t of checkeds) {\r\n        let userSystems = {}\r\n        userSystems.userId = this.roleDlg.userId\r\n        userSystems.systemsId = t.Key\r\n        if (t.permissions === undefined || t.permissions === '') {\r\n          t.permissions = 'R'\r\n        }\r\n        userSystems.permissions = t.permissions\r\n        permissList.push(userSystems)\r\n      }\r\n      const addPermiss = {\r\n        method: 'POST',\r\n        url: `/user/${this.roleDlg.userId}/allot/permiss`,\r\n        data: permissList,\r\n        contentType: 'json'\r\n      }\r\n      this.$ajax(addPermiss)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (this.roleDlg.userId === this.$store.getters.getUserId) {\r\n              utils.getUserPlatform(this.$store.getters.getUserId)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    filterRole: function (data, query) {\r\n      return data.label.indexOf(query) > -1\r\n    },\r\n    handleChange: function (newTarget) {\r\n      this.roleDlg.targetData = newTarget\r\n    },\r\n    filterResource: function (data, query) {\r\n      return data.label.indexOf(query) > -1\r\n    },\r\n    renderResource: function (item) {\r\n      return `<span class=\"resource-label\">${item.label}</span>\r\n\t\t\t\t\t<span class=\"resource-method\">${item.method}</span>`\r\n    },\r\n    platformHandleChange: function (newTarget) {\r\n      this.platformDlg.targetData = newTarget\r\n    },\r\n    systemHandleChange: function (newTarget) {\r\n      this.systemDlg.targetData = newTarget\r\n    }\r\n  },\r\n  mounted () {\r\n    //\r\n  },\r\n  computed: {\r\n    resourceStyle () {\r\n      return {\r\n        width: '250px',\r\n        height: '300px'\r\n      }\r\n    },\r\n    systemDlgNew () {\r\n      if (this.systemDlg.systemTreeData) {\r\n        return JSON.parse(JSON.stringify(this.systemDlg.systemTreeData))\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    systemDlgNew: {\r\n      handler (newVal, oldVal) {\r\n        for (let i = 0; i < newVal.length; i++) {\r\n          if (oldVal[i] && newVal[i].permissions && oldVal[i].permissions && newVal[i].permissions !== oldVal[i].permissions) {\r\n            this.systemDlg.systemTreeData[i].children.forEach(children => {\r\n              if (children.checked) {\r\n                children.permissions = newVal[i].permissions\r\n              }\r\n            })\r\n          }\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n/* .spdb-toolbar .i1\r\n{\r\n position: relative;\r\n top: 5px;\r\n left: 0px;\r\n} */\r\n\r\n.resource-method {\r\n\tfloat: right;\r\n\tcolor: green;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}