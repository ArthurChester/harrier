{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\excel\\upload-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\excel\\upload-excel.vue","mtime":1681468306521},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport excel from '@/libs/excel';\nexport default {\n  name: 'upload-excel',\n  data: function data() {\n    return {\n      uploadLoading: false,\n      progressPercent: 0,\n      showProgress: false,\n      showRemoveFile: false,\n      file: null,\n      tableData: [],\n      tableTitle: [],\n      tableLoading: false\n    };\n  },\n  methods: {\n    initUpload: function initUpload() {\n      this.file = null;\n      this.showProgress = false;\n      this.loadingProgress = 0;\n      this.tableData = [];\n      this.tableTitle = [];\n    },\n    handleUploadFile: function handleUploadFile() {\n      this.initUpload();\n    },\n    handleRemove: function handleRemove() {\n      this.initUpload();\n      this.$Message.info('上传的文件已删除！');\n    },\n    handleBeforeUpload: function handleBeforeUpload(file) {\n      var fileExt = file.name.split('.').pop().toLocaleLowerCase();\n      if (fileExt === 'xlsx' || fileExt === 'xls') {\n        this.readFile(file);\n        this.file = file;\n      } else {\n        this.$Notice.warning({\n          title: '文件类型错误',\n          desc: '文件：' + file.name + '不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。'\n        });\n      }\n      return false;\n    },\n    // 读取文件\n    readFile: function readFile(file) {\n      var _this = this;\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadstart = function (e) {\n        _this.uploadLoading = true;\n        _this.tableLoading = true;\n        _this.showProgress = true;\n      };\n      reader.onprogress = function (e) {\n        _this.progressPercent = Math.round(e.loaded / e.total * 100);\n      };\n      reader.onerror = function (e) {\n        _this.$Message.error('文件读取出错');\n      };\n      reader.onload = function (e) {\n        _this.$Message.info('文件读取成功');\n        var data = e.target.result;\n        var _excel$read = excel.read(data, 'array'),\n          header = _excel$read.header,\n          results = _excel$read.results;\n        var tableTitle = header.map(function (item) {\n          return {\n            title: item,\n            key: item\n          };\n        });\n        _this.tableData = results;\n        _this.tableTitle = tableTitle;\n        _this.uploadLoading = false;\n        _this.tableLoading = false;\n        _this.showRemoveFile = true;\n      };\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {}\n};",{"version":3,"names":["excel","name","data","uploadLoading","progressPercent","showProgress","showRemoveFile","file","tableData","tableTitle","tableLoading","methods","initUpload","loadingProgress","handleUploadFile","handleRemove","$Message","info","handleBeforeUpload","fileExt","split","pop","toLocaleLowerCase","readFile","$Notice","warning","title","desc","_this","reader","FileReader","readAsArrayBuffer","onloadstart","e","onprogress","Math","round","loaded","total","onerror","error","onload","target","result","_excel$read","read","header","results","map","item","key","created","mounted"],"sources":["src/view/excel/upload-excel.vue"],"sourcesContent":["<style lang=\"less\">\r\n  @import \"./common.less\";\r\n</style>\r\n<template>\r\n  <div>\r\n    <Card title=\"导入EXCEL\">\r\n      <Row>\r\n        <Upload action=\"\" :before-upload=\"handleBeforeUpload\" accept=\".xls, .xlsx\">\r\n          <Button icon=\"ios-cloud-upload-outline\" :loading=\"uploadLoading\" @click=\"handleUploadFile\">上传文件</Button>\r\n        </Upload>\r\n      </Row>\r\n      <Row>\r\n        <div class=\"ivu-upload-list-file\" v-if=\"file !== null\">\r\n          <Icon type=\"ios-stats\"></Icon>\r\n            {{ file.name }}\r\n          <Icon v-show=\"showRemoveFile\" type=\"ios-close\" class=\"ivu-upload-list-remove\" @click.native=\"handleRemove()\"></Icon>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <transition name=\"fade\">\r\n          <Progress v-if=\"showProgress\" :percent=\"progressPercent\" :stroke-width=\"2\">\r\n            <div v-if=\"progressPercent == 100\">\r\n              <Icon type=\"ios-checkmark-circle\"></Icon>\r\n              <span>成功</span>\r\n            </div>\r\n          </Progress>\r\n        </transition>\r\n      </Row>\r\n    </Card>\r\n    <Row class=\"margin-top-10\">\r\n      <Table :columns=\"tableTitle\" :data=\"tableData\" :loading=\"tableLoading\"></Table>\r\n    </Row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport excel from '@/libs/excel'\r\nexport default {\r\n  name: 'upload-excel',\r\n  data () {\r\n    return {\r\n      uploadLoading: false,\r\n      progressPercent: 0,\r\n      showProgress: false,\r\n      showRemoveFile: false,\r\n      file: null,\r\n      tableData: [],\r\n      tableTitle: [],\r\n      tableLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    initUpload () {\r\n      this.file = null\r\n      this.showProgress = false\r\n      this.loadingProgress = 0\r\n      this.tableData = []\r\n      this.tableTitle = []\r\n    },\r\n    handleUploadFile () {\r\n      this.initUpload()\r\n    },\r\n    handleRemove () {\r\n      this.initUpload()\r\n      this.$Message.info('上传的文件已删除！')\r\n    },\r\n    handleBeforeUpload (file) {\r\n      const fileExt = file.name.split('.').pop().toLocaleLowerCase()\r\n      if (fileExt === 'xlsx' || fileExt === 'xls') {\r\n        this.readFile(file)\r\n        this.file = file\r\n      } else {\r\n        this.$Notice.warning({\r\n          title: '文件类型错误',\r\n          desc: '文件：' + file.name + '不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。'\r\n        })\r\n      }\r\n      return false\r\n    },\r\n    // 读取文件\r\n    readFile (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsArrayBuffer(file)\r\n      reader.onloadstart = e => {\r\n        this.uploadLoading = true\r\n        this.tableLoading = true\r\n        this.showProgress = true\r\n      }\r\n      reader.onprogress = e => {\r\n        this.progressPercent = Math.round(e.loaded / e.total * 100)\r\n      }\r\n      reader.onerror = e => {\r\n        this.$Message.error('文件读取出错')\r\n      }\r\n      reader.onload = e => {\r\n        this.$Message.info('文件读取成功')\r\n        const data = e.target.result\r\n        const { header, results } = excel.read(data, 'array')\r\n        const tableTitle = header.map(item => { return { title: item, key: item } })\r\n        this.tableData = results\r\n        this.tableTitle = tableTitle\r\n        this.uploadLoading = false\r\n        this.tableLoading = false\r\n        this.showRemoveFile = true\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n\r\n  },\r\n  mounted () {\r\n\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;AAmCA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,eAAA;MACAC,YAAA;MACAC,cAAA;MACAC,IAAA;MACAC,SAAA;MACAC,UAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAL,IAAA;MACA,KAAAF,YAAA;MACA,KAAAQ,eAAA;MACA,KAAAL,SAAA;MACA,KAAAC,UAAA;IACA;IACAK,gBAAA,WAAAA,iBAAA;MACA,KAAAF,UAAA;IACA;IACAG,YAAA,WAAAA,aAAA;MACA,KAAAH,UAAA;MACA,KAAAI,QAAA,CAAAC,IAAA;IACA;IACAC,kBAAA,WAAAA,mBAAAX,IAAA;MACA,IAAAY,OAAA,GAAAZ,IAAA,CAAAN,IAAA,CAAAmB,KAAA,MAAAC,GAAA,GAAAC,iBAAA;MACA,IAAAH,OAAA,eAAAA,OAAA;QACA,KAAAI,QAAA,CAAAhB,IAAA;QACA,KAAAA,IAAA,GAAAA,IAAA;MACA;QACA,KAAAiB,OAAA,CAAAC,OAAA;UACAC,KAAA;UACAC,IAAA,UAAApB,IAAA,CAAAN,IAAA;QACA;MACA;MACA;IACA;IACA;IACAsB,QAAA,WAAAA,SAAAhB,IAAA;MAAA,IAAAqB,KAAA;MACA,IAAAC,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,iBAAA,CAAAxB,IAAA;MACAsB,MAAA,CAAAG,WAAA,aAAAC,CAAA;QACAL,KAAA,CAAAzB,aAAA;QACAyB,KAAA,CAAAlB,YAAA;QACAkB,KAAA,CAAAvB,YAAA;MACA;MACAwB,MAAA,CAAAK,UAAA,aAAAD,CAAA;QACAL,KAAA,CAAAxB,eAAA,GAAA+B,IAAA,CAAAC,KAAA,CAAAH,CAAA,CAAAI,MAAA,GAAAJ,CAAA,CAAAK,KAAA;MACA;MACAT,MAAA,CAAAU,OAAA,aAAAN,CAAA;QACAL,KAAA,CAAAZ,QAAA,CAAAwB,KAAA;MACA;MACAX,MAAA,CAAAY,MAAA,aAAAR,CAAA;QACAL,KAAA,CAAAZ,QAAA,CAAAC,IAAA;QACA,IAAAf,IAAA,GAAA+B,CAAA,CAAAS,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAA5C,KAAA,CAAA6C,IAAA,CAAA3C,IAAA;UAAA4C,MAAA,GAAAF,WAAA,CAAAE,MAAA;UAAAC,OAAA,GAAAH,WAAA,CAAAG,OAAA;QACA,IAAAtC,UAAA,GAAAqC,MAAA,CAAAE,GAAA,WAAAC,IAAA;UAAA;YAAAvB,KAAA,EAAAuB,IAAA;YAAAC,GAAA,EAAAD;UAAA;QAAA;QACArB,KAAA,CAAApB,SAAA,GAAAuC,OAAA;QACAnB,KAAA,CAAAnB,UAAA,GAAAA,UAAA;QACAmB,KAAA,CAAAzB,aAAA;QACAyB,KAAA,CAAAlB,YAAA;QACAkB,KAAA,CAAAtB,cAAA;MACA;IACA;EACA;EACA6C,OAAA,WAAAA,QAAA,GAEA;EACAC,OAAA,WAAAA,QAAA,GAEA;AACA"}]}