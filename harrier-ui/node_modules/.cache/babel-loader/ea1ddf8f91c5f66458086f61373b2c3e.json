{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmconfig\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmconfig\\Table.vue","mtime":1681468306499},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport utils from '@/common/utils';\nvar RESOURCE_PATH = '/alarm/config';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      platformData: [],\n      systemData: [],\n      ctrlDisable: true,\n      loadingdel: false,\n      loadingsync: false,\n      formBean: {},\n      codeList: [],\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      gridColumns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n        // fixed: 'left'\n      }, {\n        title: '平台名',\n        key: 'platform',\n        align: 'center',\n        width: 80\n      }, {\n        title: '应用名',\n        key: 'systems',\n        align: 'center',\n        width: 95\n      }, {\n        title: '告警码',\n        key: 'code',\n        align: 'center',\n        width: 95\n      },\n      // {\n      //   title: '作业',\n      //   key: 'job',\n      //   align: 'center',\n      //   width: 95\n      // },\n      {\n        title: '告警默认状态',\n        key: 'defStatus',\n        align: 'center',\n        width: 130\n      }, {\n        title: '通知次数',\n        key: 'noticeTimes',\n        align: 'center',\n        width: 95\n      }, {\n        title: '通知间隔分',\n        key: 'noticeCycle',\n        align: 'center',\n        minWidth: 120\n      }, {\n        title: '通知用户组',\n        key: 'noticeGroupName',\n        align: 'center',\n        minWidth: 120\n      }, {\n        title: '是否生成告警信息',\n        key: 'build',\n        align: 'center',\n        minWidth: 150,\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('Span', {}, row.build ? '是' : '否')]);\n        }\n      }, {\n        title: '是否启用',\n        key: 'isEnable',\n        align: 'center',\n        minWidth: 138,\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('Span', {}, row.isEnable ? '是' : '否')]);\n        }\n      }, {\n        title: '更新用户',\n        key: 'updateUser',\n        align: 'center',\n        width: 95\n      }, {\n        title: '备注',\n        key: 'remark',\n        align: 'center',\n        minWidth: 138\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 80,\n        // fixed: 'right',\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('Button', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.$emit('switch', Object.assign({}, {\n                  row: row,\n                  formBean: _this.formBean\n                }, _this.getPageParam()));\n              }\n            }\n          }, '编辑')]);\n        }\n      }],\n      gridData: [],\n      selection: [],\n      page: {\n        current: 1,\n        total: 10,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      ruleValidate: {}\n    };\n  },\n  watch: {\n    selection: function selection(val) {\n      if (val.length != 0) {\n        this.ctrlDisable = false;\n      } else {\n        this.ctrlDisable = true;\n      }\n    }\n  },\n  methods: {\n    // 同步\n    sync: function sync() {\n      var _this2 = this;\n      // 同步\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/sync'\n      };\n      this.loadingsync = true;\n      this.$ajax(loadConfig).then(function (resp) {\n        _this2.loadingsync = false;\n        if (resp.data == '1') {\n          _this2.$Notice.success({\n            title: '信息',\n            desc: '同步成功'\n          });\n        } else {\n          _this2.$Notice.error({\n            title: '信息',\n            desc: '同步失败'\n          });\n        }\n        _this2.search();\n      });\n    },\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      if (this.transData.etlPlatform) {\n        this.formBean.etlPlatform = this.transData.etlPlatform;\n      }\n      if (this.transData.currentPage) {\n        this.page.current = this.transData.currentPage;\n        this.page.size = this.transData.pageSize;\n      }\n      this.search();\n    },\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this3 = this;\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.current = this.page.current;\n      params.size = this.page.size;\n      if (this.formBean.etlPlatform) {\n        params.current = 1;\n      }\n      params.job = '*';\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH,\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        console.log(resp);\n        // if (resp.data.rows) {\n        //   resp.data.rows.forEach(data1 => {\n        //     if (data1.failedalarmstatus) {\n        //       data1.failedalarmstatus = '是'\n        //     } else {\n        //       data1.failedalarmstatus = '否'\n        //     }\n        //     if (data1.fluctualAlarmStatus) {\n        //       data1.fluctualAlarmStatus = '是'\n        //     } else {\n        //       data1.fluctualAlarmStatus = '否'\n        //     }\n        //     if (data1.baselineAlarmStatus) {\n        //       data1.baselineAlarmStatus = '是'\n        //     } else {\n        //       data1.baselineAlarmStatus = '否'\n        //     }\n\n        //     if (data1.timeoutalarmstatus) {\n        //       data1.timeoutalarmstatus = '是'\n        //     } else {\n        //       data1.timeoutalarmstatus = '否'\n        //     }\n        //     if (data1.notificationemailstatus) {\n        //       data1.notificationemailstatus = '是'\n        //     } else {\n        //       data1.notificationemailstatus = '否'\n        //     }\n        //     if (data1.notificationlimitstatus) {\n        //       data1.notificationlimitstatus = '是'\n        //     } else {\n        //       data1.notificationlimitstatus = '否'\n        //     }\n        //     if (data1.pendingalarmstatus) {\n        //       data1.pendingalarmstatus = '是'\n        //     } else {\n        //       data1.pendingalarmstatus = '否'\n        //     }\n        //     if (data1.dispatcheralarmstatus) {\n        //       data1.dispatcheralarmstatus = '是'\n        //     } else {\n        //       data1.dispatcheralarmstatus = '否'\n        //     }\n        //     if (data1.complementTimeOutStatus) {\n        //       data1.complementTimeOutStatus = '是'\n        //     } else {\n        //       data1.complementTimeOutStatus = '否'\n        //     }\n        //   })\n        // }\n        _this3.gridData = resp.data.records;\n        _this3.page.total = resp.data.total;\n      });\n    },\n    /**\r\n    * 清空\r\n    **/\n    clear: function clear() {\n      this.formBean = {};\n      this.selection = [];\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    queryPlatform: function queryPlatform() {\n      var _this4 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this4.platformData.push(tmp);\n      });\n    },\n    querySystem: function querySystem() {\n      var _this5 = this;\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.formBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.formBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this5.systemData.push(tmp);\n        });\n      }\n    },\n    /**\r\n    * 新增\r\n    **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n    * 删除\r\n    **/\n    del: function del() {\n      var _this6 = this;\n      this.selection.forEach(function (item) {\n        _this6.request.delReq = {\n          url: RESOURCE_PATH + '/delete',\n          method: 'DELETE',\n          params: {\n            id: item.id,\n            platform: item.platform\n          }\n        };\n        _this6.loadingdel = true;\n        _this6.$ajax(_this6.request.delReq).then(function (resp) {\n          _this6.loadingdel = false;\n          _this6.search();\n        });\n      });\n    },\n    /**\r\n    * 数据复选事件\r\n    **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.alarmBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      // alert(currentPage);\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    }\n  },\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    this.init();\n    this.queryPlatform();\n  }\n};",{"version":3,"names":["utils","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","platformData","systemData","ctrlDisable","loadingdel","loadingsync","formBean","codeList","request","delReq","method","url","addReq","gridColumns","width","align","title","key","minWidth","render","h","_ref","column","index","row","build","_ref2","isEnable","_ref3","size","style","marginRight","on","click","$emit","assign","getPageParam","gridData","selection","page","current","total","opt","ruleValidate","watch","val","length","methods","sync","_this2","loadConfig","$ajax","then","resp","$Notice","success","desc","error","search","init","etlPlatform","currentPage","pageSize","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","s","n","done","field","value","err","e","f","console","download","params","_this3","job","httpConfig","log","records","clear","queryPlatform","_this4","platformList","$store","getters","getUserPlatform","forEach","tmp","label","push","querySystem","_this5","$refs","refsystem","setQuery","platform","userSystemList","getUserSystem","userSystem","add","del","_this6","item","id","select","alarmBean","changePage","changePageSize","mounted"],"sources":["src/view/app/alarm/alarmconfig/Table.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form ref=\"alarmsettingForm\" :model=\"formBean\" :label-width=\"80\" :rules='ruleValidate'>\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"platform\" label=\"平台名\" >\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"querySystem\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"system\" label=\"应用名\" >\r\n              <Select ref=\"refsystem\" v-model=\"formBean.system\" style=\"width:100px\" filterable  clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"code\" label=\"告警码\">\r\n              <Select v-model=\"formBean.code\" style=\"width:100px\" filterable  clearable>\r\n                <Option v-for=\"item in codeList\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div class=\"spdb-toolbar\">\r\n      <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n      <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n      <!-- <S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n      <S-AuthButton type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</S-AuthButton> -->\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</Button>\r\n      <Button type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</Button>\r\n      <!-- <Button type=\"primary\" :loading=\"loadingsync\" icon=\"ios-sync\" @click=\"sync\">同步</Button> -->\r\n      <!--<Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button>-->\r\n    </div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/alarm/config'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      platformData: [],\r\n      systemData: [],\r\n      ctrlDisable: true,\r\n      loadingdel: false,\r\n      loadingsync: false,\r\n      formBean: {},\r\n      codeList: [],\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center',\r\n          width: 80\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          align: 'center',\r\n          width: 95\r\n        },\r\n        {\r\n          title: '告警码',\r\n          key: 'code',\r\n          align: 'center',\r\n          width: 95\r\n        },\r\n        // {\r\n        //   title: '作业',\r\n        //   key: 'job',\r\n        //   align: 'center',\r\n        //   width: 95\r\n        // },\r\n        {\r\n          title: '告警默认状态',\r\n          key: 'defStatus',\r\n          align: 'center',\r\n          width: 130\r\n        },\r\n        {\r\n          title: '通知次数',\r\n          key: 'noticeTimes',\r\n          align: 'center',\r\n          width: 95\r\n        },\r\n        {\r\n          title: '通知间隔分',\r\n          key: 'noticeCycle',\r\n          align: 'center',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '通知用户组',\r\n          key: 'noticeGroupName',\r\n          align: 'center',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '是否生成告警信息',\r\n          key: 'build',\r\n          align: 'center',\r\n          minWidth: 150,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, row.build ? '是' : '否')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '是否启用',\r\n          key: 'isEnable',\r\n          align: 'center',\r\n          minWidth: 138,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, row.isEnable ? '是' : '否')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '更新用户',\r\n          key: 'updateUser',\r\n          align: 'center',\r\n          width: 95\r\n        },\r\n        {\r\n          title: '备注',\r\n          key: 'remark',\r\n          align: 'center',\r\n          minWidth: 138\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 80,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.$emit('switch', Object.assign({}, { row: row, formBean: this.formBean }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length != 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 同步\r\n    sync () {\r\n      // 同步\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/sync'\r\n      }\r\n      this.loadingsync = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.loadingsync = false\r\n          if (resp.data == '1') {\r\n            this.$Notice.success({\r\n              title: '信息',\r\n              desc: '同步成功'\r\n            })\r\n          } else {\r\n            this.$Notice.error({\r\n              title: '信息',\r\n              desc: '同步失败'\r\n            })\r\n          }\r\n          this.search()\r\n        })\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.etlPlatform) {\r\n        this.formBean.etlPlatform = this.transData.etlPlatform\r\n      }\r\n      if (this.transData.currentPage) {\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (this.formBean.etlPlatform) {\r\n        params.current = 1\r\n      }\r\n      params.job = '*'\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          console.log(resp)\r\n          // if (resp.data.rows) {\r\n          //   resp.data.rows.forEach(data1 => {\r\n          //     if (data1.failedalarmstatus) {\r\n          //       data1.failedalarmstatus = '是'\r\n          //     } else {\r\n          //       data1.failedalarmstatus = '否'\r\n          //     }\r\n          //     if (data1.fluctualAlarmStatus) {\r\n          //       data1.fluctualAlarmStatus = '是'\r\n          //     } else {\r\n          //       data1.fluctualAlarmStatus = '否'\r\n          //     }\r\n          //     if (data1.baselineAlarmStatus) {\r\n          //       data1.baselineAlarmStatus = '是'\r\n          //     } else {\r\n          //       data1.baselineAlarmStatus = '否'\r\n          //     }\r\n\r\n          //     if (data1.timeoutalarmstatus) {\r\n          //       data1.timeoutalarmstatus = '是'\r\n          //     } else {\r\n          //       data1.timeoutalarmstatus = '否'\r\n          //     }\r\n          //     if (data1.notificationemailstatus) {\r\n          //       data1.notificationemailstatus = '是'\r\n          //     } else {\r\n          //       data1.notificationemailstatus = '否'\r\n          //     }\r\n          //     if (data1.notificationlimitstatus) {\r\n          //       data1.notificationlimitstatus = '是'\r\n          //     } else {\r\n          //       data1.notificationlimitstatus = '否'\r\n          //     }\r\n          //     if (data1.pendingalarmstatus) {\r\n          //       data1.pendingalarmstatus = '是'\r\n          //     } else {\r\n          //       data1.pendingalarmstatus = '否'\r\n          //     }\r\n          //     if (data1.dispatcheralarmstatus) {\r\n          //       data1.dispatcheralarmstatus = '是'\r\n          //     } else {\r\n          //       data1.dispatcheralarmstatus = '否'\r\n          //     }\r\n          //     if (data1.complementTimeOutStatus) {\r\n          //       data1.complementTimeOutStatus = '是'\r\n          //     } else {\r\n          //       data1.complementTimeOutStatus = '否'\r\n          //     }\r\n          //   })\r\n          // }\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      this.selection.forEach(item => {\r\n        this.request.delReq = {\r\n          url: RESOURCE_PATH + '/delete',\r\n          method: 'DELETE',\r\n          params: { id: item.id, platform: item.platform }\r\n        }\r\n        this.loadingdel = true\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.loadingdel = false\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      // alert(currentPage);\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n    this.queryPlatform()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}