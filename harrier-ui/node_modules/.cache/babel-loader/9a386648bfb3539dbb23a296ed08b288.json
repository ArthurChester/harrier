{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\opjobsummary\\Errorlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\opjobsummary\\Errorlist.vue","mtime":1681468306505},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\.babelrc","mtime":1681468306354},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// import * as echarts from \"echarts\";\nimport utils from '@/common/utils';\nimport store from '@/store/index';\n// const platforms = store.getters.getPlatforms\nvar RESOURCE_PATH = '/alarm';\nexport default {\n  props: {\n    transData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    var validAlarmStatus = function validAlarmStatus(rule, value, callback) {\n      if (value === '0') {\n        return callback(new Error('告警状态不能为未处理'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      noJobCheckList: [100, 101, 300, 301, 302, 303, 304, 400, 409, 420, 430, 450],\n      upJobMsgStyle: 'upJobMsgGreen',\n      upJobInfo: {\n        message: '',\n        messageSp: ''\n      },\n      strategyList: {\n        '0': '普通策略',\n        '1': '指定机器分发机器',\n        '2': '指定机器序号分发',\n        '3': '指定机器标签分发'\n      },\n      jobtypeList: {},\n      locationList: {},\n      showDownstreamTable: {\n        showFistFloor: true,\n        showSecondFloor: false,\n        showThirdFloor: false,\n        showKeyJob: false\n      },\n      jobCheck: {\n        isShowCheckDepend: false,\n        isShowCheckSchedule: false,\n        isShowAnalyPlatPer: false,\n        isShowAnalyLog: false,\n        isShowAnalyKeyLink: false\n      },\n      menuData: [{\n        '100': 'isShowCheckDepend'\n      }, {\n        '101': 'isShowCheckSchedule'\n      }, {\n        '102': 'isShowAnalyPlatPer'\n      }, {\n        '103': 'isShowAnalyLog'\n      }, {\n        '104': 'isShowAnalyKeyLink'\n      }],\n      waitSignalFile: false,\n      isInitialize: false,\n      defaultPanel: [],\n      collapseData: [],\n      baselineBean: {},\n      keyJobBean: {},\n      showSendTypeData: [],\n      sendTypeBean: {},\n      sendTypeList: [],\n      sendTypeDataBean: {},\n      timelineItemData: [],\n      lineSearchBean: {\n        start: '',\n        end: ''\n      },\n      frequencyList: [],\n      triggerList: [],\n      triggerBean: {},\n      frequencyBean: {},\n      timeTriggerOp: {\n        show: false\n      },\n      frequencyOp: {\n        show: false\n      },\n      logContent: '',\n      configData: {},\n      timeTriggerData: {},\n      frequencyData: {},\n      weightList: [],\n      isShowFreOrTime: false,\n      isShowTimeTriggerData: false,\n      isShowFrequencyData: false,\n      isShowWeight: false,\n      isShowStrategy: false,\n      row: {},\n      platformData: [],\n      systemData: [],\n      loading: false,\n      errorHandle: {\n        show: false,\n        title: '',\n        id: ''\n      },\n      isShowJob: true,\n      isShowInflunceSys: false,\n      isShowDoneStream: false,\n      affectDownStringKeyJobList: [],\n      downStreamData: [],\n      downStreamColumns: [{\n        title: '平台名',\n        key: 'platform',\n        align: 'center'\n      }, {\n        title: '应用名',\n        key: 'system',\n        align: 'center'\n      }, {\n        title: '影响数量',\n        key: 'affectNum',\n        align: 'center'\n      }],\n      upstreamColumns: [{\n        title: '作业名',\n        key: 'job',\n        minWidth: 200\n      }, {\n        title: 'job_date',\n        key: 'jobDate',\n        minWidth: 150\n      }, {\n        title: '作业类型',\n        key: 'jobType',\n        minWidth: 120,\n        render: function render(h, _ref) {\n          var column = _ref.column,\n            index = _ref.index,\n            row = _ref.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '5px',\n              color: '#3399ff'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (row.jobType == 'M' || row.jobType == 'W') {\n                  _this.matchedData(row.job, 'frequency');\n                  _this.frequencyOp.show = true;\n                } else if (row.jobType == 'C') {\n                  _this.matchedData(row.job, 'trigger');\n                  _this.timeTriggerOp.show = true;\n                } else {\n                  _this.$Message.warning('日作业不存在定时或频度信息。');\n                }\n              }\n            }\n          }, _this.jobtypeList[row.jobType])]);\n        }\n      }, {\n        title: '状态',\n        key: 'lastStatus',\n        minWidth: 120\n      }],\n      upstreamData: [],\n      rootFailData: [],\n      depSuccData: [],\n      depFailData: [],\n      baseBean: {\n        job: '',\n        jobDate: '',\n        pendingTime: '',\n        dispatcherTime: '',\n        startTime: '',\n        endTime: '',\n        alarmContent: '',\n        mcontactuser: '',\n        lastStatus: '',\n        alarmCnt: ''\n      },\n      recordColumns: [{\n        title: '执行次数',\n        width: 100,\n        key: 'numTimes'\n      }, {\n        title: 'log',\n        key: 'logName',\n        render: function render(h, _ref2) {\n          var column = _ref2.column,\n            index = _ref2.index,\n            row = _ref2.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n              // color: \"green\"\n            },\n            href: row.logDir,\n            on: {\n              click: function click() {\n                _this.downloadLogfile(row);\n              }\n            }\n          }, row.logName)]);\n        }\n      }, {\n        title: 'script',\n        key: 'scriptName',\n        render: function render(h, _ref3) {\n          var column = _ref3.column,\n            index = _ref3.index,\n            row = _ref3.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n              // color: \"green\"\n            },\n            href: row.scriptPath,\n            on: {\n              click: function click() {\n                _this.downloadScriptfile(row);\n              }\n            }\n          }, row.scriptName)]);\n        }\n      }, {\n        title: '执行节点',\n        ellipsis: false,\n        tooltip: true,\n        width: 120,\n        sortable: true,\n        key: 'serverName',\n        render: function render(h, _ref4) {\n          var column = _ref4.column,\n            index = _ref4.index,\n            row = _ref4.row;\n          return h('div', [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            }\n          }, row.serverName ? row.serverName : '')]);\n        }\n      }, {\n        title: '开始时间',\n        width: 180,\n        key: 'startTime'\n      }, {\n        title: '结束时间',\n        width: 180,\n        key: 'endTime',\n        render: function render(h, params) {\n          var endTimeStr = '';\n          endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy');\n          if (endTimeStr == '2099') {\n            endTimeStr = '';\n          } else {\n            endTimeStr = params.row.endTime;\n          }\n          return h('div', {\n            props: {}\n          }, endTimeStr);\n        }\n      }, {\n        title: '耗时',\n        width: 100,\n        key: 'endTime',\n        render: function render(h, params) {\n          var etime = null;\n          var startTime = null;\n          var elapsed = '';\n          var str = utils.fmtDate(params.row.endTime, 'yyyy');\n          if (str == '2099') {\n            elapsed = '';\n          } else {\n            etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss');\n            startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss');\n            var e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6));\n            var s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6));\n            // let ss=\n            var second = parseInt(e.getTime() - s.getTime()) / 1000;\n            var hourTime = 0;\n            var minuteTime = 0;\n            var secondTime = 0;\n            if (second > 60) {\n              minuteTime = Math.floor(second / 60);\n              secondTime = Math.floor(second % 60);\n              if (minuteTime >= 60) {\n                hourTime = Math.floor(minuteTime / 60);\n                minuteTime = Math.floor(minuteTime % 60);\n              } else {\n                hourTime = 0;\n              }\n            } else {\n              hourTime = 0;\n              minuteTime = 0;\n              if (second == 60) {\n                minuteTime = 1;\n                secondTime = 0;\n              } else {\n                secondTime = second;\n              }\n            }\n            elapsed = _this.addZero(hourTime) + ':' + _this.addZero(minuteTime) + ':' + _this.addZero(secondTime);\n          }\n          return h('div', {\n            props: {}\n          }, elapsed);\n        }\n      }, {\n        title: 'TXDate',\n        width: 110,\n        key: 'jobDate'\n      }, {\n        title: '运行状态',\n        width: 110,\n        key: 'returnCode',\n        render: function render(h, params) {\n          var str = '';\n          var endTimeStr = '';\n          endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy');\n          if (params.row.returnCode == 0) {\n            str = 'Done';\n          } else {\n            str = 'Failed';\n          }\n          if (endTimeStr == '2099') {\n            str = 'Running';\n          }\n          return h('div', {\n            props: {}\n          }, str);\n        }\n      }],\n      recordData: [],\n      formRule: {\n        operationType: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        operationTime: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        operationUser: [{\n          required: true,\n          message: '请输入数据！'\n        }],\n        alarmStatus: [{\n          required: true,\n          message: '请输入数据！'\n        }, {\n          validator: validAlarmStatus,\n          trigger: 'blur'\n        }]\n      },\n      alarmFormRule: {\n        localDate: [{\n          required: true,\n          message: '请输入数据！'\n        }]\n      },\n      alarmTypelist: [],\n      userlist: {},\n      userMap: {},\n      userIds: {},\n      cuInfo: {\n        show: false\n      },\n      errorDiagnosis: {\n        show: false\n      },\n      cuInfoFormBean: {},\n      operations: [{\n        label: '置虚跳过',\n        value: '0'\n      }, {\n        label: '再次执行',\n        value: '1'\n      }, {\n        label: '手工触发',\n        value: '2'\n      }, {\n        label: '置Done',\n        value: '3'\n      }, {\n        label: '中止执行',\n        value: '4'\n      }, {\n        label: '自动完成',\n        value: '5'\n      }],\n      operationTypeList: [],\n      alarmstatusList: [{\n        label: '未处理',\n        value: '0'\n      }, {\n        label: '已处理',\n        value: '1'\n      }, {\n        label: '暂停告警',\n        value: '2'\n      }],\n      alarmBean: {\n        alarmTime: utils.fmtDate(new Date(), 'yyyy-MM-dd')\n      },\n      formBean: {},\n      tabObj: {\n        alarmTab: true,\n        jobdetail: false,\n        showTable: true\n      },\n      request: {\n        delReq: {\n          method: 'DELETE',\n          url: RESOURCE_PATH\n        },\n        addReq: {\n          method: 'POST',\n          url: RESOURCE_PATH\n        }\n      },\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\n      gridColumns: [\n      // {\n      //   width: 90,\n      //   title: '序号',\n      //   align: 'center',\n      //   sortable: true,\n      //   key: 'id',\n      //   render: (h, { column, index, row }) => {\n      //     return h('div', [\n      //       h('a', {\n      //         props: {\n      //           size: 'small',\n      //           type: 'info'\n      //         },\n      //         style: {\n      //           // fontSize: '32px',\n      //           // fontWeight: 'normal',\n      //           // color: '#7EC0EE'\n      //         },\n      //         on: {\n      //           click: () => {\n      //             // Object.assign({},{id: id, statusName: \"jobdetail\",alarmTab: false},this.getPageParam())\n      //             this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\n      //           }\n      //         }\n      //       }, row.id)\n      //     ])\n      //   }\n      // },\n      {\n        title: '平台名',\n        width: 64,\n        sortable: true,\n        align: 'center',\n        key: 'platform'\n      }, {\n        title: '应用名',\n        sortable: true,\n        width: 64,\n        align: 'center',\n        key: 'systems'\n      }, {\n        title: '作业名',\n        key: 'job',\n        // align: 'center',\n        minWidth: 250,\n        // maxWidth: 400,\n        sortable: true,\n        render: function render(h, _ref5) {\n          var column = _ref5.column,\n            index = _ref5.index,\n            row = _ref5.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // fontSize: '32px',\n              // fontWeight: 'normal',\n              // color: '#7EC0EE'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    statusName: 'jobdetail',\n                    jobData: row\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n\n                // let id = row.job\n                // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\n\n                // let id = row.job\n                // this.transData.jobName = row.job\n                // this.switchTab('jobdetail'); //提交form事件，在parent中显示form\n                // this.tabObj.alarmTab = false\n                // // Object.assign({}, {id: id,statusName: \"alarmlog\",jobData: row},this.getPageParam())\n                // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail' }, this.getPageParam()))\n              }\n            }\n          }, row.job)]);\n        }\n      }, {\n        title: '告警码',\n        sortable: true,\n        align: 'center',\n        width: 80,\n        key: 'alarmType'\n      }, {\n        title: '告警时间',\n        sortable: true,\n        align: 'center',\n        width: 160,\n        key: 'times'\n      }, {\n        title: '告警内容',\n        sortable: true,\n        // align: 'center',\n        minWidth: 150,\n        // maxWidth: 450,\n        ellipsis: true,\n        key: 'content',\n        render: function render(h, _ref6) {\n          var column = _ref6.column,\n            index = _ref6.index,\n            row = _ref6.row;\n          var color = 'green';\n          var texts = '';\n          if (row.alarmStatus === 'WARN') {\n            color = 'red';\n          } else if (row.alarmStatus === 'DEAL') {\n            color = '#FF8E16';\n          } else if (row.alarmStatus === 'END') {\n            color = 'black';\n          }\n          texts = row.content;\n          if (texts != null) {\n            if (texts.length > 10) {\n              texts = texts.slice(0, 10) + '...';\n            } else {\n              texts = row.content;\n            }\n          } else {\n            return;\n          }\n          var str = row.content;\n          var str1 = '';\n          var str0 = '';\n          while (str.length > 30) {\n            str0 = str.substring(0, 30) + '\\n';\n            str = str.substring(30, str.length);\n            str1 = str1 + str0;\n          }\n          str1 = str1 + str;\n          return h('div', [h('span', {\n            style: {\n              display: 'inline-block',\n              width: '100%',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap' // 'nowrap'\n            },\n\n            // 鼠标悬停 显示完整信息\n            domProps: {\n              title: str1\n            }\n          }, [h('span', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              color: color\n            }\n          }, row.content)])]);\n        }\n      }, {\n        title: '处理时间',\n        width: 120,\n        align: 'center',\n        key: 'operationTime'\n        // render: (h, {column, index, row}) => {\n\n        // }\n      },\n      // {\n      //   title: '影响关键应用',\n      //   minWidth: 90,\n      //   maxWidth: 100,\n      //   key: 'influnceSys',\n      //   render: (h, { column, index, row }) => {\n      //     return h('div', [\n      //       h('span', {\n      //         props: {\n      //           size: 'small',\n      //           type: 'info'\n      //         },\n      //         style: {\n      //           // marginRight: '5px'\n      //         },\n      //         on: {\n      //           click: () => {\n      //             this.showCuInfo(row)\n      //           }\n      //         }\n      //       }, row.influnceSys)\n      //     ])\n      //   }\n      // },\n      {\n        title: '联系组',\n        width: 90,\n        align: 'center',\n        key: 'noticeGroupName',\n        render: function render(h, _ref7) {\n          var column = _ref7.column,\n            index = _ref7.index,\n            row = _ref7.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.showCuInfo(row);\n              }\n            }\n          }, _this.userMap[row.noticeGroupName] ? _this.userMap[row.noticeGroupName] : row.noticeGroupName)]);\n        }\n      },\n      // {\n      //   title: '报错诊断',\n      //   width: 80,\n      //   align: 'center',\n      //   render: (h, { column, index, row }) => {\n      //     let dis = false\n      //     let col = '#2d8cf0'\n      //     if (row.alarmType) {\n      //       if (this.noJobCheckList.includes(parseInt(row.alarmType))) {\n      //         dis = true\n      //         col = '#bbbec4'\n      //       }\n      //     }\n      //     // this.noJobCheckList\n      //     return h('div', [\n      //       h('Button', {\n      //         props: {\n      //           size: 'small',\n      //           type: 'text',\n      //           disabled: dis\n      //         },\n      //         style: {\n      //           fontSize: '14px',\n      //           color: col,\n      //           // background: 0 0 ,\n      //           backgroundColor: 'rgb(0, 0, 0, 0)',\n      //           textDecoration: 'none',\n      //           outline: '0',\n      //           cursor: 'pointer'\n      //           // transition: color .2s ease\n      //           // marginRight: '5px'\n      //         },\n      //         on: {\n      //           click: () => {\n      //             this.showErrorDiagnosis(row)\n      //           }\n      //         }\n      //       }, '详情')\n      //     ])\n      //   }\n      // },\n      {\n        title: '详情',\n        width: 50,\n        // fixed: 'right',\n        align: 'center',\n        render: function render(h, _ref8) {\n          var column = _ref8.column,\n            index = _ref8.index,\n            row = _ref8.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              // marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.$emit('switch', Object.assign({}, {\n                  row: row,\n                  statusName: 'alarmdetailTab'\n                }, _this.getPageParam()));\n              }\n            }\n          }, '查看')]);\n        }\n      }, {\n        title: '日志',\n        width: 80,\n        align: 'center',\n        // fixed: 'right',\n        render: function render(h, _ref9) {\n          var column = _ref9.column,\n            index = _ref9.index,\n            row = _ref9.row;\n          return h('div', [h('Button', {\n            props: {\n              icon: 'md-reorder'\n            },\n            style: {\n              margin: '0px',\n              fontSize: '20px',\n              border: 0,\n              padding: '4px 8px',\n              color: '#03399b',\n              backgroundColor: 'transparent'\n            },\n            on: {\n              click: function click() {\n                var id = row.job;\n                if (_this.transData.jobStatus) {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobStatus: _this.transData.jobStatus,\n                    jobData: row,\n                    statusName: 'jobRecord'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                } else {\n                  _this.$emit('switch', Object.assign({}, {\n                    id: id,\n                    jobData: row,\n                    statusName: 'jobRecord'\n                  }, _this.getPageParam())); // 提交form事件，在parent中显示form\n                }\n              }\n            }\n          }, '')]);\n        }\n      }, {\n        title: '处理登记',\n        align: 'center',\n        width: 120,\n        render: function render(h, _ref10) {\n          var column = _ref10.column,\n            index = _ref10.index,\n            row = _ref10.row;\n          return h('div', [h('a', {\n            props: {\n              size: 'small',\n              type: 'info'\n            },\n            style: {\n              marginRight: '10px'\n            },\n            on: {\n              click: function click() {\n                _this.showErrorHandle(row, index);\n              }\n            }\n          }, '登记')]);\n        }\n      }],\n      alarmGridData: [],\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\n      selection: [],\n      page: {\n        current: 1,\n        total: 100,\n        size: 10,\n        opt: [10, 50, 100]\n      },\n      listData: [],\n      showData: [],\n      timer: null,\n      // graph: null,\n      platformconcGraph: null,\n      nodeGraph: null\n    };\n  },\n  methods: {\n    /**\r\n    * 初始化\r\n    **/\n    init: function init() {\n      this.search();\n      this.getsendTypeList();\n      // if (this.transData.currentPage) {\n      //   this.alarmBean = this.transData.formBean\n      //   this.page.current = this.transData.currentPage\n      //   this.page.size = this.transData.pageSize\n      // }\n      // if (!this.alarmBean.platform) {\n      //   if (!platforms.includes('ROLE_ADMIN')) {\n      //     this.alarmBean.platform = platforms[0]\n      //     this.querySystem()\n      //   }\n      // }\n      // this.loaduser()\n      // this.queryPlatform()\n      // this.queryjobtypeList()\n      // this.querylocationList()\n    },\n    showCuInfo: function showCuInfo(row) {\n      var _this2 = this;\n      this.showSendTypeData = [];\n      this.cuInfoFormBean = {};\n      this.cuInfo.show = true;\n      var config = {\n        method: 'GET',\n        url: '/alarm/group/getDetailByGroupName',\n        params: {\n          groupName: row.noticeGroupName\n        }\n      };\n      this.$ajax(config).then(function (resp) {\n        if (resp.data && resp.data.length > 0) {\n          _this2.cuInfoFormBean = resp.data[0];\n          console.log(_this2.cuInfoFormBean.sendParams);\n          var oldSendType = JSON.parse(_this2.cuInfoFormBean.sendParams);\n          var sendTypeData = _this2.sendTypeDataBean[_this2.cuInfoFormBean.sendType];\n          // 循环取出自定义的key和系统中的key\n          var oldSendTypeKeys = Object.keys(oldSendType);\n          for (var i = 0; i < oldSendTypeKeys.length; i++) {\n            var key = oldSendTypeKeys[i];\n            var showKey = key;\n            for (var j = 0; j < sendTypeData.length; j++) {\n              if (key === sendTypeData[j][1]) {\n                showKey = sendTypeData[j][0];\n                break;\n              }\n            }\n            var param = [];\n            param.push(showKey);\n            param.push(oldSendType[key]);\n            _this2.showSendTypeData.push(param);\n          }\n        }\n      });\n    },\n    showErrorDiagnosis: function showErrorDiagnosis(row) {\n      var _this3 = this;\n      // 初始化数据\n      this.$refs.tabs.activeKey = 'checkDepend'; // 打开对话框 默认选择作业依赖\n      for (var key in this.jobCheck) {\n        this.jobCheck[key] = false;\n      }\n      this.keyJobBean = {};\n      this.collapseData = [];\n      this.showDetail(false);\n      // 查找后台配置菜单\n      var loadConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getMenuInfo',\n        params: {\n          platform: row.platform,\n          system: row.system,\n          job: row.job,\n          errorCode: row.alarmType\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          if (resp.data && resp.data.length > 0) {\n            _this3.menuData.forEach(function (menu, index) {\n              resp.data.forEach(function (d) {\n                if (Object.keys(menu)[0] == d) {\n                  _this3.jobCheck[menu[d]] = true;\n                }\n              });\n            });\n            if (row.alarmLogkeyContent) {\n              // 日志分析\n              _this3.jobCheck.isShowAnalyLog = true;\n              _this3.logContent = row.alarmLogkeyContent;\n            }\n            //\n            _this3.row = row;\n            // let sTime = utils.fmtDate(new Date(new Date().getTime() -1*60*60*1000),'yyyy-MM-dd hh:mm:ss')\n            // let eTime = utils.fmtDate(new Date(),'yyyy-MM-dd hh:mm:ss')\n            _this3.searchBaseInfo(row); // 基本信息\n            _this3.searchRecordInfoList(row); // 历史运行情况\n            _this3.searchDepend(row); // 作业依赖\n            _this3.errorDiagnosis.show = true0;\n          } else {\n            _this3.$Message.warning('当前告警码无报错诊断。');\n          }\n        }\n      });\n    },\n    formatYesOrNo: function formatYesOrNo(data) {\n      return data == 1 ? '是' : '否';\n    },\n    showDetail: function showDetail(item) {\n      // jobType strategy checkWeight\n      this.isShowFreOrTime = false;\n      this.isShowTimeTriggerData = false;\n      this.isShowFrequencyData = false;\n      this.isShowWeight = false;\n      this.isShowStrategy = false;\n      if (item === 'jobType') {\n        if (this.configData.jobType == 'M' || this.configData.jobType == 'W') {\n          this.isShowFreOrTime = true;\n          this.isShowFrequencyData = true;\n        } else if (this.configData.jobType == 'C') {\n          this.isShowFreOrTime = true;\n          this.isShowTimeTriggerData = true;\n        } else {\n          this.$Message.warning('日作业不存在定时或频度信息。');\n        }\n      } else if (item === 'strategy') {\n        if (this.configData.strategy == '0') {\n          this.$Message.warning('该分发策略无策略参数。');\n        } else if (this.configData.strategy == '1') {\n          this.isShowStrategy = true;\n        } else {\n          this.$Message.warning('该分发策略暂不支持查看。');\n        }\n      } else if (item === 'checkWeight') {\n        if (this.configData.checkWeight == 1) {\n          this.isShowWeight = true;\n        } else {\n          this.$Message.warning('未启用资源规则。');\n        }\n      }\n    },\n    getsendTypeList: function getsendTypeList() {\n      var _this4 = this;\n      var httpConfig = {\n        method: 'GET',\n        url: '/alarm/group/sendType'\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.data) {\n          _this4.sendTypeList = [];\n          var keys = Object.keys(resp.data);\n          var values = Object.values(resp.data);\n          for (var i = 0; i < keys.length; i++) {\n            var valueData = values[i];\n            var sendType = keys[i].split(';');\n            _this4.sendTypeList.push(sendType);\n            _this4.sendTypeDataBean[sendType[0]] = valueData;\n          }\n        }\n      });\n    },\n    getPlatformconcData: function getPlatformconcData(data) {\n      // 平台并发\n      // let graph = this.$echarts.init(document.getElementById('platformconc'))\n      var option = {\n        title: {\n          // text: '平台作业状态折线图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\n        },\n        xAxis: {\n          type: 'category',\n          data: data['timeList']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'runningNum',\n          data: data['running'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: 'red'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }, {\n          name: 'dispatcherNum',\n          data: data['dispatcher'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#005eaa'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }, {\n          name: 'pendingNum',\n          data: data['pending'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#61a0a8'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }]\n      };\n      this.platformconcGraph.hideLoading();\n      this.platformconcGraph.setOption(option);\n    },\n    getNodeData: function getNodeData(data) {\n      // 节点并发\n      // this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\n      var option = {\n        title: {\n          // text: '节点作业状态折线图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\n        },\n        xAxis: {\n          type: 'category',\n          data: data['timeList']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'runningNum',\n          data: data['running'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: 'red'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }, {\n          name: 'dispatcherNum',\n          data: data['dispatcher'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#005eaa'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }, {\n          name: 'pendingNum',\n          data: data['pending'],\n          type: 'line',\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#61a0a8'\n              }, {\n                offset: 1,\n                color: 'white'\n              }]\n            }\n          }\n        }]\n      };\n      this.nodeGraph.hideLoading();\n      this.nodeGraph.setOption(option);\n    },\n    searchBaseInfo: function searchBaseInfo(row) {\n      var _this5 = this;\n      if (!row.job) {\n        this.isShowJob = false;\n      }\n      var loadConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getBaseInfo',\n        params: {\n          job: row.job,\n          alarmId: row.alarmId\n        }\n      };\n      this.baseBean = {};\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          for (var key in resp.data.udsJob) {\n            _this5.baseBean[key] = resp.data.udsJob[key];\n          }\n          _this5.baseBean.alarmContent = resp.data.alarmContent;\n          _this5.baseBean.mcontactuser = resp.data.mcontactuser;\n          // 联系人信息\n          var config = {\n            method: 'GET',\n            url: '/alarm/contactUserInfo',\n            params: {\n              platform: row.platform,\n              system: row.system,\n              userName: row.mcontactuser\n            }\n          };\n          _this5.$ajax(config).then(function (res) {\n            _this5.baseBean.email = res.data.email;\n            _this5.baseBean.phone = res.data.phone;\n            _this5.$forceUpdate();\n          });\n          // alarmCnt: '' // 本月告警次数\n        }\n      });\n    },\n    searchRecordInfoList: function searchRecordInfoList(row) {\n      var _this6 = this;\n      if (!row.job) {\n        return;\n      }\n      var params = {};\n      params.job = row.job;\n      params.currentPage = 1;\n      params.pageSize = 3;\n      var httpConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getRecordInfoList',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        _this6.recordData = resp.data.rows;\n      });\n    },\n    searchDepend: function searchDepend(row) {\n      var _this7 = this;\n      if (!row.job) {\n        return;\n      }\n      var params = {\n        job: row.job,\n        errorCode: row.alarmType\n      };\n      var httpConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getDepInfo',\n        params: params\n      };\n      this.frequencyList = [];\n      this.triggerList = [];\n      this.downStreamData = [];\n      var cNumCount = [];\n      this.depSuccData = [];\n      this.depFailData = [];\n      this.rootFailData = [];\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          if (JSON.stringify(resp.data) == '{}') {\n            return;\n          }\n          var upChartData = [];\n          if (resp.data) {\n            // 上游第一层依赖>>依赖满足:\n            if (resp.data.depSucc && resp.data.depSucc.length > 0) {\n              _this7.depSuccData = resp.data.depSucc;\n              if (resp.data.depSuccFre) {\n                for (var key in resp.data.depSuccFre) {\n                  _this7.frequencyList.push(resp.data.depSuccFre[key]);\n                }\n              }\n              if (resp.data.depSuccTime) {\n                for (var _key in resp.data.depSuccTime) {\n                  _this7.triggerList.push(resp.data.depSuccTime[_key]);\n                }\n              }\n              upChartData.push(resp.data.depSucc.length);\n            } else {\n              upChartData.push(0);\n            }\n            // 上游第一层依赖>>依赖不满足:\n            if (resp.data.depFail && resp.data.depFail.length > 0) {\n              _this7.depFailData = resp.data.depFail;\n              if (resp.data.depFailFre) {\n                for (var _key2 in resp.data.depFailFre) {\n                  _this7.frequencyList.push(resp.data.depFailFre[_key2]);\n                }\n              }\n              if (resp.data.depFailTime) {\n                for (var _key3 in resp.data.depFailTime) {\n                  _this7.triggerList.push(resp.data.depFailTime[_key3]);\n                }\n              }\n              upChartData.push(resp.data.depFail.length);\n            } else {\n              upChartData.push(0);\n            }\n            // 依赖不满足的根源作业>>\n            if (resp.data.rootFail && resp.data.rootFail.length > 0) {\n              _this7.rootFailData = resp.data.rootFail;\n              if (resp.data.rootFailFre) {\n                for (var _key4 in resp.data.rootFailFre) {\n                  _this7.frequencyList.push(resp.data.rootFailFre[_key4]);\n                }\n              }\n              if (resp.data.rootFailTime) {\n                for (var _key5 in resp.data.rootFailTime) {\n                  _this7.triggerList.push(resp.data.rootFailTime[_key5]);\n                }\n              }\n              upChartData.push(resp.data.rootFail.length);\n            } else {\n              upChartData.push(0);\n            }\n            _this7.getUpstreamJob(upChartData, _this7.depSuccData, _this7.depFailData, _this7.rootFailData);\n            // 下游影响情况>>\n            _this7.isShowDoneStream = false;\n            if (resp.data.downList) {\n              var downList = resp.data.downList;\n              if (JSON.stringify(downList[0]) !== '{}') {\n                downList.forEach(function (d) {\n                  var temp = [];\n                  var cNum = 0;\n                  for (var _key6 in d) {\n                    var obj = {};\n                    obj.platform = _key6.split('_')[0];\n                    obj.system = _key6.split('_')[1];\n                    obj.affectNum = d[_key6];\n                    temp.push(obj);\n                    cNum += d[_key6];\n                  }\n                  cNumCount.push(cNum);\n                  _this7.downStreamData.push(temp);\n                });\n              } else {\n                _this7.isShowDoneStream = true;\n              }\n            } else {\n              _this7.isShowDoneStream = true;\n            }\n            setTimeout(function () {\n              _this7.getDownstreamJob(cNumCount);\n            }, 200);\n          }\n        }\n      });\n      // 影响下游关键作业>>\n      this.affectDownStringKeyJobList = [];\n      this.isShowInflunceSys = false;\n      if (row.influnceSys === '无') {\n        this.isShowInflunceSys = true;\n        this.jobCheck.isShowAnalyKeyLink = false;\n      } else {\n        var params2 = {\n          job: row.job\n        };\n        var httpConfig2 = {\n          method: 'GET',\n          url: '/merrordiagnosis/getBaseLineInfo',\n          params: params2\n        };\n        this.$ajax(httpConfig2).then(function (resp) {\n          if (resp.status && resp.status === 200) {\n            if (resp.data.length === 0) {\n              _this7.isShowInflunceSys = true;\n              _this7.jobCheck.isShowAnalyKeyLink = false;\n            } else {\n              _this7.affectDownStringKeyJobList = resp.data;\n              _this7.jobCheck.isShowAnalyKeyLink = true;\n              _this7.jobCheck.isShowCheckDepend = true; // 下游信息->影响下游关键作业>>\n            }\n          }\n        });\n      }\n    },\n    getUpstreamJob: function getUpstreamJob(data, depSuccData, depFailData, rootFailData) {\n      var _this8 = this;\n      var upstreamGraph = this.$echarts.init(document.getElementById('upstreamJob'));\n      var option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: ['上游第一层满足', '上游第一层不满足', '根源不满足']\n        },\n        yAxis: {\n          type: 'value',\n          minInterval: 1\n        },\n        grid: {\n          x: 40,\n          y: 18,\n          x2: 10,\n          y2: 20\n        },\n        series: [{\n          data: data,\n          type: 'bar',\n          barWidth: 30,\n          showBackground: true,\n          backgroundStyle: {\n            color: 'rgba(180,180,180,0.2)'\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: '#3f3b3a'\n          },\n          itemStyle: {\n            normal: {\n              color: function color(params) {\n                var colorList = ['#afd582', '#528e95', '#cd4f55'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }\n        }]\n      };\n      option && upstreamGraph.setOption(option);\n      // 默认显示上游第一层依赖不满足\n      this.$set(this.upJobInfo, 'message', '上游第一层依赖>>');\n      this.$set(this.upJobInfo, 'messageSp', '依赖不满足:');\n      this.upJobMsgStyle = 'upJobMsgRed';\n      this.upstreamData = depFailData;\n      // 点击事件\n      upstreamGraph.getZr().off('click'); // 避免事件重复执行\n      upstreamGraph.getZr().on('click', function (params) {\n        var pointlnPixel = [params.offsetX, params.offsetY];\n        if (upstreamGraph.containPixel('grid', pointlnPixel)) {\n          var xIndex = upstreamGraph.convertFromPixel({\n            seriesIndex: 0\n          }, [params.offsetX, params.offsetY])[0];\n          var xData = upstreamGraph.getOption().xAxis[0].data[xIndex];\n          _this8.upstreamData = [];\n          if (xData === '上游第一层满足') {\n            _this8.upJobMsgStyle = 'upJobMsgGreen';\n            _this8.$set(_this8.upJobInfo, 'message', '上游第一层依赖>>');\n            _this8.$set(_this8.upJobInfo, 'messageSp', '依赖满足:');\n            _this8.upstreamData = depSuccData;\n          } else if (xData === '上游第一层不满足') {\n            _this8.upJobMsgStyle = 'upJobMsgRed';\n            _this8.$set(_this8.upJobInfo, 'message', '上游第一层依赖>>');\n            _this8.$set(_this8.upJobInfo, 'messageSp', '依赖不满足:');\n            _this8.upstreamData = depFailData;\n          } else if (xData === '根源不满足') {\n            _this8.$set(_this8.upJobInfo, 'message', '依赖不满足的根源作业>>');\n            _this8.$set(_this8.upJobInfo, 'messageSp', '');\n            _this8.upstreamData = rootFailData;\n          }\n        }\n      });\n    },\n    getDownstreamJob: function getDownstreamJob(cNumCount) {\n      var _this9 = this;\n      cNumCount[3] = 0;\n      if (this.affectDownStringKeyJobList) {\n        cNumCount[3] = this.affectDownStringKeyJobList.length;\n      }\n      var downstreamGraph = this.$echarts.init(document.getElementById('downstreamJob'));\n      var option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: ['下游第一层', '下游第二层', '下游第三层', '下游关键作业']\n        },\n        yAxis: {\n          type: 'value',\n          minInterval: 1\n        },\n        grid: {\n          x: 40,\n          y: 18,\n          x2: 10,\n          y2: 20\n        },\n        series: [{\n          data: cNumCount,\n          type: 'bar',\n          barWidth: 30,\n          showBackground: true,\n          backgroundStyle: {\n            color: 'rgba(180,180,180,0.2)'\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: '#3f3b3a'\n          },\n          itemStyle: {\n            normal: {\n              color: function color(params) {\n                var colorList = ['#7bc1f2', '#7bc1f2', '#7bc1f2', '#e09599'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }\n        }]\n      };\n      option && downstreamGraph.setOption(option);\n      // 点击事件\n      downstreamGraph.getZr().off('click'); // 避免事件重复执行\n      downstreamGraph.getZr().on('click', function (params) {\n        var pointlnPixel = [params.offsetX, params.offsetY];\n        if (downstreamGraph.containPixel('grid', pointlnPixel)) {\n          var xIndex = downstreamGraph.convertFromPixel({\n            seriesIndex: 0\n          }, [params.offsetX, params.offsetY])[0];\n          var xData = downstreamGraph.getOption().xAxis[0].data[xIndex];\n          _this9.$set(_this9.showDownstreamTable, 'showFistFloor', false);\n          _this9.$set(_this9.showDownstreamTable, 'showSecondFloor', false);\n          _this9.$set(_this9.showDownstreamTable, 'showThirdFloor', false);\n          _this9.$set(_this9.showDownstreamTable, 'showKeyJob', false);\n          if (xData === '下游第一层') {\n            _this9.$set(_this9.showDownstreamTable, 'showFistFloor', true);\n          } else if (xData === '下游第二层') {\n            _this9.$set(_this9.showDownstreamTable, 'showSecondFloor', true);\n          } else if (xData === '下游第三层') {\n            _this9.$set(_this9.showDownstreamTable, 'showThirdFloor', true);\n          } else if (xData === '下游关键作业') {\n            _this9.$set(_this9.showDownstreamTable, 'showKeyJob', true);\n          }\n        }\n      });\n    },\n    // 匹配定时/频率信息\n    matchedData: function matchedData(job, type) {\n      var _this10 = this;\n      this.triggerBean = {};\n      this.frequencyBean = {};\n      if (type === 'frequency') {\n        this.frequencyList.forEach(function (d) {\n          if (d.job === job) {\n            _this10.frequencyBean = d;\n          }\n        });\n      }\n      if (type === 'trigger') {\n        this.triggerList.forEach(function (d) {\n          if (d.job === job) {\n            _this10.triggerBean = d;\n          }\n        });\n      }\n    },\n    // 调度配置检测\n    searchSchedule: function searchSchedule(row) {\n      var _this11 = this;\n      var params = {\n        job: row.job,\n        errorCode: row.alarmType\n      };\n      var httpConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getUdsConfigInfo',\n        params: params\n      };\n      this.configData = {};\n      this.timeTriggerData = {};\n      this.frequencyData = {};\n      this.weightList = [];\n      this.isShowFreOrTime = false;\n      // this.isShowTimeTriggerData = false\n      // this.isShowFrequencyData = false\n      // this.isShowWeight = false\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200 && JSON.stringify(resp.data) !== '{}') {\n          // 作业配置信息\n          for (var key in resp.data.config) {\n            _this11.configData[key] = resp.data.config[key];\n          }\n          _this11.configData.strategy = resp.data.system.strategy; // 分发策略\n          _this11.configData.strategyPro = resp.data.system.strategyPro;\n          _this11.configData.isPlatformServer = resp.data.system.system === '*' ? '是' : '否';\n          _this11.configData.maxRunJob = resp.data.system.maxRunJob;\n          _this11.configData.sourceByJob = resp.data.sourceByJob === 1 ? '是' : '否';\n          // 调度频率信息\n          if (resp.data.timeTrigger) {\n            // this.isShowFreOrTime = true\n            // this.isShowTimeTriggerData = true\n            for (var _key7 in resp.data.timeTrigger) {\n              _this11.timeTriggerData[_key7] = resp.data.timeTrigger[_key7];\n            }\n          }\n          if (resp.data.frequency) {\n            // this.isShowFreOrTime = true\n            // this.isShowFrequencyData = true\n            for (var _key8 in resp.data.frequency) {\n              _this11.frequencyData[_key8] = resp.data.frequency[_key8];\n            }\n          }\n          // 资源规则信息\n          if (resp.data.weight) {\n            // this.isShowWeight = true\n            _this11.weightList = resp.data.weight;\n          }\n          _this11.$forceUpdate();\n        }\n      });\n    },\n    searchLineGraph: function searchLineGraph() {\n      var starttime = this.lineSearchBean.start;\n      var endtime = this.lineSearchBean.end;\n      var t = (endtime - starttime) / (1000 * 3600);\n      if (starttime === '') {\n        this.$Message.warning('请输入开始时间');\n      } else if (endtime === '') {\n        this.$Message.warning('请输入结束时间');\n      } else if (starttime > endtime) {\n        this.$Message.warning('开始时间大于结束时间');\n      } else if (t > 3) {\n        this.$Message.warning('时间差值超过3小时');\n      } else {\n        starttime = utils.fmtDate(starttime, 'yyyy-MM-dd hh:mm:ss');\n        endtime = utils.fmtDate(endtime, 'yyyy-MM-dd hh:mm:ss');\n        this.searchPlatformC(this.row, starttime, endtime);\n      }\n      // this.searchPlatformC(this.row,)\n    },\n    searchPlatformC: function searchPlatformC(row, start, end) {\n      var _this12 = this;\n      this.platformconcGraph = this.$echarts.init(document.getElementById('platformconc'));\n      this.platformconcGraph.showLoading({\n        text: '数据正在加载...',\n        textStyle: {\n          fontSize: 30,\n          color: '#444'\n        }\n      });\n      this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'));\n      this.nodeGraph.showLoading({\n        text: '数据正在加载...',\n        textStyle: {\n          fontSize: 30,\n          color: '#444'\n        }\n      });\n      var params = {\n        platform: row.platform,\n        system: row.system,\n        start: start,\n        end: end,\n        node: row.serverName,\n        job: row.job,\n        errorCode: row.alarmType\n      };\n      var httpConfig = {\n        method: 'GET',\n        url: '/merrordiagnosis/getConcurrentInfo',\n        params: params\n      };\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          if (resp.data.platformStatus) {\n            _this12.getPlatformconcData(resp.data.platformStatus);\n          }\n          if (resp.data.nodeStatus) {\n            _this12.getNodeData(resp.data.nodeStatus);\n          }\n        }\n      });\n    },\n    searchLog: function searchLog(row) {\n      // if(row.alarmLogkeyContent) {\n      //   this.jobCheck.isShowAnalyLog = true\n      //   this.logContent = row.alarmLogkeyContent\n      // }\n    },\n    searchKeyLink: function searchKeyLink() {},\n    searchBaseLine: function searchBaseLine(keyJob) {\n      var _this13 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/mbaselinelines/getKeyLine/' + keyJob\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          _this13.isInitialize = false;\n          if (resp.data.length === 0) {\n            _this13.isInitialize = true;\n            return;\n          }\n          _this13.collapseData = resp.data;\n          _this13.collapseData.forEach(function (cData, j) {\n            _this13.collapseData[j].timelineItemData = [];\n            _this13.collapseData[j].baselineBean = {};\n            var arr = cData.baselines;\n            // arr[1].todayRunningStatus = 2 // 测试\n            // arr[3].estimatedEndTime = '2021-07-08 16:00' // 测试\n            // console.log(arr)\n            arr.forEach(function (bData, i) {\n              var temp = {};\n              Object.assign(temp, bData);\n              temp.lastStatus = cData.jobs[i].lastStatus;\n              temp.dispatcherTime = cData.jobs[i].dispatcherTime;\n              temp.startTime = cData.jobs[i].startTime;\n              temp.endTime = cData.jobs[i].endTime;\n              temp.jobDate = cData.jobs[i].jobDate;\n              temp.jobType = cData.jobs[i].jobType;\n              // cData.jobs[2].lastStatus = 'Dispatcher' // 测试\n              //  temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Pending' ? 'gray' : '#ff9900'))\n              // temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : '#ff9900')\n              temp.color = bData.todayRunningStatus === 1 ? 'green' : cData.jobs[i].lastStatus === 'Done' ? 'gray' : cData.jobs[i].lastStatus === 'Failed' ? 'red' : '#ff9900';\n              if (temp.color === '#ff9900') {\n                _this13.waitSignalFile = false;\n                var size = _this13.collapseData[j].timelineItemData.length;\n                for (var a = 0; a < size; a++) {\n                  _this13.collapseData[j].timelineItemData[a].todayRunningStatus = 1;\n                  _this13.collapseData[j].timelineItemData[a].isShowEstimatedTime = false;\n                  _this13.collapseData[j].timelineItemData[a].isShowWaitSignalFile = false;\n                  _this13.collapseData[j].timelineItemData[a].color = 'green';\n                }\n              }\n              temp.isShowEstimatedTime = bData.todayRunningStatus !== 1;\n              temp.isShowWaitSignalFile = false;\n              if (bData.todayRunningStatus == 2 && cData.jobs[i].lastStatus == 'Done') {\n                // 是否等待信号文件\n                temp.isShowWaitSignalFile = true;\n                _this13.waitSignalFile = true;\n              }\n              if (cData.jobs[i].lastStatus == 'Failed') {\n                _this13.waitSignalFile = true; //\n              }\n\n              _this13.collapseData[j].timelineItemData.push(temp);\n            });\n            _this13.keyJobBean.jobDate = cData.jobdate;\n            _this13.collapseData[j].baselineBean.rootJob = cData.originJob;\n          });\n          if (_this13.waitSignalFile) {\n            // 不显示预计完成时间 等待信号文件/Failed\n            for (var i = 0; i < _this13.collapseData.length; i++) {\n              _this13.collapseData[i].timelineItemData.map(function (t) {\n                t.isShowEstimatedTime = false;\n              });\n            }\n          }\n          _this13.keyJobBean.baselineTime = utils.fmtDate(new Date(resp.data[0].alarmTime), 'yyyy-MM-dd hh:mm:ss');\n          _this13.formatBaselineBean(resp.data[0].alarmTime);\n          setTimeout(function () {\n            _this13.defaultPanel = ['0'];\n          }, 200);\n        }\n      });\n      // this.loadOneKeyJob(keyJob)\n    },\n    formatBaselineBean: function formatBaselineBean(alarmTime) {\n      var _this14 = this;\n      this.collapseData.forEach(function (d, i) {\n        var index = d.baselines.length - 1;\n        if (d.baselines[index].estimatedEndTime !== null) {\n          var stime = new Date(d.baselines[index].estimatedEndTime);\n          var etime = new Date(alarmTime);\n          var str1 = _this14.subtracTime(stime, etime);\n          if (etime > stime) {\n            _this14.collapseData[i].baselineBean.restTime = str1;\n            _this14.collapseData[i].baselineBean.status = '安全';\n          } else {\n            _this14.collapseData[i].baselineBean.restTime = '-' + str1;\n            _this14.collapseData[i].baselineBean.status = '破线';\n          }\n          if (!_this14.waitSignalFile) {\n            _this14.collapseData[i].baselineBean.estimatedCompTime = d.baselines[index].estimatedEndTime;\n          }\n        }\n      });\n    },\n    changeJobTest: function changeJobTest(name) {\n      if (name === 'checkDepend') {\n        this.searchDepend(this.row);\n      } else if (name === 'checkSchedule') {\n        this.searchSchedule(this.row);\n      } else if (name === 'analysisPlatPerformance') {\n        var start = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime() - 2 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss');\n        var end = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime()), 'yyyy-MM-dd hh:mm:ss');\n        this.lineSearchBean = {\n          start: start,\n          end: end\n        };\n        this.searchPlatformC(this.row, start, end);\n      } else if (name === 'analysisLog') {\n        this.searchLog(this.row);\n      } else if (name === 'analysisKeyLink') {\n        // this.searchKeyLink(this.row)\n        if (this.affectDownStringKeyJobList) {\n          this.searchBaseLine(this.affectDownStringKeyJobList[0]);\n        }\n      }\n    },\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\n    bindData: function bindData(fields) {\n      try {\n        var data = Object.assign({}, this.transData.initFormBean);\n        if (fields) {\n          // 进行可选字段初始化\n          var _iterator = _createForOfIteratorHelper(fields),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var field = _step.value;\n              this.formBean[field] = data[field];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          // 进行全量字段初始化（默认是只有主表的主键的）\n          this.formBean = Object.assign({}, data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\r\n    * 下载\r\n    **/\n    download: function download() {\n      var params = {};\n      Object.assign(params, this.formBean);\n      params.type = 'excel';\n      utils.download(RESOURCE_PATH + '/downLoad', params);\n    },\n    getPageParam: function getPageParam() {\n      return {\n        formBean: this.alarmBean,\n        currentPage: this.page.current,\n        pageSize: this.page.size\n      };\n    },\n    /**\r\n    * 查询\r\n    **/\n    search: function search() {\n      var _this15 = this;\n      var params = {};\n      params = Object.assign({}, this.alarmBean);\n      if (this.alarmBean.localDate) {\n        params.localDate = utils.fmtDate(this.alarmBean.localDate, 'yyyy-MM-dd');\n      }\n      params.current = this.page.current;\n      params.size = this.page.size;\n      for (var key in params) {\n        if (key === 'job' && params[key]) {\n          params[key] = params[key].trim().toUpperCase();\n        }\n      }\n      var httpConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH,\n        params: params\n      };\n      this.loading = true;\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          _this15.alarmGridData = resp.data.records;\n          _this15.page.total = resp.data.total;\n        }\n        _this15.loading = false;\n      });\n    },\n    subtracTime: function subtracTime(stime, etime) {\n      var result;\n      if (etime > stime) {\n        result = Math.floor((etime - stime) / 1000);\n      } else {\n        result = Math.floor((stime - etime) / 1000);\n      }\n      var h = Math.floor(result / 3600) < 10 ? '0' + Math.floor(result / 3600) : Math.floor(result / 3600);\n      var m = Math.floor(result % 3600 / 60) < 10 ? '0' + Math.floor(result % 3600 / 60) : Math.floor(result % 3600 / 60);\n      var s = result % 3600 % 60 < 10 ? '0' + result % 3600 % 60 : result % 3600 % 60;\n      var str = h + ':' + m + ':' + s;\n      return str;\n    },\n    formatTime: function formatTime(minute) {\n      var day = 0;\n      var hour = 0;\n      if (minute > 60) {\n        hour = parseInt(minute / 60);\n        minute = parseInt(minute % 60);\n        if (hour > 24) {\n          day = parseInt(hour / 24);\n          hour = parseInt(hour % 24);\n        }\n      }\n      var result = '';\n      if (minute > 0) {\n        result = '' + parseInt(minute) + '分钟';\n      }\n      if (hour > 0) {\n        result = '' + parseInt(hour) + '小时' + result;\n      }\n      if (day > 0) {\n        result = '' + parseInt(day) + '天' + result;\n      }\n      return result;\n    },\n    /**\r\n    * 清空\r\n    **/\n    clear: function clear() {\n      this.alarmBean = {};\n      this.page = {\n        current: 1,\n        size: 10\n      };\n    },\n    /**\r\n    * 新增\r\n    **/\n    add: function add() {\n      this.$emit('switch');\n    },\n    /**\r\n    * 删除\r\n    **/\n    del: function del() {\n      var _this16 = this;\n      var ids = Array.from(this.selection, function (e) {\n        return e.databaseId;\n      });\n      ids.forEach(function (id) {\n        _this16.request.delReq.url = RESOURCE_PATH + '/' + id;\n        _this16.request.delReq.method = 'DELETE';\n        _this16.$ajax(_this16.request.delReq).then(function (resp) {\n          _this16.search();\n        });\n      });\n    },\n    /**\r\n    * 数据复选事件\r\n    **/\n    select: function select(selection) {\n      this.selection = selection;\n    },\n    /**\r\n    * 改变页码事件\r\n    **/\n    changePage: function changePage(currentPage) {\n      this.page.current = currentPage;\n      this.search();\n    },\n    /**\r\n    * 改变分页大小事件\r\n    **/\n    changePageSize: function changePageSize(pageSize) {\n      this.page.size = pageSize;\n      this.search();\n    },\n    cancel: function cancel() {},\n    switchTab: function switchTab(tabName) {\n      for (var key in this.tabObj) {\n        this.tabObj[key] = false;\n      }\n      this.tabObj[tabName] = true;\n    },\n    haltAlarm: function haltAlarm(alarmId, alarmStatus, index, row) {\n      var _this17 = this;\n      if (alarmStatus == '1') {\n        this.$Message.info('请选择未处理的告警操作');\n        return;\n      }\n      if (alarmStatus == '2') {\n        alarmStatus = '0';\n      } else if (alarmStatus == '0') {\n        alarmStatus = '2';\n      }\n      var httpConfig = {\n        url: RESOURCE_PATH,\n        data: {\n          alarmStatus: alarmStatus,\n          job: row.job,\n          authps: row.platform + row.system\n        }\n      };\n      httpConfig.method = 'PUT';\n      httpConfig.url = RESOURCE_PATH + '/' + alarmId;\n      this.$ajax(httpConfig).then(function (resp) {\n        if (resp.status && resp.status === 200) {\n          _this17.alarmGridData[index].alarmStatus = alarmStatus;\n        }\n      }).catch(function (error) {\n        console.error('login exception:' + error);\n      });\n    },\n    errorHandleOk: function errorHandleOk() {\n      var _this18 = this;\n      this.$refs.alarmHandleForm.validate(function (valid) {\n        if (!valid) return;\n        var httpConfig = {\n          method: 'GET',\n          url: RESOURCE_PATH + '/operater',\n          params: {\n            key: _this18.formBean.operationType,\n            alarmId: _this18.formBean.id\n          }\n        };\n        _this18.$ajax(httpConfig).then(function (resp) {\n          console.log(resp);\n          if (resp.data === true) {\n            // this.alarmGridData[this.formBean.index].alarmStatus = this.formBean.alarmStatus\n            _this18.errorHandle.show = false;\n            _this18.search();\n          }\n        });\n      });\n    },\n    errorHandleBack: function errorHandleBack() {\n      this.$refs.operationTypeSelect.classes[1]['ivu-form-item-error'] = false;\n      if (this.$refs.operationTypeSelect.$el.children[1].children[1]) {\n        this.$refs.operationTypeSelect.$el.children[1].children[1].remove();\n      }\n      this.errorHandle.show = false;\n    },\n    showErrorHandle: function showErrorHandle(errorObj, index) {\n      var _this19 = this;\n      var operaterConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/getOperater',\n        params: {}\n      };\n      this.$ajax(operaterConfig).then(function (resp) {\n        _this19.formBean = {};\n        _this19.errorHandle.show = true;\n        _this19.formBean.id = errorObj.id;\n        _this19.formBean.operationUser = sessionStorage.username;\n        _this19.formBean.operationTime = utils.fmtDate(new Date(), 'yyyy-MM-dd hh24:mm:ss');\n        _this19.formBean = Object.assign({}, _this19.formBean);\n        if (resp.data) {\n          _this19.operationTypeList = resp.data;\n        }\n      });\n    },\n    /**\r\n    * 列排序\r\n    **/\n    changeSort: function changeSort(column) {\n      var classcon = window.event.currentTarget.className;\n      // let sort, order\n      var order;\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\n        order = 'ASC';\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\n        order = 'DESC';\n      }\n      this.alarmBean.order = order;\n      this.alarmBean.sort = column.key;\n      this.search();\n    },\n    queryAlarmList: function queryAlarmList() {\n      this.search();\n    },\n    loadErrorCodeList: function loadErrorCodeList() {\n      var _this20 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: RESOURCE_PATH + '/errorCodeList',\n        params: {}\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data.rows) {\n          resp.data.rows.forEach(function (data) {\n            var tmp = {};\n            tmp.value = data.code;\n            tmp.label = data.code;\n            _this20.alarmTypelist.push(tmp);\n          });\n        }\n      });\n    },\n    loaduser: function loaduser() {\n      var _this21 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: 'user/getUserList',\n        params: {}\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        if (resp.data) {\n          resp.data.forEach(function (data) {\n            _this21.userlist[data.user_id] = data.userchname;\n            _this21.userMap[data.username] = data.userchname;\n          });\n        }\n        _this21.search();\n      });\n    },\n    queryPlatform: function queryPlatform() {\n      var _this22 = this;\n      var platformList = this.$store.getters.getUserPlatform();\n      platformList.forEach(function (data) {\n        var tmp = {};\n        tmp.value = data;\n        tmp.label = data;\n        _this22.platformData.push(tmp);\n      });\n    },\n    querySystem: function querySystem() {\n      var _this23 = this;\n      this.systemData = [];\n      this.$refs.refsystem.setQuery('');\n      if (this.alarmBean.platform) {\n        var userSystemList = this.$store.getters.getUserSystem();\n        var userSystem = userSystemList[this.alarmBean.platform];\n        userSystem.forEach(function (data) {\n          var tmp = {};\n          tmp.value = data;\n          tmp.label = data;\n          _this23.systemData.push(tmp);\n        });\n      }\n    },\n    tomain: function tomain() {\n      for (var key in this.transData.tabObj) {\n        this.transData.tabObj[key] = false;\n      }\n      this.transData.tabObj['alarmTab'] = true;\n    },\n    scrollInter: function scrollInter() {\n      var _this24 = this;\n      this.showData.splice(0, 1);\n      setTimeout(function () {\n        _this24.listData.push(_this24.listData[0]);\n        // this.showData = [];\n        // this.showData.splice(0,1);\n        _this24.showData.splice(0, 1, _this24.listData[0]);\n        _this24.listData.shift();\n      }, 0);\n    },\n    enter: function enter() {\n      clearInterval(this.timer);\n    },\n    leave: function leave() {\n      this.timer = setInterval(this.scrollInter, 10000);\n    },\n    downloadLogfile: function downloadLogfile(row) {\n      var _this25 = this;\n      var params = {};\n      params.job = row.job;\n      params.logDir = row.logDir;\n      params.logName = row.logName;\n      params.check = '1';\n      var config = {\n        url: '/merrordiagnosis/downloadLogfile',\n        method: 'GET',\n        params: params\n      };\n      this.$ajax(config).then(function (resp) {\n        if (resp.data.returnCode && resp.data.returnCode == 'fail') {\n          _this25.$Message.warning({\n            content: '日志不存在,请检查作业是否为虚作业!',\n            duration: 5,\n            closable: true\n          });\n        } else {\n          params.check = '0';\n          utils.download('/merrordiagnosis/downloadLogfile', params);\n        }\n      });\n    },\n    downloadScriptfile: function downloadScriptfile(row) {\n      var _this26 = this;\n      var params = {};\n      params.scriptName = row.scriptName;\n      params.job = row.job;\n      params.platform = row.platform;\n      params.system = row.system;\n      params.check = '1';\n      var config = {\n        url: '/merrordiagnosis/downloadScriptfile',\n        method: 'GET',\n        params: params\n      };\n      this.$ajax(config).then(function (resp) {\n        if (resp.data.returnCode && resp.data.returnCode == 'fail') {\n          _this26.$Message.warning({\n            content: '脚本不存在,请检查脚本是否存在!',\n            duration: 5,\n            closable: true\n          });\n        } else {\n          params.check = '0';\n          utils.download('/udsjobsteprecord/downloadScriptfile', params);\n        }\n      });\n    },\n    addZero: function addZero(time) {\n      var str = time;\n      if (time < 10) {\n        str = '0' + time;\n      }\n      return str;\n    },\n    queryjobtypeList: function queryjobtypeList() {\n      var _this27 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'jobtype'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this27.jobtypeList = {};\n        resp.data.rows.forEach(function (data) {\n          _this27.jobtypeList[data.dicValue] = data.dicName;\n        });\n      });\n    },\n    querylocationList: function querylocationList() {\n      var _this28 = this;\n      var loadConfig = {\n        method: 'GET',\n        url: '/dictionary',\n        params: {\n          dicCode: 'location'\n        }\n      };\n      this.$ajax(loadConfig).then(function (resp) {\n        _this28.locationList = {};\n        resp.data.rows.forEach(function (data) {\n          _this28.locationList[data.dicValue] = data.dicName;\n        });\n      });\n    }\n  },\n  computed: {},\n  /**\r\n  * 视图挂载\r\n  **/\n  mounted: function mounted() {\n    // this.loaduser();\n    this.alarmBean.localDate = utils.fmtDate(new Date(), 'yyyy-MM-dd');\n    // this.loadErrorCodeList()\n    this.init();\n    // this.listMUdsDutyByChDay()\n    this.queryPlatform();\n    this.timer = setInterval(this.scrollInter, 10000);\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.timer);\n  }\n};",{"version":3,"names":["utils","store","RESOURCE_PATH","props","transData","type","Object","default","_default","data","_this","validAlarmStatus","rule","value","callback","Error","noJobCheckList","upJobMsgStyle","upJobInfo","message","messageSp","strategyList","jobtypeList","locationList","showDownstreamTable","showFistFloor","showSecondFloor","showThirdFloor","showKeyJob","jobCheck","isShowCheckDepend","isShowCheckSchedule","isShowAnalyPlatPer","isShowAnalyLog","isShowAnalyKeyLink","menuData","waitSignalFile","isInitialize","defaultPanel","collapseData","baselineBean","keyJobBean","showSendTypeData","sendTypeBean","sendTypeList","sendTypeDataBean","timelineItemData","lineSearchBean","start","end","frequencyList","triggerList","triggerBean","frequencyBean","timeTriggerOp","show","frequencyOp","logContent","configData","timeTriggerData","frequencyData","weightList","isShowFreOrTime","isShowTimeTriggerData","isShowFrequencyData","isShowWeight","isShowStrategy","row","platformData","systemData","loading","errorHandle","title","id","isShowJob","isShowInflunceSys","isShowDoneStream","affectDownStringKeyJobList","downStreamData","downStreamColumns","key","align","upstreamColumns","minWidth","render","h","_ref","column","index","size","style","marginRight","color","on","click","job","jobType","matchedData","$Message","warning","upstreamData","rootFailData","depSuccData","depFailData","baseBean","jobDate","pendingTime","dispatcherTime","startTime","endTime","alarmContent","mcontactuser","lastStatus","alarmCnt","recordColumns","width","_ref2","href","logDir","downloadLogfile","logName","_ref3","scriptPath","downloadScriptfile","scriptName","ellipsis","tooltip","sortable","_ref4","serverName","params","endTimeStr","fmtDate","etime","elapsed","str","e","Date","substring","s","second","parseInt","getTime","hourTime","minuteTime","secondTime","Math","floor","addZero","returnCode","recordData","formRule","operationType","required","operationTime","operationUser","alarmStatus","validator","trigger","alarmFormRule","localDate","alarmTypelist","userlist","userMap","userIds","cuInfo","errorDiagnosis","cuInfoFormBean","operations","label","operationTypeList","alarmstatusList","alarmBean","alarmTime","formBean","tabObj","alarmTab","jobdetail","showTable","request","delReq","method","url","addReq","gridColumns","_ref5","jobStatus","$emit","assign","statusName","jobData","getPageParam","_ref6","texts","content","length","slice","str1","str0","display","overflow","textOverflow","whiteSpace","domProps","_ref7","showCuInfo","noticeGroupName","_ref8","_ref9","icon","margin","fontSize","border","padding","backgroundColor","_ref10","showErrorHandle","alarmGridData","selection","page","current","total","opt","listData","showData","timer","platformconcGraph","nodeGraph","methods","init","search","getsendTypeList","_this2","config","groupName","$ajax","then","resp","console","log","sendParams","oldSendType","JSON","parse","sendTypeData","sendType","oldSendTypeKeys","keys","i","showKey","j","param","push","showErrorDiagnosis","_this3","$refs","tabs","activeKey","showDetail","loadConfig","platform","system","errorCode","alarmType","status","forEach","menu","d","alarmLogkeyContent","searchBaseInfo","searchRecordInfoList","searchDepend","true0","formatYesOrNo","item","strategy","checkWeight","_this4","httpConfig","values","valueData","split","getPlatformconcData","option","legend","xAxis","yAxis","series","name","areaStyle","x","y","x2","y2","colorStops","offset","hideLoading","setOption","getNodeData","_this5","alarmId","udsJob","userName","res","email","phone","$forceUpdate","_this6","currentPage","pageSize","rows","_this7","cNumCount","stringify","upChartData","depSucc","depSuccFre","depSuccTime","depFail","depFailFre","depFailTime","rootFail","rootFailFre","rootFailTime","getUpstreamJob","downList","temp","cNum","obj","affectNum","setTimeout","getDownstreamJob","influnceSys","params2","httpConfig2","_this8","upstreamGraph","$echarts","document","getElementById","axisPointer","minInterval","grid","barWidth","showBackground","backgroundStyle","position","itemStyle","normal","colorList","dataIndex","$set","getZr","off","pointlnPixel","offsetX","offsetY","containPixel","xIndex","convertFromPixel","seriesIndex","xData","getOption","_this9","downstreamGraph","_this10","searchSchedule","_this11","strategyPro","isPlatformServer","maxRunJob","sourceByJob","timeTrigger","frequency","weight","searchLineGraph","starttime","endtime","t","searchPlatformC","_this12","showLoading","text","textStyle","node","platformStatus","nodeStatus","searchLog","searchKeyLink","searchBaseLine","keyJob","_this13","cData","arr","baselines","bData","jobs","todayRunningStatus","a","isShowEstimatedTime","isShowWaitSignalFile","jobdate","rootJob","originJob","map","baselineTime","formatBaselineBean","_this14","estimatedEndTime","stime","subtracTime","restTime","estimatedCompTime","changeJobTest","bindData","fields","initFormBean","_iterator","_createForOfIteratorHelper","_step","n","done","field","err","f","error","download","_this15","trim","toUpperCase","records","result","m","formatTime","minute","day","hour","clear","add","del","_this16","ids","Array","from","databaseId","select","changePage","changePageSize","cancel","switchTab","tabName","haltAlarm","_this17","info","authps","catch","errorHandleOk","_this18","alarmHandleForm","validate","valid","errorHandleBack","operationTypeSelect","classes","$el","children","remove","errorObj","_this19","operaterConfig","sessionStorage","username","changeSort","classcon","window","event","currentTarget","className","order","indexOf","sort","queryAlarmList","loadErrorCodeList","_this20","tmp","code","loaduser","_this21","user_id","userchname","queryPlatform","_this22","platformList","$store","getters","getUserPlatform","querySystem","_this23","refsystem","setQuery","userSystemList","getUserSystem","userSystem","tomain","scrollInter","_this24","splice","shift","enter","clearInterval","leave","setInterval","_this25","check","duration","closable","_this26","time","queryjobtypeList","_this27","dicCode","dicValue","dicName","querylocationList","_this28","computed","mounted","destroyed"],"sources":["src/view/app/alarm/opjobsummary/Errorlist.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div v-if=\"tabObj.alarmTab\">\r\n\t\t\t<Form ref=\"alarmForm\" :label-width=\"80\" :rules=\"alarmFormRule\" :model=\"alarmBean\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem prop=\"localDate\" label=\"告警日期\">\r\n\t\t\t\t\t\t\t<DatePicker :transfer=\"true\" type=\"date\" parse=\"yyyy-MM-dd\" format=\"yyyy-MM-dd\" v-model=\"alarmBean.localDate\"></DatePicker>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem prop=\"platform\" label=\"平台名\">\r\n\t\t\t\t\t\t\t<Select filterable v-model=\"alarmBean.platform\" @on-change=\"querySystem\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n\t\t\t\t\t\t\t<Select ref=\"refsystem\" filterable v-model=\"alarmBean.system\" placeholder=\"先选平台\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"5\">\r\n\t\t\t\t\t\t<FormItem label=\"作业名\">\r\n\t\t\t\t\t\t\t\t<Input v-model=\"alarmBean.job\" placeholder=\"支持模糊查询\" type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\"/>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<!-- <Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"告警状态码\">\r\n\t\t\t\t\t\t\t<Select filterable  v-model=\"alarmBean.alarmType\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in alarmTypelist\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col> -->\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"告警状态\">\r\n\t\t\t\t\t\t\t<Select filterable  v-model=\"alarmBean.alarmStatus\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in alarmstatusList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"1\" >\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\" >\r\n\t\t\t\t\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">查询</Button>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<!-- <Col span=\"2\" >\r\n\t\t\t\t\t\t<FormItem label=\" \" :label-width=\"50\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">查询</Button>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\" >\r\n\t\t\t\t\t\t<FormItem label=\" \" :label-width=\"40\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"android-close\" @click=\"clear\">清除</Button>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col> -->\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t\t<div id=\"alarmList\" class=\"spdb-table\" style=\"margin-top:5px;\" v-if=\"transData.tabObj.showTable\">\r\n\t\t\t\t<Table :loading=\"loading\" :columns=\"gridColumns\" :data=\"alarmGridData\" @on-sort-change=\"changeSort\" stripe>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"spdb-page\" v-if=\"transData.tabObj.showTable\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<Modal\r\n\t\t\tv-model=\"cuInfo.show\"\r\n\t\t\ttitle=\"联系组详细信息\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :model=\"cuInfoFormBean\" ref=\"cuInfoHandleForm\" :label-width=\"90\" inline>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"platform\" label=\"平台\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.platform\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"systems\" label=\"应用\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.systems\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem  style='width:75%' prop=\"groupName\" label=\"组名\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.groupName\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"sendType\" label=\"发送类型\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.sendType\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row  v-for=\"(infor, i) in showSendTypeData\" :key=\"`infor-${i}`\">\r\n              <FormItem  style='width:75%'  :label=\"infor[0]\">\r\n                <Input readonly v-model=\"infor[1]\" />\r\n              </FormItem>\r\n            </Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t\t<Modal\r\n\t\t\tv-model=\"errorHandle.show\"\r\n\t\t\ttitle=\"处理告警\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :model=\"formBean\" ref=\"alarmHandleForm\" :label-width=\"80\" :rules=\"formRule\" inline>\r\n            <Row>\r\n\t\t\t\t\t\t\t<FormItem  style='width:75%' ref=\"operationTypeSelect\" prop=\"operationType\" label=\"处理类型\">\r\n\t\t\t\t\t\t\t\t<Select filterable  v-model=\"formBean.operationType\" >\r\n\t\t\t\t\t\t\t\t\t<Option v-for=\"item in operationTypeList\" :value=\"item[0]\" :key=\"item[0]\">{{ item[1] }}</Option>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"md-add\" @click=\"errorHandleOk\">保存</Button>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"errorHandleBack\">取消</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n    <Modal\r\n      id=\"errorDiagnosisOp\"\r\n      v-model=\"errorDiagnosis.show\"\r\n\t\t\t:title=\"'报错诊断>>'+baseBean.job\"\r\n\t\t\t:mask-closable=\"false\"\r\n      width=\"90%\"\r\n      scrollable\r\n      @on-cancel=\"errorDiagnosis.show = false\">\r\n      <!-- <div style=\"max-height:60vh;overflow-y:auto;overflow-x:hidden\"> -->\r\n      <div>\r\n        <Row>\r\n          <Col span=\"24\" class=\"baseInfo\">\r\n            <Tabs value=\"baseInfo\">\r\n              <TabPane label=\"基本信息\" icon=\"md-menu\" name=\"baseInfo\">\r\n                <Row>\r\n                  <Col style=\"margin-left:2%;line-height: 350%\">\r\n                    <!-- <Row v-if=\"isShowJob\">\r\n                      <Col span=\"24\">作业名:<span class=\"base-message\">{{baseBean.job}}</span></Col>\r\n                    </Row> -->\r\n                    <Row v-if=\"isShowJob\">\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">当前数据日期:</span>\r\n                        <span class=\"base-message\">{{baseBean.jobDate}}</span>\r\n                      </Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">当前作业状态:</span>\r\n                        <span class=\"base-message\">{{baseBean.lastStatus}}</span>\r\n                        </Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">等待时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.pendingTime}}</span></Col>\r\n                    </Row>\r\n                    <Row v-if=\"isShowJob\">\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">分发时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.dispatcherTime}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">开始时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.startTime}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">结束时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.endTime}}</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">联系人:</span>\r\n                        <span class=\"base-message\">{{baseBean.mcontactuser}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">手机号:</span>\r\n                        <span class=\"base-message\">{{baseBean.phone}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">邮箱:</span>\r\n                        <span class=\"base-message\">{{baseBean.email}}</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span=\"24\">\r\n                        <span class=\"base-title\">告警内容:</span>\r\n                        <span class=\"base-message\">{{baseBean.alarmContent}}</span></Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane label=\"历史运行情况\" icon=\"md-menu\" name=\"recordInfo\">\r\n                <Row span=\"24\">\r\n                  <Table border size=\"small\" :columns=\"recordColumns\" :data=\"recordData\" stripe ></Table>\r\n                </Row>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n        <Row style=\"margin-top:1%\">\r\n          <Col span=\"24\">\r\n            <Row type=\"flex\" align=\"middle\">\r\n              <Col style=\"margin-left:1%\" span=\"2\">\r\n                <!-- <Icon type=\"android-menu\" style=\"color:#2d8cf0;font-size:16px\"></Icon>\r\n                <span class=\"diag-title\">作业诊断</span> -->\r\n              </Col>\r\n              <!-- <Col span=\"22\">\r\n                <hr style=\"background-color:#eceaea;height:1px;border:none;\"/>\r\n              </Col> -->\r\n            </Row>\r\n            <Row>\r\n              <Tabs value=\"checkDepend\" id=\"tabs\" ref=\"tabs\"  @on-click=\"changeJobTest\" type=\"card\">\r\n                <TabPane v-if=\"jobCheck.isShowCheckDepend\" label=\"依赖检测\" name=\"checkDepend\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Col span=\"14\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\" style=\"height:15%\">\r\n                          <p slot=\"title\">上游信息</p>\r\n                          <div id=\"upstreamJob\" style=\"height:15vh\"></div>\r\n                          <div id=\"upstream\" style=\"text-align:left;margin-top:25px\">\r\n                            <p>{{upJobInfo.message}} <span :class=\"upJobMsgStyle\">{{upJobInfo.messageSp}}</span></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"upstreamData && upstreamData.length>0 ? true : false\" :columns=\"upstreamColumns\" :data=\"upstreamData\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"10\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\" style=\"height:15%\">\r\n                          <p slot=\"title\">下游信息</p>\r\n                          <div id=\"downstreamJob\" style=\"height:15vh\"></div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showFistFloor\">\r\n                            <p>下游第一层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[0] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[0]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showSecondFloor\">\r\n                            <p>下游第二层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[1] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[1]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showThirdFloor\">\r\n                            <p>下游第三层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[2] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[2]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showKeyJob\">\r\n                            <p>影响下游关键作业>></p>\r\n                            <Card style=\"height:180px;overflow-y:auto\">\r\n                              <div style=\"text-align:left\">\r\n                                <div v-for=\"(item,index) in affectDownStringKeyJobList\" :key=\"index\">\r\n                                  <span style=\"margin-left:5%\">{{item}}</span>\r\n                                </div>\r\n                              </div>\r\n                              <div v-if=\"isShowInflunceSys\">\r\n                                <p style=\"text-align:center\">暂无数据</p>\r\n                              </div>\r\n                            </Card>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowCheckSchedule\" label=\"调度配置检测\" name=\"checkSchedule\" icon=\"checkmark-circled\">\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">作业配置信息</p>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">所属平台名:</span>\r\n                          <span class=\"base-message\">{{configData.platform}}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">所属应用名:</span>\r\n                          <span class=\"base-message\">{{ configData.system }}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">作业名:</span>\r\n                          <span  class=\"base-message\">{{ configData.job }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">作业中文名:</span>\r\n                          <span class=\"base-message\">{{ configData.jobName }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">作业类型:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('jobType')\">{{ jobtypeList[configData.jobType] }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">偏移天数:</span>\r\n                          <span class=\"base-message\">{{configData.offsetDay}}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">单多批次:</span>\r\n                          <span class=\"base-message\">{{ configData.multiBatch }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">时间窗口:</span>\r\n                          <span class=\"base-message\">{{ configData.timewindow }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">是否启用:</span>\r\n                          <span class=\"base-message\">{{ formatYesOrNo(configData.isEnable) }}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">是否置虚:</span>\r\n                          <span class=\"base-message\">{{ formatYesOrNo(configData.virtualEnable) }}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">是否启用资源规则:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('checkWeight')\">{{ formatYesOrNo(configData.checkWeight) }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">是否外部信号文件触发:</span>\r\n                          <span class=\"base-message\">{{ configData.sourceByJob }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">优先级(1-1000):</span>\r\n                          <span class=\"base-message\">{{ configData.priority }}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">分发策略:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('strategy')\">{{ strategyList[configData.strategy] }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">是否采用平台并发:</span>\r\n                          <span class=\"base-message\">{{ configData.isPlatformServer }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">并发上限:</span>\r\n                          <span class=\"base-message\">{{ configData.maxRunJob }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">逻辑集群:</span>\r\n                          <span class=\"base-message\">{{ locationList[configData.dbControl] }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px\" v-if=\"isShowFreOrTime\">\r\n                    <Card :bordered=\"false\">\r\n                        <p slot=\"title\">调度频率信息</p>\r\n                        <div v-if=\"isShowTimeTriggerData\" style=\"line-height: 300%\">\r\n                          <Row>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">偏移天数:</span>\r\n                                <span class=\"base-message\">{{timeTriggerData.offsetDay}}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">开始时间:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.startTime }}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">结束时间:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.endTime }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">秒:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.second }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">分:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.minute }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">天:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.day }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">月:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.month }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">周:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.week }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">年:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.year }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                        <div v-if=\"isShowFrequencyData\" style=\"line-height: 300%\">\r\n                          <Row>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">天:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.day }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">月:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.month }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">周:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.week }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">年:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.year }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\" v-if=\"isShowWeight\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">资源规则信息</p>\r\n                        <div v-for=\"(item,index) in weightList\" :key=\"index\">\r\n                          <Row>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">资源类型:</span>\r\n                              <span class=\"base-message\">{{item.limit_type}}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">资源上限:</span>\r\n                              <span class=\"base-message\">{{ item.conf_value }}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">占用资源数:</span>\r\n                              <span class=\"base-message\">{{ item.limit_value }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\" v-if=\"isShowStrategy\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">策略参数</p>\r\n                        <div>\r\n                          <Row>\r\n                            <Col span=\"20\">\r\n                              <span class=\"base-title\">{{strategyList[configData.strategy]}}:</span>\r\n                              <span class=\"base-message\"> {{ configData.strategyPro }} </span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyPlatPer\" label=\"平台性能分析\" name=\"analysisPlatPerformance\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Form ref=\"lineSearchForm\" :model=\"lineSearchBean\" :label-width=\"80\">\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <FormItem prop=\"start\" label=\"开始时间\">\r\n                            <DatePicker v-model=\"lineSearchBean.start\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择日期时间\"></DatePicker>\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <FormItem prop=\"end\" label=\"结束时间\">\r\n                            <DatePicker v-model=\"lineSearchBean.end\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择日期时间\"></DatePicker>\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col offset=\"1\" span=\"2\">\r\n                          <div class=\"spdb-toolbar\">\r\n                            <Button type=\"primary\" icon=\"ios-search\" @click=\"searchLineGraph\">查询</Button>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span=\"12\">\r\n                      <div style=\"background:#eee;padding: 5px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">平台作业状态折线图</p>\r\n                            <div id=\"platformconc\" class=\"line_box\"></div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                      <div style=\"background:#eee;padding: 5px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">节点作业状态折线图 {{baseBean.serverName}}</p>\r\n                            <div id=\"nodeconc\" class=\"line_box\"></div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyLog\" label=\"日志分析\" name=\"analysisLog\" icon=\"checkmark-circled\">\r\n                  <div style=\"background:#eee;padding: 3px\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">日志</p>\r\n                      <div>\r\n                        <p>{{logContent}}</p>\r\n                      </div>\r\n                    </Card>\r\n                  </div>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyKeyLink\" label=\"关键链路分析\" name=\"analysisKeyLink\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Col span=\"6\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">关键作业</p>\r\n                            <div style=\"height:37vh;overflow-y:auto\">\r\n                              <div v-for=\"(item,index) in affectDownStringKeyJobList\" :key=\"index\">\r\n                                <a @click=\"searchBaseLine(item)\">{{item}}</a>\r\n                              </div>\r\n                            </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"18\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\">\r\n                          <p slot=\"title\">\r\n                            关键作业链路\r\n                            <span v-if=\"!isInitialize\" style=\"float:right;margin-right:8px;color:#676767\">\r\n                              批量数据日期: {{keyJobBean.jobDate}}&#8195\r\n                              基线承诺时间: {{keyJobBean.baselineTime}}\r\n                            </span>\r\n                          </p>\r\n                          <span v-if=\"isInitialize\">暂无数据，请稍后重试...</span>\r\n                          <div style=\"height:37vh;overflow-y:auto\" v-if=\"!isInitialize\">\r\n                            <!-- <p>\r\n                              批量数据日期: {{keyJobBean.jobDate}}&#8195\r\n                              基线承诺时间: {{keyJobBean.baselineTime}}\r\n                            </p> -->\r\n                            <Collapse v-model=\"defaultPanel\">\r\n                              <Panel v-for=\"(panel,index) in collapseData\" :name=\"index + ''\" :key=\"index\">\r\n                                    <span style=\"font-weight: bold\">关键链路</span>&#8195\r\n                                    根源作业:\r\n                                    {{panel.baselineBean.rootJob}} &#8195\r\n                                    余量时间:\r\n                                    {{panel.baselineBean.restTime}}&#8195\r\n                                    基线状态:\r\n                                    <span :style=\"{'color': panel.baselineBean.status == '安全' ? 'green':'red'}\">{{panel.baselineBean.status}}&#8195</span>\r\n                                    预计完成时间:\r\n                                    {{panel.baselineBean.estimatedCompTime}}\r\n                                <div slot=\"content\">\r\n                                <Timeline>\r\n                                  <TimelineItem v-for=\"(item,index) in panel.timelineItemData\" :key=\"index\" :color=\"item.color\">\r\n                                    <Icon type=\"ios-radio-button-on\" slot=\"dot\"></Icon>\r\n                                    <p style=\"font-size:12px;font-weight: 600\">{{item.job}}</p>\r\n                                    <p style=\"color:#ff9900\" class=\"content\" v-if=\"item.isShowWaitSignalFile\">等待信号文件触发...</p>\r\n                                    <p class=\"content\" v-if=\"item.isShowEstimatedTime\">\r\n                                      预计分发时间：{{item.estimatedDispatcherTime}} |\r\n                                      预计完成时间：{{item.estimatedEndTime}}\r\n                                    </p>\r\n                                    <p class=\"content\">\r\n                                      作业状态：{{item.lastStatus}} |\r\n                                      分发时间：{{item.dispatcherTime}} |\r\n                                      开始时间：{{item.startTime}} |\r\n                                      结束时间：{{item.endTime}} |\r\n                                      作业日期：{{item.jobDate}} |\r\n                                      作业类型：{{item.jobType}}\r\n                                    </p>\r\n                                  </TimelineItem>\r\n                                </Timeline>\r\n                                </div>\r\n                              </Panel>\r\n                            </Collapse>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </Tabs>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n    <Modal\r\n      id=\"timeTriggerOp\"\r\n      v-model=\"timeTriggerOp.show\"\r\n      title=\"定时信息\"\r\n      width=\"25%\"\r\n      >\r\n      <div style=\"margin-left:7%\">\r\n        <Row>\r\n          <Col span=\"24\">\r\n            <span>下次执行时间:   {{triggerBean.startTime}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>秒:    {{triggerBean.second}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>分:   {{triggerBean.minute}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>时:   {{triggerBean.hour}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>日:   {{triggerBean.day}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>月:   {{triggerBean.month}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>周:   {{triggerBean.week}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>年:   {{triggerBean.year}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>偏移天数:   {{triggerBean.offsetDay}}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n    <Modal\r\n      id=\"frequencyOp\"\r\n      v-model=\"frequencyOp.show\"\r\n      title=\"频率信息\"\r\n      width=\"25%\"\r\n      >\r\n      <div style=\"margin-left:7%\">\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>日:   {{frequencyBean.day}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>月:   {{frequencyBean.month}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>周:   {{frequencyBean.week}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>年:   {{frequencyBean.year}}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n// import * as echarts from \"echarts\";\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\n// const platforms = store.getters.getPlatforms\r\nconst RESOURCE_PATH = '/alarm'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const validAlarmStatus = (rule, value, callback) => {\r\n      if (value === '0') {\r\n        return callback(new Error('告警状态不能为未处理'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    return {\r\n      noJobCheckList: [100, 101, 300, 301, 302, 303, 304, 400, 409, 420, 430, 450],\r\n      upJobMsgStyle: 'upJobMsgGreen',\r\n      upJobInfo: {\r\n        message: '',\r\n        messageSp: ''\r\n      },\r\n      strategyList: {\r\n        '0': '普通策略',\r\n        '1': '指定机器分发机器',\r\n        '2': '指定机器序号分发',\r\n        '3': '指定机器标签分发'\r\n      },\r\n      jobtypeList: {},\r\n      locationList: {},\r\n      showDownstreamTable: {\r\n        showFistFloor: true,\r\n        showSecondFloor: false,\r\n        showThirdFloor: false,\r\n        showKeyJob: false\r\n      },\r\n      jobCheck: {\r\n        isShowCheckDepend: false,\r\n        isShowCheckSchedule: false,\r\n        isShowAnalyPlatPer: false,\r\n        isShowAnalyLog: false,\r\n        isShowAnalyKeyLink: false\r\n      },\r\n      menuData: [\r\n        { '100': 'isShowCheckDepend' },\r\n        { '101': 'isShowCheckSchedule' },\r\n        { '102': 'isShowAnalyPlatPer' },\r\n        { '103': 'isShowAnalyLog' },\r\n        { '104': 'isShowAnalyKeyLink' }\r\n      ],\r\n      waitSignalFile: false,\r\n      isInitialize: false,\r\n      defaultPanel: [],\r\n      collapseData: [],\r\n      baselineBean: {},\r\n      keyJobBean: {},\r\n      showSendTypeData: [],\r\n      sendTypeBean: {},\r\n      sendTypeList: [],\r\n      sendTypeDataBean: {},\r\n      timelineItemData: [],\r\n      lineSearchBean: {\r\n        start: '',\r\n        end: ''\r\n      },\r\n      frequencyList: [],\r\n      triggerList: [],\r\n      triggerBean: {},\r\n      frequencyBean: {},\r\n      timeTriggerOp: {\r\n        show: false\r\n      },\r\n      frequencyOp: {\r\n        show: false\r\n      },\r\n      logContent: '',\r\n      configData: {},\r\n      timeTriggerData: {},\r\n      frequencyData: {},\r\n      weightList: [],\r\n      isShowFreOrTime: false,\r\n      isShowTimeTriggerData: false,\r\n      isShowFrequencyData: false,\r\n      isShowWeight: false,\r\n      isShowStrategy: false,\r\n      row: {},\r\n      platformData: [],\r\n      systemData: [],\r\n      loading: false,\r\n      errorHandle: {\r\n        show: false,\r\n        title: '',\r\n        id: ''\r\n      },\r\n      isShowJob: true,\r\n      isShowInflunceSys: false,\r\n      isShowDoneStream: false,\r\n      affectDownStringKeyJobList: [],\r\n      downStreamData: [],\r\n      downStreamColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'system',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '影响数量',\r\n          key: 'affectNum',\r\n          align: 'center'\r\n        }\r\n      ],\r\n      upstreamColumns: [\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 200\r\n        },\r\n        {\r\n          title: 'job_date',\r\n          key: 'jobDate',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          minWidth: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.matchedData(row.job, 'frequency')\r\n                      this.frequencyOp.show = true\r\n                    } else if (row.jobType == 'C') {\r\n                      this.matchedData(row.job, 'trigger')\r\n                      this.timeTriggerOp.show = true\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          key: 'lastStatus',\r\n          minWidth: 120\r\n        }\r\n      ],\r\n      upstreamData: [],\r\n      rootFailData: [],\r\n      depSuccData: [],\r\n      depFailData: [],\r\n      baseBean: {\r\n        job: '',\r\n        jobDate: '',\r\n        pendingTime: '',\r\n        dispatcherTime: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        alarmContent: '',\r\n        mcontactuser: '',\r\n        lastStatus: '',\r\n        alarmCnt: ''\r\n      },\r\n      recordColumns: [\r\n        {\r\n          title: '执行次数',\r\n          width: 100,\r\n          key: 'numTimes'\r\n        },\r\n        {\r\n          title: 'log',\r\n          key: 'logName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.logDir,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadLogfile(row)\r\n                  }\r\n                }\r\n              }, row.logName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'script',\r\n          key: 'scriptName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, row.scriptName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          width: 180,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          width: 180,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (endTimeStr == '2099') {\r\n              endTimeStr = ''\r\n            } else {\r\n              endTimeStr = params.row.endTime\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, endTimeStr)\r\n          }\r\n        },\r\n        {\r\n          title: '耗时',\r\n          width: 100,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let etime = null\r\n            let startTime = null\r\n            let elapsed = ''\r\n            let str = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (str == '2099') {\r\n              elapsed = ''\r\n            } else {\r\n              etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss')\r\n              startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss')\r\n              let e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6))\r\n\t\t        \tlet s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6))\r\n              // let ss=\r\n              let second = parseInt((e.getTime() -  s.getTime())) / 1000\r\n              let hourTime = 0\r\n              let minuteTime = 0\r\n              let secondTime = 0\r\n              if (second > 60) {\r\n                minuteTime = Math.floor(second / 60)\r\n                secondTime = Math.floor(second % 60)\r\n                if (minuteTime >= 60) {\r\n                  hourTime = Math.floor(minuteTime / 60)\r\n                  minuteTime = Math.floor(minuteTime % 60)\r\n                } else {\r\n                  hourTime = 0\r\n                }\r\n              } else {\r\n                hourTime = 0\r\n                minuteTime = 0\r\n                if (second == 60) {\r\n                  minuteTime = 1\r\n                  secondTime = 0\r\n                } else {\r\n                  secondTime = second\r\n                }\r\n              }\r\n              elapsed = this.addZero(hourTime) + ':' + this.addZero(minuteTime) + ':' + this.addZero(secondTime)\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, elapsed)\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          width: 110,\r\n          key: 'jobDate'\r\n        },\r\n        {\r\n          title: '运行状态',\r\n          width: 110,\r\n          key: 'returnCode',\r\n          render: (h, params) => {\r\n            let str = ''\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (params.row.returnCode == 0) {\r\n              str = 'Done'\r\n            } else {\r\n              str = 'Failed'\r\n            }\r\n            if (endTimeStr == '2099') {\r\n              str = 'Running'\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        }\r\n      ],\r\n      recordData: [],\r\n      formRule: {\r\n        operationType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationTime: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationUser: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        alarmStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }, { validator: validAlarmStatus, trigger: 'blur' }]\r\n      },\r\n      alarmFormRule: {\r\n        localDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      alarmTypelist: [],\r\n      userlist: {},\r\n      userMap: {},\r\n      userIds: {},\r\n      cuInfo: {\r\n        show: false\r\n      },\r\n      errorDiagnosis: {\r\n        show: false\r\n      },\r\n      cuInfoFormBean: {},\r\n      operations: [\r\n        {\r\n          label: '置虚跳过',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '再次执行',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '手工触发',\r\n          value: '2'\r\n        },\r\n        {\r\n          label: '置Done',\r\n          value: '3'\r\n        },\r\n        {\r\n          label: '中止执行',\r\n          value: '4'\r\n        },\r\n        {\r\n          label: '自动完成',\r\n          value: '5'\r\n        }\r\n      ],\r\n      operationTypeList: [],\r\n      alarmstatusList: [\r\n        {\r\n          label: '未处理',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '已处理',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '暂停告警',\r\n          value: '2'\r\n        }],\r\n      alarmBean: { alarmTime: utils.fmtDate(new Date(), 'yyyy-MM-dd') },\r\n      formBean: {},\r\n      tabObj: { alarmTab: true, jobdetail: false, showTable: true },\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      gridColumns: [\r\n        // {\r\n        //   width: 90,\r\n        //   title: '序号',\r\n        //   align: 'center',\r\n        //   sortable: true,\r\n        //   key: 'id',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('a', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // fontSize: '32px',\r\n        //           // fontWeight: 'normal',\r\n        //           // color: '#7EC0EE'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             // Object.assign({},{id: id, statusName: \"jobdetail\",alarmTab: false},this.getPageParam())\r\n        //             this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n        //           }\r\n        //         }\r\n        //       }, row.id)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '平台名',\r\n          width: 64,\r\n          sortable: true,\r\n          align: 'center',\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          sortable: true,\r\n          width: 64,\r\n          align: 'center',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          // align: 'center',\r\n          minWidth: 250,\r\n          // maxWidth: 400,\r\n          sortable: true,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // fontSize: '32px',\r\n                  // fontWeight: 'normal',\r\n                  // color: '#7EC0EE'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n\r\n                    // let id = row.job\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n\r\n                    // let id = row.job\r\n                    // this.transData.jobName = row.job\r\n                    // this.switchTab('jobdetail'); //提交form事件，在parent中显示form\r\n                    // this.tabObj.alarmTab = false\r\n                    // // Object.assign({}, {id: id,statusName: \"alarmlog\",jobData: row},this.getPageParam())\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '告警码',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 80,\r\n          key: 'alarmType'\r\n        },\r\n        {\r\n          title: '告警时间',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 160,\r\n          key: 'times'\r\n        },\r\n        {\r\n          title: '告警内容',\r\n          sortable: true,\r\n          // align: 'center',\r\n          minWidth: 150,\r\n          // maxWidth: 450,\r\n          ellipsis: true,\r\n          key: 'content',\r\n          render: (h, { column, index, row }) => {\r\n            let color = 'green'\r\n            let texts = ''\r\n            if (row.alarmStatus === 'WARN') {\r\n              color = 'red'\r\n            } else if (row.alarmStatus === 'DEAL') {\r\n              color = '#FF8E16'\r\n            } else if (row.alarmStatus === 'END') {\r\n              color = 'black'\r\n            }\r\n            texts = row.content\r\n            if (texts != null) {\r\n              if (texts.length > 10) {\r\n                texts = texts.slice(0, 10) + '...'\r\n              } else {\r\n                texts = row.content\r\n              }\r\n            } else {\r\n              return\r\n            }\r\n            let str = row.content\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n            str1 = str1 + str\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1\r\n                }\r\n              }, [\r\n                h('span', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    color: color\r\n                  }\r\n                }, row.content)\r\n              ])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理时间',\r\n          width: 120,\r\n          align: 'center',\r\n          key: 'operationTime'\r\n          // render: (h, {column, index, row}) => {\r\n\r\n          // }\r\n        },\r\n        // {\r\n        //   title: '影响关键应用',\r\n        //   minWidth: 90,\r\n        //   maxWidth: 100,\r\n        //   key: 'influnceSys',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('span', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showCuInfo(row)\r\n        //           }\r\n        //         }\r\n        //       }, row.influnceSys)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '联系组',\r\n          width: 90,\r\n          align: 'center',\r\n          key: 'noticeGroupName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showCuInfo(row)\r\n                  }\r\n                }\r\n              }, this.userMap[row.noticeGroupName] ? this.userMap[row.noticeGroupName] : row.noticeGroupName)\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '报错诊断',\r\n        //   width: 80,\r\n        //   align: 'center',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     let dis = false\r\n        //     let col = '#2d8cf0'\r\n        //     if (row.alarmType) {\r\n        //       if (this.noJobCheckList.includes(parseInt(row.alarmType))) {\r\n        //         dis = true\r\n        //         col = '#bbbec4'\r\n        //       }\r\n        //     }\r\n        //     // this.noJobCheckList\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'text',\r\n        //           disabled: dis\r\n        //         },\r\n        //         style: {\r\n        //           fontSize: '14px',\r\n        //           color: col,\r\n        //           // background: 0 0 ,\r\n        //           backgroundColor: 'rgb(0, 0, 0, 0)',\r\n        //           textDecoration: 'none',\r\n        //           outline: '0',\r\n        //           cursor: 'pointer'\r\n        //           // transition: color .2s ease\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showErrorDiagnosis(row)\r\n        //           }\r\n        //         }\r\n        //       }, '详情')\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '详情',\r\n          width: 50,\r\n          // fixed: 'right',\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理登记',\r\n          align: 'center',\r\n          width: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '10px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showErrorHandle(row, index)\r\n                  }\r\n                }\r\n              }, '登记')\r\n\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      alarmGridData: [],\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 100,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      listData: [],\r\n      showData: [],\r\n      timer: null,\r\n      // graph: null,\r\n      platformconcGraph: null,\r\n      nodeGraph: null\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      this.search()\r\n      this.getsendTypeList()\r\n      // if (this.transData.currentPage) {\r\n      //   this.alarmBean = this.transData.formBean\r\n      //   this.page.current = this.transData.currentPage\r\n      //   this.page.size = this.transData.pageSize\r\n      // }\r\n      // if (!this.alarmBean.platform) {\r\n      //   if (!platforms.includes('ROLE_ADMIN')) {\r\n      //     this.alarmBean.platform = platforms[0]\r\n      //     this.querySystem()\r\n      //   }\r\n      // }\r\n      // this.loaduser()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.querylocationList()\r\n    },\r\n    showCuInfo (row) {\r\n      this.showSendTypeData = []\r\n      this.cuInfoFormBean = {}\r\n      this.cuInfo.show = true\r\n      const config = {\r\n        method: 'GET',\r\n        url: '/alarm/group/getDetailByGroupName',\r\n        params: { groupName: row.noticeGroupName }\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.cuInfoFormBean = resp.data[0]\r\n            console.log(this.cuInfoFormBean.sendParams)\r\n            let oldSendType = JSON.parse(this.cuInfoFormBean.sendParams)\r\n            let sendTypeData = this.sendTypeDataBean[this.cuInfoFormBean.sendType]\r\n            // 循环取出自定义的key和系统中的key\r\n            let oldSendTypeKeys = Object.keys(oldSendType)\r\n            for (let i = 0; i < oldSendTypeKeys.length; i++) {\r\n              let key = oldSendTypeKeys[i]\r\n              let showKey = key\r\n              for (let j = 0; j < sendTypeData.length; j++) {\r\n                if (key === sendTypeData[j][1]) {\r\n                  showKey = sendTypeData[j][0]\r\n                  break\r\n                }\r\n              }\r\n              let param = []\r\n              param.push(showKey)\r\n              param.push(oldSendType[key])\r\n              this.showSendTypeData.push(param)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    showErrorDiagnosis (row) {\r\n      // 初始化数据\r\n      this.$refs.tabs.activeKey = 'checkDepend' // 打开对话框 默认选择作业依赖\r\n      for (let key in this.jobCheck) {\r\n        this.jobCheck[key] = false\r\n      }\r\n      this.keyJobBean = {}\r\n      this.collapseData = []\r\n      this.showDetail(false)\r\n      // 查找后台配置菜单\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getMenuInfo',\r\n        params: {\r\n          platform: row.platform,\r\n          system: row.system,\r\n          job: row.job,\r\n          errorCode: row.alarmType\r\n        }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.menuData.forEach((menu, index) => {\r\n              resp.data.forEach(d => {\r\n                if (Object.keys(menu)[0] == d) {\r\n                  this.jobCheck[menu[d]] = true\r\n                }\r\n              })\r\n            })\r\n            if (row.alarmLogkeyContent) { // 日志分析\r\n              this.jobCheck.isShowAnalyLog = true\r\n              this.logContent = row.alarmLogkeyContent\r\n            }\r\n            //\r\n            this.row = row\r\n            // let sTime = utils.fmtDate(new Date(new Date().getTime() -1*60*60*1000),'yyyy-MM-dd hh:mm:ss')\r\n            // let eTime = utils.fmtDate(new Date(),'yyyy-MM-dd hh:mm:ss')\r\n            this.searchBaseInfo(row) // 基本信息\r\n            this.searchRecordInfoList(row) // 历史运行情况\r\n            this.searchDepend(row) // 作业依赖\r\n            this.errorDiagnosis.show = true0\r\n          } else {\r\n            this.$Message.warning('当前告警码无报错诊断。')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatYesOrNo (data) {\r\n      return data == 1 ? '是' : '否'\r\n    },\r\n    showDetail (item) {\r\n      // jobType strategy checkWeight\r\n      this.isShowFreOrTime = false\r\n      this.isShowTimeTriggerData = false\r\n      this.isShowFrequencyData = false\r\n      this.isShowWeight = false\r\n      this.isShowStrategy = false\r\n      if (item === 'jobType') {\r\n        if (this.configData.jobType == 'M' || this.configData.jobType == 'W') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowFrequencyData = true\r\n        } else if (this.configData.jobType == 'C') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowTimeTriggerData = true\r\n        } else {\r\n          this.$Message.warning('日作业不存在定时或频度信息。')\r\n        }\r\n      } else if (item === 'strategy') {\r\n        if (this.configData.strategy == '0') {\r\n          this.$Message.warning('该分发策略无策略参数。')\r\n        } else if (this.configData.strategy == '1') {\r\n          this.isShowStrategy = true\r\n        } else {\r\n          this.$Message.warning('该分发策略暂不支持查看。')\r\n        }\r\n      } else if (item === 'checkWeight') {\r\n        if (this.configData.checkWeight == 1) {\r\n          this.isShowWeight = true\r\n        } else {\r\n          this.$Message.warning('未启用资源规则。')\r\n        }\r\n      }\r\n    },\r\n    getsendTypeList () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/group/sendType'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.sendTypeList = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let valueData = values[i]\r\n              let sendType = keys[i].split(';')\r\n              this.sendTypeList.push(sendType)\r\n              this.sendTypeDataBean[sendType[0]] = valueData\r\n            }\r\n          }\r\n        })\r\n    },\r\n    getPlatformconcData (data) { // 平台并发\r\n      // let graph = this.$echarts.init(document.getElementById('platformconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '平台作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.platformconcGraph.hideLoading()\r\n      this.platformconcGraph.setOption(option)\r\n    },\r\n    getNodeData (data) { // 节点并发\r\n      // this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '节点作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.nodeGraph.hideLoading()\r\n      this.nodeGraph.setOption(option)\r\n    },\r\n    searchBaseInfo (row) {\r\n      if (!row.job) {\r\n        this.isShowJob = false\r\n      }\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getBaseInfo',\r\n        params: {\r\n          job: row.job,\r\n          alarmId: row.alarmId\r\n        }\r\n      }\r\n      this.baseBean = {}\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          for (let key in resp.data.udsJob) {\r\n            this.baseBean[key] = resp.data.udsJob[key]\r\n          }\r\n          this.baseBean.alarmContent = resp.data.alarmContent\r\n          this.baseBean.mcontactuser = resp.data.mcontactuser\r\n          // 联系人信息\r\n          const config = {\r\n            method: 'GET',\r\n            url: '/alarm/contactUserInfo',\r\n            params: { platform: row.platform, system: row.system, userName: row.mcontactuser }\r\n          }\r\n          this.$ajax(config)\r\n            .then(res => {\r\n              this.baseBean.email = res.data.email\r\n              this.baseBean.phone = res.data.phone\r\n              this.$forceUpdate()\r\n            })\r\n        // alarmCnt: '' // 本月告警次数\r\n        }\r\n      })\r\n    },\r\n    searchRecordInfoList (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = {}\r\n      params.job = row.job\r\n      params.currentPage = 1\r\n      params.pageSize = 3\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getRecordInfoList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.recordData = resp.data.rows\r\n        })\r\n    },\r\n    searchDepend (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getDepInfo',\r\n        params: params\r\n      }\r\n      this.frequencyList = []\r\n      this.triggerList = []\r\n      this.downStreamData = []\r\n      let cNumCount = []\r\n      this.depSuccData = []\r\n      this.depFailData = []\r\n      this.rootFailData = []\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (JSON.stringify(resp.data) == '{}') {\r\n              return\r\n            }\r\n            let upChartData = []\r\n            if (resp.data) {\r\n              // 上游第一层依赖>>依赖满足:\r\n              if (resp.data.depSucc && resp.data.depSucc.length > 0) {\r\n                this.depSuccData = resp.data.depSucc\r\n                if (resp.data.depSuccFre) {\r\n                  for (let key in resp.data.depSuccFre) {\r\n                    this.frequencyList.push(resp.data.depSuccFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depSuccTime) {\r\n                  for (let key in resp.data.depSuccTime) {\r\n                    this.triggerList.push(resp.data.depSuccTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depSucc.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 上游第一层依赖>>依赖不满足:\r\n              if (resp.data.depFail && resp.data.depFail.length > 0) {\r\n                this.depFailData = resp.data.depFail\r\n                if (resp.data.depFailFre) {\r\n                  for (let key in resp.data.depFailFre) {\r\n                    this.frequencyList.push(resp.data.depFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depFailTime) {\r\n                  for (let key in resp.data.depFailTime) {\r\n                    this.triggerList.push(resp.data.depFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 依赖不满足的根源作业>>\r\n              if (resp.data.rootFail && resp.data.rootFail.length > 0) {\r\n                this.rootFailData = resp.data.rootFail\r\n                if (resp.data.rootFailFre) {\r\n                  for (let key in resp.data.rootFailFre) {\r\n                    this.frequencyList.push(resp.data.rootFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.rootFailTime) {\r\n                  for (let key in resp.data.rootFailTime) {\r\n                    this.triggerList.push(resp.data.rootFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.rootFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              this.getUpstreamJob(upChartData, this.depSuccData, this.depFailData, this.rootFailData)\r\n              // 下游影响情况>>\r\n              this.isShowDoneStream = false\r\n              if (resp.data.downList) {\r\n                let downList = resp.data.downList\r\n                if (JSON.stringify(downList[0]) !== '{}') {\r\n                  downList.forEach(d => {\r\n                    let temp = []\r\n                    let cNum = 0\r\n                    for (let key in d) {\r\n                      let obj = {}\r\n                      obj.platform = key.split('_')[0]\r\n                      obj.system = key.split('_')[1]\r\n                      obj.affectNum = d[key]\r\n                      temp.push(obj)\r\n                      cNum += d[key]\r\n                    }\r\n                    cNumCount.push(cNum)\r\n                    this.downStreamData.push(temp)\r\n                  })\r\n                } else {\r\n                  this.isShowDoneStream = true\r\n                }\r\n              } else {\r\n                this.isShowDoneStream = true\r\n              }\r\n              setTimeout(() => {\r\n                this.getDownstreamJob(cNumCount)\r\n              }, 200)\r\n            }\r\n          }\r\n        })\r\n      // 影响下游关键作业>>\r\n      this.affectDownStringKeyJobList = []\r\n      this.isShowInflunceSys = false\r\n      if (row.influnceSys === '无') {\r\n        this.isShowInflunceSys = true\r\n        this.jobCheck.isShowAnalyKeyLink = false\r\n      } else {\r\n        let params2 = { job: row.job }\r\n        let httpConfig2 = {\r\n          method: 'GET',\r\n          url: '/merrordiagnosis/getBaseLineInfo',\r\n          params: params2\r\n        }\r\n        this.$ajax(httpConfig2)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              if (resp.data.length === 0) {\r\n                this.isShowInflunceSys = true\r\n                this.jobCheck.isShowAnalyKeyLink = false\r\n              } else {\r\n                this.affectDownStringKeyJobList = resp.data\r\n                this.jobCheck.isShowAnalyKeyLink = true\r\n                this.jobCheck.isShowCheckDepend = true // 下游信息->影响下游关键作业>>\r\n              }\r\n            }\r\n          })\r\n      }\r\n    },\r\n    getUpstreamJob (data, depSuccData, depFailData, rootFailData) {\r\n      let upstreamGraph = this.$echarts.init(document.getElementById('upstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['上游第一层满足', '上游第一层不满足', '根源不满足']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: data,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#afd582', '#528e95', '#cd4f55']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && upstreamGraph.setOption(option)\r\n      // 默认显示上游第一层依赖不满足\r\n      this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n      this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n      this.upJobMsgStyle = 'upJobMsgRed'\r\n      this.upstreamData = depFailData\r\n      // 点击事件\r\n      upstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      upstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (upstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = upstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = upstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.upstreamData = []\r\n          if (xData === '上游第一层满足') {\r\n            this.upJobMsgStyle = 'upJobMsgGreen'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖满足:')\r\n            this.upstreamData = depSuccData\r\n          } else if (xData === '上游第一层不满足') {\r\n            this.upJobMsgStyle = 'upJobMsgRed'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n            this.upstreamData = depFailData\r\n          } else if (xData === '根源不满足') {\r\n            this.$set(this.upJobInfo, 'message', '依赖不满足的根源作业>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '')\r\n            this.upstreamData = rootFailData\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getDownstreamJob (cNumCount) {\r\n      cNumCount[3] = 0\r\n      if (this.affectDownStringKeyJobList) {\r\n        cNumCount[3] = this.affectDownStringKeyJobList.length\r\n      }\r\n      let downstreamGraph = this.$echarts.init(document.getElementById('downstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['下游第一层', '下游第二层', '下游第三层', '下游关键作业']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: cNumCount,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#7bc1f2', '#7bc1f2', '#7bc1f2', '#e09599']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && downstreamGraph.setOption(option)\r\n      // 点击事件\r\n      downstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      downstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (downstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = downstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = downstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.$set(this.showDownstreamTable, 'showFistFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showSecondFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showThirdFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showKeyJob', false)\r\n          if (xData === '下游第一层') {\r\n            this.$set(this.showDownstreamTable, 'showFistFloor', true)\r\n          } else if (xData === '下游第二层') {\r\n            this.$set(this.showDownstreamTable, 'showSecondFloor', true)\r\n          } else if (xData === '下游第三层') {\r\n            this.$set(this.showDownstreamTable, 'showThirdFloor', true)\r\n          } else if (xData === '下游关键作业') {\r\n            this.$set(this.showDownstreamTable, 'showKeyJob', true)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 匹配定时/频率信息\r\n    matchedData (job, type) {\r\n      this.triggerBean = {}\r\n      this.frequencyBean = {}\r\n      if (type === 'frequency') {\r\n        this.frequencyList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.frequencyBean = d\r\n          }\r\n        })\r\n      }\r\n      if (type === 'trigger') {\r\n        this.triggerList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.triggerBean = d\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 调度配置检测\r\n    searchSchedule (row) {\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getUdsConfigInfo',\r\n        params: params\r\n      }\r\n      this.configData = {}\r\n      this.timeTriggerData = {}\r\n      this.frequencyData = {}\r\n      this.weightList = []\r\n      this.isShowFreOrTime = false\r\n      // this.isShowTimeTriggerData = false\r\n      // this.isShowFrequencyData = false\r\n      // this.isShowWeight = false\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200 && JSON.stringify(resp.data) !== '{}') {\r\n            // 作业配置信息\r\n            for (let key in resp.data.config) {\r\n              this.configData[key] = resp.data.config[key]\r\n            }\r\n            this.configData.strategy = resp.data.system.strategy // 分发策略\r\n            this.configData.strategyPro = resp.data.system.strategyPro\r\n            this.configData.isPlatformServer = resp.data.system.system === '*' ? '是' : '否'\r\n            this.configData.maxRunJob = resp.data.system.maxRunJob\r\n            this.configData.sourceByJob = resp.data.sourceByJob === 1 ? '是' : '否'\r\n            // 调度频率信息\r\n            if (resp.data.timeTrigger) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowTimeTriggerData = true\r\n              for (let key in resp.data.timeTrigger) {\r\n                this.timeTriggerData[key] = resp.data.timeTrigger[key]\r\n              }\r\n            }\r\n            if (resp.data.frequency) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowFrequencyData = true\r\n              for (let key in resp.data.frequency) {\r\n                this.frequencyData[key] = resp.data.frequency[key]\r\n              }\r\n            }\r\n            // 资源规则信息\r\n            if (resp.data.weight) {\r\n              // this.isShowWeight = true\r\n              this.weightList = resp.data.weight\r\n            }\r\n            this.$forceUpdate()\r\n          }\r\n        })\r\n    },\r\n    searchLineGraph () {\r\n      let starttime = this.lineSearchBean.start\r\n      let endtime = this.lineSearchBean.end\r\n      let t = (endtime - starttime) / (1000 * 3600)\r\n      if (starttime === '') {\r\n        this.$Message.warning('请输入开始时间')\r\n      } else if (endtime === '') {\r\n        this.$Message.warning('请输入结束时间')\r\n      } else if (starttime > endtime) {\r\n        this.$Message.warning('开始时间大于结束时间')\r\n      } else if (t > 3) {\r\n        this.$Message.warning('时间差值超过3小时')\r\n      } else {\r\n        starttime = utils.fmtDate(starttime, 'yyyy-MM-dd hh:mm:ss')\r\n        endtime = utils.fmtDate(endtime, 'yyyy-MM-dd hh:mm:ss')\r\n        this.searchPlatformC(this.row, starttime, endtime)\r\n      }\r\n      // this.searchPlatformC(this.row,)\r\n    },\r\n    searchPlatformC (row, start, end) {\r\n      this.platformconcGraph = this.$echarts.init(document.getElementById('platformconc'))\r\n      this.platformconcGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      this.nodeGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      let params = { platform: row.platform, system: row.system, start: start, end: end, node: row.serverName, job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getConcurrentInfo',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (resp.data.platformStatus) {\r\n              this.getPlatformconcData(resp.data.platformStatus)\r\n            }\r\n            if (resp.data.nodeStatus) {\r\n              this.getNodeData(resp.data.nodeStatus)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    searchLog (row) {\r\n      // if(row.alarmLogkeyContent) {\r\n      //   this.jobCheck.isShowAnalyLog = true\r\n      //   this.logContent = row.alarmLogkeyContent\r\n      // }\r\n    },\r\n    searchKeyLink () {\r\n\r\n    },\r\n    searchBaseLine (keyJob) {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mbaselinelines/getKeyLine/' + keyJob\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          this.isInitialize = false\r\n          if (resp.data.length === 0) {\r\n            this.isInitialize = true\r\n            return\r\n          }\r\n          this.collapseData = resp.data\r\n          this.collapseData.forEach((cData, j) => {\r\n            this.collapseData[j].timelineItemData = []\r\n            this.collapseData[j].baselineBean = {}\r\n            let arr = cData.baselines\r\n            // arr[1].todayRunningStatus = 2 // 测试\r\n            // arr[3].estimatedEndTime = '2021-07-08 16:00' // 测试\r\n            // console.log(arr)\r\n            arr.forEach((bData, i) => {\r\n              let temp = {}\r\n              Object.assign(temp, bData)\r\n              temp.lastStatus = cData.jobs[i].lastStatus\r\n              temp.dispatcherTime = cData.jobs[i].dispatcherTime\r\n              temp.startTime = cData.jobs[i].startTime\r\n              temp.endTime = cData.jobs[i].endTime\r\n              temp.jobDate = cData.jobs[i].jobDate\r\n              temp.jobType = cData.jobs[i].jobType\r\n              // cData.jobs[2].lastStatus = 'Dispatcher' // 测试\r\n              //  temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Pending' ? 'gray' : '#ff9900'))\r\n              // temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : '#ff9900')\r\n              temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Failed' ? 'red' : '#ff9900'))\r\n              if (temp.color === '#ff9900') {\r\n                this.waitSignalFile = false\r\n                let size = this.collapseData[j].timelineItemData.length\r\n                for (let a = 0; a < size; a++) {\r\n                  this.collapseData[j].timelineItemData[a].todayRunningStatus = 1\r\n                  this.collapseData[j].timelineItemData[a].isShowEstimatedTime = false\r\n                  this.collapseData[j].timelineItemData[a].isShowWaitSignalFile = false\r\n                  this.collapseData[j].timelineItemData[a].color = 'green'\r\n                }\r\n              }\r\n              temp.isShowEstimatedTime = bData.todayRunningStatus !== 1\r\n              temp.isShowWaitSignalFile = false\r\n              if (bData.todayRunningStatus == 2 && cData.jobs[i].lastStatus == 'Done') { // 是否等待信号文件\r\n                temp.isShowWaitSignalFile = true\r\n                this.waitSignalFile = true\r\n              }\r\n              if (cData.jobs[i].lastStatus == 'Failed') {\r\n                this.waitSignalFile = true //\r\n              }\r\n              this.collapseData[j].timelineItemData.push(temp)\r\n            })\r\n            this.keyJobBean.jobDate = cData.jobdate\r\n            this.collapseData[j].baselineBean.rootJob = cData.originJob\r\n          })\r\n          if (this.waitSignalFile) { // 不显示预计完成时间 等待信号文件/Failed\r\n            for (let i = 0; i < this.collapseData.length; i++) {\r\n              this.collapseData[i].timelineItemData.map(t => {\r\n                t.isShowEstimatedTime = false\r\n              })\r\n            }\r\n          }\r\n          this.keyJobBean.baselineTime = utils.fmtDate(new Date(resp.data[0].alarmTime), 'yyyy-MM-dd hh:mm:ss')\r\n          this.formatBaselineBean(resp.data[0].alarmTime)\r\n          setTimeout(() => {\r\n            this.defaultPanel = ['0']\r\n          }, 200)\r\n        }\r\n      })\r\n      // this.loadOneKeyJob(keyJob)\r\n    },\r\n    formatBaselineBean (alarmTime) {\r\n      this.collapseData.forEach((d, i) => {\r\n        let index = d.baselines.length - 1\r\n        if (d.baselines[index].estimatedEndTime !== null) {\r\n          let stime = new Date(d.baselines[index].estimatedEndTime)\r\n          let etime = new Date(alarmTime)\r\n          let str1 = this.subtracTime(stime, etime)\r\n          if (etime > stime) {\r\n            this.collapseData[i].baselineBean.restTime = str1\r\n            this.collapseData[i].baselineBean.status = '安全'\r\n          } else {\r\n            this.collapseData[i].baselineBean.restTime = '-' + str1\r\n            this.collapseData[i].baselineBean.status = '破线'\r\n          }\r\n          if (!this.waitSignalFile) {\r\n            this.collapseData[i].baselineBean.estimatedCompTime = d.baselines[index].estimatedEndTime\r\n          }\r\n        }\r\n      })\r\n    },\r\n    changeJobTest (name) {\r\n      if (name === 'checkDepend') {\r\n        this.searchDepend(this.row)\r\n      } else if (name === 'checkSchedule') {\r\n        this.searchSchedule(this.row)\r\n      } else if (name === 'analysisPlatPerformance') {\r\n        let start = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime() - 2 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss')\r\n        let end = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime()), 'yyyy-MM-dd hh:mm:ss')\r\n        this.lineSearchBean = { start: start, end: end }\r\n        this.searchPlatformC(this.row, start, end)\r\n      } else if (name === 'analysisLog') {\r\n        this.searchLog(this.row)\r\n      } else if (name === 'analysisKeyLink') {\r\n        // this.searchKeyLink(this.row)\r\n        if (this.affectDownStringKeyJobList) {\r\n          this.searchBaseLine(this.affectDownStringKeyJobList[0])\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      params = Object.assign({}, this.alarmBean)\r\n      if (this.alarmBean.localDate) {\r\n        params.localDate = utils.fmtDate(this.alarmBean.localDate, 'yyyy-MM-dd')\r\n      }\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      for (let key in params) {\r\n        if (key === 'job' && params[key]) {\r\n          params[key] = params[key].trim().toUpperCase()\r\n        }\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loading = false\r\n        })\r\n    },\r\n    subtracTime (stime, etime) {\r\n      let result\r\n      if (etime > stime) {\r\n        result = Math.floor((etime - stime) / 1000)\r\n      } else {\r\n        result = Math.floor((stime - etime) / 1000)\r\n      }\r\n      let h = Math.floor(result / 3600) < 10 ? '0' + Math.floor(result / 3600) : Math.floor(result / 3600)\r\n      let m = Math.floor(result % 3600 / 60) < 10 ? '0' + Math.floor(result % 3600 / 60) : Math.floor(result % 3600 / 60)\r\n      let s = result % 3600 % 60 < 10 ? '0' + result % 3600 % 60 : result % 3600 % 60\r\n      let str = h + ':' + m + ':' + s\r\n      return str\r\n    },\r\n    formatTime (minute) {\r\n      let day = 0\r\n      let hour = 0\r\n      if (minute > 60) {\r\n        hour = parseInt(minute / 60)\r\n        minute = parseInt(minute % 60)\r\n        if (hour > 24) {\r\n          day = parseInt(hour / 24)\r\n          hour = parseInt(hour % 24)\r\n        }\r\n      }\r\n      let result = ''\r\n      if (minute > 0) {\r\n        result = '' + parseInt(minute) + '分钟'\r\n      }\r\n      if (hour > 0) {\r\n        result = '' + parseInt(hour) + '小时' + result\r\n      }\r\n      if (day > 0) {\r\n        result = '' + parseInt(day) + '天' + result\r\n      }\r\n      return result\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.alarmBean = {}\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.databaseId)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    cancel () {\r\n\r\n    },\r\n    switchTab (tabName) {\r\n      for (let key in this.tabObj) {\r\n        this.tabObj[key] = false\r\n      }\r\n      this.tabObj[tabName] = true\r\n    },\r\n    haltAlarm (alarmId, alarmStatus, index, row) {\r\n      if (alarmStatus == '1') {\r\n        this.$Message.info('请选择未处理的告警操作')\r\n        return\r\n      }\r\n      if (alarmStatus == '2') {\r\n        alarmStatus = '0'\r\n      } else if (alarmStatus == '0') {\r\n        alarmStatus = '2'\r\n      }\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: {\talarmStatus: alarmStatus, job: row.job, authps: row.platform + row.system }\r\n      }\r\n      httpConfig.method = 'PUT'\r\n      httpConfig.url = RESOURCE_PATH + '/' + alarmId\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData[index].alarmStatus = alarmStatus\r\n          }\r\n        }).catch(error => {\r\n          console.error('login exception:' + error)\r\n        })\r\n    },\r\n    errorHandleOk () {\r\n      this.$refs.alarmHandleForm.validate(valid => {\r\n        if (!valid) return\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/operater',\r\n          params: { key: this.formBean.operationType, alarmId: this.formBean.id }\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            console.log(resp)\r\n            if (resp.data === true) {\r\n              // this.alarmGridData[this.formBean.index].alarmStatus = this.formBean.alarmStatus\r\n              this.errorHandle.show = false\r\n              this.search()\r\n            }\r\n          })\r\n      })\r\n    },\r\n    errorHandleBack () {\r\n      this.$refs.operationTypeSelect.classes[1]['ivu-form-item-error'] = false\r\n      if (this.$refs.operationTypeSelect.$el.children[1].children[1]) {\r\n        this.$refs.operationTypeSelect.$el.children[1].children[1].remove()\r\n      }\r\n      this.errorHandle.show = false\r\n    },\r\n    showErrorHandle (errorObj, index) {\r\n      const operaterConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getOperater',\r\n        params: {}\r\n      }\r\n      this.$ajax(operaterConfig).then(resp => {\r\n        this.formBean = {}\r\n        this.errorHandle.show = true\r\n        this.formBean.id = errorObj.id\r\n        this.formBean.operationUser = sessionStorage.username\r\n        this.formBean.operationTime = utils.fmtDate(new Date(), 'yyyy-MM-dd hh24:mm:ss')\r\n        this.formBean = Object.assign({}, this.formBean)\r\n        if (resp.data) {\r\n          this.operationTypeList = resp.data\r\n        }\r\n      })\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      // let sort, order\r\n      let order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      this.alarmBean.order = order\r\n      this.alarmBean.sort = column.key\r\n      this.search()\r\n    },\r\n    queryAlarmList () {\r\n      this.search()\r\n    },\r\n    loadErrorCodeList () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/errorCodeList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data.rows) {\r\n          resp.data.rows.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.code\r\n            tmp.label = data.code\r\n            this.alarmTypelist.push(tmp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    loaduser: function () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'user/getUserList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data => {\r\n            this.userlist[data.user_id] = data.userchname\r\n            this.userMap[data.username] = data.userchname\r\n          })\r\n        }\r\n        this.search()\r\n      })\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.alarmBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.alarmBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    tomain () {\r\n      for (let key in this.transData.tabObj) {\r\n        this.transData.tabObj[key] = false\r\n      }\r\n      this.transData.tabObj['alarmTab'] = true\r\n    },\r\n    scrollInter () {\r\n      this.showData.splice(0, 1)\r\n      setTimeout(() => {\r\n        this.listData.push(this.listData[0])\r\n        // this.showData = [];\r\n        // this.showData.splice(0,1);\r\n        this.showData.splice(0, 1, this.listData[0])\r\n        this.listData.shift()\r\n      }, 0)\r\n    },\r\n    enter () {\r\n      clearInterval(this.timer)\r\n    },\r\n    leave () {\r\n      this.timer = setInterval(this.scrollInter, 10000)\r\n    },\r\n    downloadLogfile (row) {\r\n      let params = {}\r\n      params.job = row.job\r\n      params.logDir = row.logDir\r\n      params.logName = row.logName\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadLogfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '日志不存在,请检查作业是否为虚作业!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/merrordiagnosis/downloadLogfile', params)\r\n          }\r\n        })\r\n    },\r\n    downloadScriptfile (row) {\r\n      let params = {}\r\n      params.scriptName = row.scriptName\r\n      params.job = row.job\r\n      params.platform = row.platform\r\n      params.system = row.system\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadScriptfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '脚本不存在,请检查脚本是否存在!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/udsjobsteprecord/downloadScriptfile', params)\r\n          }\r\n        })\r\n    },\r\n    addZero (time) {\r\n      let str = time\r\n      if (time < 10) {\r\n        str = '0' + time\r\n      }\r\n      return str\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    querylocationList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = {}\r\n        resp.data.rows.forEach(data => {\r\n          this.locationList[data.dicValue] = data.dicName\r\n        })\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    // this.loaduser();\r\n    this.alarmBean.localDate = utils.fmtDate(new Date(), 'yyyy-MM-dd')\r\n    // this.loadErrorCodeList()\r\n    this.init()\r\n    // this.listMUdsDutyByChDay()\r\n    this.queryPlatform()\r\n    this.timer = setInterval(this.scrollInter, 10000)\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n</script>\r\n<style>\r\n#alarmList table td div{\r\n\tpadding-left: 0;\r\n\tpadding-right: 3px;\r\n}\r\n#alarmList table th div{\r\n\tpadding-left: 0;\r\n\tpadding-right: 3px;\r\n}\r\n\r\n.slide-enter-active,.slide-leave-active {\r\n\ttransition: all 0.5s linear;\r\n}\r\n.slide-leave-to {\r\n\ttransform: translateY(-20px);\r\n}\r\n.slide-enter {\r\n\ttransform: translateY(20px);\r\n\r\n}\r\n.marquee-wrap {\r\n\twidth: 80%;\r\n\theight: 20px;\r\n\tborder-radius:0px;\r\n\tbackground: rgba($color: #000000, $alpha: 0.6);\r\n\tmargin: 0 0;\r\n\toverflow: hidden;\r\n\t.marquee-list {\r\n\t\tli {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\ttext-overflow: ellipsis;\r\n\t\t\toverflow: hidden;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tpadding: 0 20px;\r\n\t\t\tlist-style: none;\r\n\t\t\tline-height: 40px;\r\n\t\t\ttext-align: center;\r\n\t\t\tcolor: #fff;\r\n\t\t\tfont-size: 40px;\r\n\t\t\tfont-weight: 400;\r\n\t\t\tfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\t\t}\r\n\t}\r\n\t.animate-up {\r\n\t\ttransition: all 0.5s linear;\r\n\t\ttransform: translateY(-20px);\r\n\t}\r\n}\r\n.duty{\r\n\tfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\tcolor: #2d8cf0;\r\n\tfont-size: 14px;\r\n\tcursor:pointer;\r\n\tfont-weight: 540;\r\n}\r\n.dutys {\r\nfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\tcolor: #ff9900;\r\n\tfont-size: 16px;\r\n\tcursor:pointer;\r\n\tfont-weight: 540;\r\n}\r\n.list-item {\r\n\tdisplay: block;\r\n\tmargin-right: 10px;\r\n}\r\n.list-enter-active, .list-leave-active {\r\n\ttransition: all 0.5s;\r\n}\r\n.list-leave-to {\r\n\topacity: 0;\r\n\ttransform:translateY(-20px);\r\n}\r\n.list-enter {\r\n\topacity: 0;\r\n\ttransform:translateY(20px);\r\n}\r\n.diag-title {\r\n  /* color#495060;font-size:14px */\r\n  font-size: 14px;\r\n  color: #495060;\r\n  /* font-weight: bold; */\r\n}\r\n#errorDiagnosisOp .ivu-modal .ivu-modal-content .ivu-modal-body {\r\n  width: 100%;\r\n}\r\n.base-title {\r\n  font-size: 15px;\r\n}\r\n.base-message {\r\n  /* color: #464c5b; */\r\n  /* color: #5d6b8b; */\r\n  color: #3e3f4b;\r\n  margin-left: 10px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  /* white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden; */\r\n  /* width: 50%; */\r\n}\r\n.line_box {\r\n  height: 31vh;\r\n  /* width: 700% !important; */\r\n  width: 100%;\r\n  padding-left: 0px;\r\n}\r\n.bar_box {\r\n  height: 100px;\r\n  width: 90%;\r\n  padding-left: 0px;\r\n}\r\n.baseInfo .ivu-tabs {\r\n  /* max-height: 50px; */\r\n  height: 5%;\r\n  min-height: 50px !important;\r\n}\r\n#timeTriggerOp span {\r\n  font-size: 15px;\r\n}\r\n#frequencyOp span {\r\n  font-size: 15px;\r\n}\r\n#tabs .ivu-tabs-nav .ivu-tabs-tab {\r\n  display: inline-block;\r\n  height: 100%;\r\n  width: 33vmin;\r\n  text-align: center;\r\n  padding: 8px 16px;\r\n  margin-right: 16px;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  position: relative;\r\n  transition: color .3s ease-in-out;\r\n}\r\n.upJobMsgGreen {\r\n  margin-left:1%;\r\n  color:#afd582;\r\n}\r\n.upJobMsgRed {\r\n  margin-left:1%;\r\n  color:#528e95;\r\n}\r\n#frequencyOp .ivu-modal-body{\r\n  width: 100% !important;\r\n}\r\n</style>\r\n"],"mappings":"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;MACAC,QAAA;MACAC,OAAA;MACAC,OAAA;MACAC,MAAA;QACA9G,IAAA;MACA;MACA+G,cAAA;QACA/G,IAAA;MACA;MACAgH,cAAA;MACAC,UAAA,GACA;QACAC,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,EACA;MACA6J,iBAAA;MACAC,eAAA,GACA;QACAF,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA,GACA;QACA4J,KAAA;QACA5J,KAAA;MACA;MACA+J,SAAA;QAAAC,SAAA,EAAA7K,KAAA,CAAAoI,OAAA,KAAAK,IAAA;MAAA;MACAqC,QAAA;MACAC,MAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,SAAA;MAAA;MACAC,OAAA;QACAC,MAAA;UACAC,MAAA;UACAC,GAAA,EAAApL;QACA;QACAqL,MAAA;UACAF,MAAA;UACAC,GAAA,EAAApL;QACA;MACA;MACA;MACAsL,WAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAhH,KAAA;QACA2C,KAAA;QACAY,QAAA;QACA9C,KAAA;QACAD,GAAA;MACA,GACA;QACAR,KAAA;QACAuD,QAAA;QACAZ,KAAA;QACAlC,KAAA;QACAD,GAAA;MACA,GACA;QACAR,KAAA;QACAQ,GAAA;QACA;QACAG,QAAA;QACA;QACA4C,QAAA;QACA3C,MAAA,WAAAA,OAAAC,CAAA,EAAAoG,KAAA;UAAA,IAAAlG,MAAA,GAAAkG,KAAA,CAAAlG,MAAA;YAAAC,KAAA,GAAAiG,KAAA,CAAAjG,KAAA;YAAArB,GAAA,GAAAsH,KAAA,CAAAtH,GAAA;UACA,OAAAkB,CAAA,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"}]}