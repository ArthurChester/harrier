{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\user\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\user\\Form.vue","mtime":1681468306531},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n// import managerServer  from '@/api/manage';\r\nimport env from '@/config'\r\nimport store from '@/store/index'\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const checkEmpId = (rule, value, callback) => {\r\n      if (this.transData.id) {\r\n        return callback()\r\n      }\r\n      let reg = /^\\d{8}$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入八位数字的工号'))\r\n        return\r\n      }\r\n      let param = {}\r\n      param.empId = value\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/user/loadByEmpId',\r\n        params: param\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data !== '') {\r\n            callback(new Error('该工号已存在，请重新输入'))\r\n          } else {\r\n            callback()\r\n          }\r\n        })\r\n    }\r\n    const checkuserEmail = (rule, value, callback) => {\r\n      let reg = /^\\w+((.\\w+)|(-\\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入正确的邮箱号'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const checkPhoneNum = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback()\r\n      }\r\n      let reg = /^1(3[0-9]|4[01456789]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\d{8}$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入正确的手机号'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      tableData: [],\r\n      sysList: [],\r\n      roleList: [],\r\n      platformList: [],\r\n      formBean: {},\r\n      isShow: true,\r\n      loading: false,\r\n      formRule: {\r\n        userCode: [ { required: true, message: '该项为必输项！' }, {\r\n          validator: (rule, value, callback, source, options) => {\r\n            if (this.isEdit) {\r\n              callback()\r\n              return\r\n            }\r\n            this.$ajax(`user/${value}/codeExists`)\r\n              .then(resp => {\r\n                if (resp.data === true) {\r\n                  callback(new Error('该用户名已存在！'))\r\n                } else {\r\n                  callback()\r\n                }\r\n              })\r\n          }\r\n        } ],\r\n        userName: [ { required: true, message: '该项为必输项！' } ],\r\n        userPwd: [ { required: true, message: '该项为必输项！' } ],\r\n        // empId: [ { required: true, message: '该项为必输项！' }, { validator: checkEmpId, trigger: '' } ],\r\n        userEmail: [ { required: true, message: '该项为必输项！' }, { validator: checkuserEmail, trigger: '' } ],\r\n        userPhone: [ { validator: checkPhoneNum, trigger: '' } ]\r\n      },\r\n      modulus: '',\r\n      exponent: '',\r\n      key: '',\r\n      errorMsg: '',\r\n      request: {\r\n        getKey: {\r\n          url: '/login/key',\r\n          method: 'GET'\r\n        }\r\n      },\r\n      isEdit: false\r\n    }\r\n  },\r\n  methods: {\r\n    loadsys: function () {\r\n      this.sysList = []\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform_name }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1\r\n            temp.value = data1\r\n            temp.label = data1\r\n            this.sysList.push(temp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // loadplat: function () {\r\n    //   const loadConfig = {\r\n    //     method: 'GET',\r\n    //     url: 'user/getPlatformList',\r\n    //     params: {}\r\n    //   }\r\n    //   this.$ajax(loadConfig).then(resp => {\r\n    //     if (resp.data) {\r\n    //       resp.data.forEach(data1 => {\r\n    //         let temp = {}\r\n    //         temp.key = data1\r\n    //         temp.value = data1\r\n    //         temp.label = data1\r\n\r\n    //         this.platformList.push(temp)\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // },\r\n    loadRole: function () {\r\n      this.roleList = []\r\n      const loadConfig = {\r\n        method: 'GET', url: `/role/${this.formBean.userCode}/list`\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1.role_chname\r\n            temp.value = data1.role_id\r\n            temp.label = data1.role_chname\r\n            this.roleList.push(temp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    init: function () {\r\n      let id = this.transData.id\r\n      if (id) {\r\n        this.isShow = false\r\n        this.isEdit = true\r\n        this.$ajax(`user/${id}`)\r\n          .then(resp => {\r\n            this.formBean = resp.data\r\n            // this.formBean.userPwd = ''\r\n          })\r\n      } else {\r\n\r\n      }\r\n    },\r\n    // getDep:function(){\r\n    //   let data={};\r\n    //   this.$axios.post('msys/getPlatformList',data).then(res=> {\r\n    //     if(res.data.code===200){\r\n    //       this.platformList=res.data.data;\r\n    //       console.log(this.depss);\r\n    //     }else{\r\n    //       console.log(1);\r\n    //     }\r\n    //   }).catch(function(error){\r\n    //     this.$message.error('系统错误');\r\n    //   })\r\n    // },\r\n    save: function () {\r\n      if (this.formBean.userId) { // 编辑\r\n      } else {\r\n        if (this.formBean.userPwd != this.formBean.password) {\r\n          this.$Message.error('两次新密码不同')\r\n          return\r\n        }\r\n      }\r\n      this.$refs.userForm.validate((valid) => {\r\n        if (!valid) return\r\n        let config = {}\r\n        // if (env.enableVerifyPass) {\r\n        //   let encrpytedpass = this.key\r\n        //   this.formBean.userPwd = encrpytedpass\r\n        //   this.formBean.password = encrpytedpass\r\n        // }\r\n        config.data = this.formBean\r\n        delete config.data.createTime\r\n        delete config.data.updateTime\r\n        if (this.formBean.userId) {\r\n          config.method = 'PUT'\r\n          config.url = `/user/${this.formBean.userId}/update`\r\n        } else {\r\n          config.method = 'POST'\r\n          config.url = '/user/add'\r\n        }\r\n        // let authSystems = store.getters.getSystems\r\n        // var param = authSystems.find(item => { if (item.indexOf('*') > -1) { return item } })\r\n        // config.data.authps = param\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      let queryCache = { searchBean: this.transData.searchBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('exit', Object.assign({}, queryCache))\r\n    },\r\n    getKey: function () {\r\n      // load rsa key 加密传输密码\r\n      this.$ajax(this.request.getKey)\r\n        .then(response => {\r\n          if (response.status == '200') {\r\n            // 成功\r\n            this.exponent = response.data.exponent\r\n            this.modulus = response.data.modulus\r\n            this.key = this.exponent\r\n            this.isClick = false\r\n          } else {\r\n            this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n            this.isClick = true\r\n            let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n            promise.then(() => (this.getKey()))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n          this.isClick = true\r\n          let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n          promise.then(() => (this.getKey()))\r\n        })\r\n    }\r\n  },\r\n  mounted: function () {\r\n    if (env.enableVerifyPass) {\r\n      this.getKey()\r\n    }\r\n    this.init()\r\n    // this.loadsys();\r\n    // this.loadplat()\r\n    this.loadRole()\r\n  }\r\n}\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappingsfile":"Form.vue","sourceRoot":"src/view/spdb/authority/user","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <Form ref=\"userForm\" :label-width=\"120\" :model=\"formBean\" :rules=\"formRule\">\r\n        <Row>\r\n            <Col span=\"6\">\r\n               <Form-Item prop=\"userCode\" label=\"用户名\">\r\n              <Input v-model=\"formBean.userCode\" :disabled=\"isEdit\"/>\r\n            </Form-Item>\r\n          </Col>\r\n\r\n          </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"userName\" label=\"中文名称\">\r\n              <Input v-model=\"formBean.userName\"/>\r\n            </Form-Item>\r\n           </Col>\r\n        </Row>\r\n        <Row  v-if=\"isShow\">\r\n            <Col span=\"6\">\r\n            <Form-Item prop=\"userPwd\" label=\"密码\" >\r\n              <!--<Input type=\"userPwd\" v-model=\"formBean.userPwd\"/>-->\r\n              <Input type='password' v-model=\"formBean.userPwd\" placeholder=\"密    码\">\r\n                <Icon type=\"md-lock\" slot=\"prepend\"></Icon>\r\n              </Input>\r\n            </Form-Item>\r\n          </Col>\r\n          </Row>\r\n        <Row  v-if=\"isShow\">\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"password\" label=\"再次输入\">\r\n              <Input type=\"password\" v-model=\"formBean.password\">\r\n                <Icon type=\"md-lock\" slot=\"prepend\"></Icon>\r\n              </Input>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"userPhone\" label=\"手机号码\">\r\n              <Input  v-model=\"formBean.userPhone\"/>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"userEmail\" label=\"邮箱\">\r\n              <Input type=\"email\" v-model=\"formBean.userEmail\"/>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"empId\" label=\"工号\">\r\n              <Input v-model=\"formBean.empId\"/>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <!--\r\n        <Row v-if=\"isShow\">\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"role\" label=\"所属角色\"  >\r\n              <Select filterable v-model=\"formBean.role_id\"   >\r\n                <Option  v-for=\"item in roleList\" :value=\"item.value\" :key=\"item.key\" :label=\"item.label\">\r\n                  {{ item.label }}\r\n                </Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"platform_name\" label=\"所属平台\" >\r\n              <Select filterable v-model=\"formBean.platform_name\" @on-change=\"loadsys()\"  clearable>\r\n                <Option  v-for=\"item in platformList\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">\r\n                  {{ item.label }}\r\n                </Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n\r\n          </Row>\r\n        <Row>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"system_name\" label=\"所属应用\">\r\n              <Input  v-model=\"formBean.system_name\"/>\r\n              <Select filterable v-model=\"formBean.system_name\"   clearable>\r\n                <Option v-for=\"item in sysList\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">\r\n                  {{ item.label }}\r\n                </Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n\r\n        </Row>\r\n        -->\r\n      </Form>\r\n\r\n      <div>\r\n        <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save()\">保存</Button>\r\n        <Button type=\"primary\" icon=\"ios-redo-outline\" @click=\"cancel()\">取消</Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import managerServer  from '@/api/manage';\r\nimport env from '@/config'\r\nimport store from '@/store/index'\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const checkEmpId = (rule, value, callback) => {\r\n      if (this.transData.id) {\r\n        return callback()\r\n      }\r\n      let reg = /^\\d{8}$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入八位数字的工号'))\r\n        return\r\n      }\r\n      let param = {}\r\n      param.empId = value\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/user/loadByEmpId',\r\n        params: param\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data !== '') {\r\n            callback(new Error('该工号已存在，请重新输入'))\r\n          } else {\r\n            callback()\r\n          }\r\n        })\r\n    }\r\n    const checkuserEmail = (rule, value, callback) => {\r\n      let reg = /^\\w+((.\\w+)|(-\\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入正确的邮箱号'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const checkPhoneNum = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback()\r\n      }\r\n      let reg = /^1(3[0-9]|4[01456789]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\d{8}$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('请输入正确的手机号'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      tableData: [],\r\n      sysList: [],\r\n      roleList: [],\r\n      platformList: [],\r\n      formBean: {},\r\n      isShow: true,\r\n      loading: false,\r\n      formRule: {\r\n        userCode: [ { required: true, message: '该项为必输项！' }, {\r\n          validator: (rule, value, callback, source, options) => {\r\n            if (this.isEdit) {\r\n              callback()\r\n              return\r\n            }\r\n            this.$ajax(`user/${value}/codeExists`)\r\n              .then(resp => {\r\n                if (resp.data === true) {\r\n                  callback(new Error('该用户名已存在！'))\r\n                } else {\r\n                  callback()\r\n                }\r\n              })\r\n          }\r\n        } ],\r\n        userName: [ { required: true, message: '该项为必输项！' } ],\r\n        userPwd: [ { required: true, message: '该项为必输项！' } ],\r\n        // empId: [ { required: true, message: '该项为必输项！' }, { validator: checkEmpId, trigger: '' } ],\r\n        userEmail: [ { required: true, message: '该项为必输项！' }, { validator: checkuserEmail, trigger: '' } ],\r\n        userPhone: [ { validator: checkPhoneNum, trigger: '' } ]\r\n      },\r\n      modulus: '',\r\n      exponent: '',\r\n      key: '',\r\n      errorMsg: '',\r\n      request: {\r\n        getKey: {\r\n          url: '/login/key',\r\n          method: 'GET'\r\n        }\r\n      },\r\n      isEdit: false\r\n    }\r\n  },\r\n  methods: {\r\n    loadsys: function () {\r\n      this.sysList = []\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform_name }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1\r\n            temp.value = data1\r\n            temp.label = data1\r\n            this.sysList.push(temp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // loadplat: function () {\r\n    //   const loadConfig = {\r\n    //     method: 'GET',\r\n    //     url: 'user/getPlatformList',\r\n    //     params: {}\r\n    //   }\r\n    //   this.$ajax(loadConfig).then(resp => {\r\n    //     if (resp.data) {\r\n    //       resp.data.forEach(data1 => {\r\n    //         let temp = {}\r\n    //         temp.key = data1\r\n    //         temp.value = data1\r\n    //         temp.label = data1\r\n\r\n    //         this.platformList.push(temp)\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // },\r\n    loadRole: function () {\r\n      this.roleList = []\r\n      const loadConfig = {\r\n        method: 'GET', url: `/role/${this.formBean.userCode}/list`\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data1 => {\r\n            let temp = {}\r\n            temp.key = data1.role_chname\r\n            temp.value = data1.role_id\r\n            temp.label = data1.role_chname\r\n            this.roleList.push(temp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    init: function () {\r\n      let id = this.transData.id\r\n      if (id) {\r\n        this.isShow = false\r\n        this.isEdit = true\r\n        this.$ajax(`user/${id}`)\r\n          .then(resp => {\r\n            this.formBean = resp.data\r\n            // this.formBean.userPwd = ''\r\n          })\r\n      } else {\r\n\r\n      }\r\n    },\r\n    // getDep:function(){\r\n    //   let data={};\r\n    //   this.$axios.post('msys/getPlatformList',data).then(res=> {\r\n    //     if(res.data.code===200){\r\n    //       this.platformList=res.data.data;\r\n    //       console.log(this.depss);\r\n    //     }else{\r\n    //       console.log(1);\r\n    //     }\r\n    //   }).catch(function(error){\r\n    //     this.$message.error('系统错误');\r\n    //   })\r\n    // },\r\n    save: function () {\r\n      if (this.formBean.userId) { // 编辑\r\n      } else {\r\n        if (this.formBean.userPwd != this.formBean.password) {\r\n          this.$Message.error('两次新密码不同')\r\n          return\r\n        }\r\n      }\r\n      this.$refs.userForm.validate((valid) => {\r\n        if (!valid) return\r\n        let config = {}\r\n        // if (env.enableVerifyPass) {\r\n        //   let encrpytedpass = this.key\r\n        //   this.formBean.userPwd = encrpytedpass\r\n        //   this.formBean.password = encrpytedpass\r\n        // }\r\n        config.data = this.formBean\r\n        delete config.data.createTime\r\n        delete config.data.updateTime\r\n        if (this.formBean.userId) {\r\n          config.method = 'PUT'\r\n          config.url = `/user/${this.formBean.userId}/update`\r\n        } else {\r\n          config.method = 'POST'\r\n          config.url = '/user/add'\r\n        }\r\n        // let authSystems = store.getters.getSystems\r\n        // var param = authSystems.find(item => { if (item.indexOf('*') > -1) { return item } })\r\n        // config.data.authps = param\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      let queryCache = { searchBean: this.transData.searchBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('exit', Object.assign({}, queryCache))\r\n    },\r\n    getKey: function () {\r\n      // load rsa key 加密传输密码\r\n      this.$ajax(this.request.getKey)\r\n        .then(response => {\r\n          if (response.status == '200') {\r\n            // 成功\r\n            this.exponent = response.data.exponent\r\n            this.modulus = response.data.modulus\r\n            this.key = this.exponent\r\n            this.isClick = false\r\n          } else {\r\n            this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n            this.isClick = true\r\n            let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n            promise.then(() => (this.getKey()))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n          this.isClick = true\r\n          let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n          promise.then(() => (this.getKey()))\r\n        })\r\n    }\r\n  },\r\n  mounted: function () {\r\n    if (env.enableVerifyPass) {\r\n      this.getKey()\r\n    }\r\n    this.init()\r\n    // this.loadsys();\r\n    // this.loadplat()\r\n    this.loadRole()\r\n  }\r\n}\r\n</script>\r\n"]}]}