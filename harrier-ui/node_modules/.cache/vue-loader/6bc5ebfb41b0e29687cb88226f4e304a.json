{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\charts\\pie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\charts\\pie.vue","mtime":1681468306442},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport * as echarts from 'echarts'\r\nimport tdTheme from './theme.json'\r\nimport { on, off } from '@/libs/tools'\r\necharts.registerTheme('tdTheme', tdTheme)\r\nexport default {\r\n  name: 'ChartPie',\r\n  props: {\r\n    value: Array,\r\n    text: String,\r\n    subtext: String\r\n  },\r\n  data () {\r\n    return {\r\n      dom: null\r\n    }\r\n  },\r\n  methods: {\r\n    resize () {\r\n      this.dom.resize()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      let legend = this.value.map(_ => _.name)\r\n      let option = {\r\n        title: {\r\n          text: this.text,\r\n          subtext: this.subtext,\r\n          x: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: legend\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '55%',\r\n            center: ['50%', '60%'],\r\n            data: this.value,\r\n            itemStyle: {\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.dom = echarts.init(this.$refs.dom, 'tdTheme')\r\n      this.dom.setOption(option)\r\n      on(window, 'resize', this.resize)\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    off(window, 'resize', this.resize)\r\n  }\r\n}\r\n",{"version":3,"sources":["pie.vue"],"names":[],"mappings":";AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pie.vue","sourceRoot":"src/components/charts","sourcesContent":["<template>\r\n  <div ref=\"dom\" class=\"charts chart-pie\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport tdTheme from './theme.json'\r\nimport { on, off } from '@/libs/tools'\r\necharts.registerTheme('tdTheme', tdTheme)\r\nexport default {\r\n  name: 'ChartPie',\r\n  props: {\r\n    value: Array,\r\n    text: String,\r\n    subtext: String\r\n  },\r\n  data () {\r\n    return {\r\n      dom: null\r\n    }\r\n  },\r\n  methods: {\r\n    resize () {\r\n      this.dom.resize()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      let legend = this.value.map(_ => _.name)\r\n      let option = {\r\n        title: {\r\n          text: this.text,\r\n          subtext: this.subtext,\r\n          x: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: legend\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '55%',\r\n            center: ['50%', '60%'],\r\n            data: this.value,\r\n            itemStyle: {\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.dom = echarts.init(this.$refs.dom, 'tdTheme')\r\n      this.dom.setOption(option)\r\n      on(window, 'resize', this.resize)\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    off(window, 'resize', this.resize)\r\n  }\r\n}\r\n</script>\r\n"]}]}