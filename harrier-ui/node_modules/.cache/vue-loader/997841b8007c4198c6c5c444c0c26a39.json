{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\JobRecord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\JobRecord.vue","mtime":1681468306536},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobRecord'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 175\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('a', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginRight: '5px'\r\n          //         // color: \"green\"\r\n          //       },\r\n          //       on: {\r\n          //         click: () => {\r\n          //           let id = row.job\r\n          //           this.$emit('switch', { id: id, statusName: 'jobdetail', jobData: row, formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }) // 提交form事件，在parent中显示form\r\n          //         }\r\n          //       }\r\n          //     }, row.job)\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          width: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('span', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginLeft: '5px',\r\n          //         // color: '#3399ff'\r\n          //       }\r\n          //     }, this.jobtypeList[row.jobType])\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业最后状态',\r\n          key: 'lastStatus',\r\n          width: 130\r\n        },\r\n        {\r\n          title: '触发方式',\r\n          key: 'streamType',\r\n          width: 120\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('div', {\r\n          //     }, this.streamTypeList[row.streamType])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '作业进入pending状态时间',\r\n        // \tkey: 'pendingTime',\r\n        // },\r\n        {\r\n          title: '开始时间',\r\n          key: 'startTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          key: 'endTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: 'TxDate',\r\n          key: 'jobDate',\r\n          width: 120\r\n        },\r\n        {\r\n          title: '批次号',\r\n          key: 'multiBatch',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '执行次数',\r\n          key: 'numTimes',\r\n          width: 100\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-search'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.id + ''\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        }\r\n        // {\r\n        // \ttitle: '操作',\r\n        // \tfixed: 'right',\r\n        // \trender: (h, {column,index, row}) => {\r\n        // \t\treturn h('div', [\r\n        // \t\t\th('Button', {\r\n        // \t\t\t\tprops: {\r\n        // \t\t\t\t\tsize: 'small',\r\n        // \t\t\t\t\ttype: 'info',\r\n        // \t\t\t\t},\r\n        // \t\t\t\tstyle: {\r\n        // \t\t\t\t\tmarginRight: '5px'\r\n        // \t\t\t\t},\r\n        // \t\t\t\ton: {\r\n        // \t\t\t\t\tclick :() => {\r\n        // \t\t\t\t\t\tlet id = row.system;\r\n        // \t\t\t\t\t\tthis.$emit('switch', {id: id}); //提交form事件，在parent中显示form\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t}\r\n        // \t\t\t}, '编辑')\r\n        // \t\t])\r\n        // \t}\r\n        // }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //  this.formBean.system = \"\";\r\n      //  this.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        // Object.assign(this.formBean, this.transData.jobData)\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n      // this.queryStreamTypeList()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.search()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    // bindData (fields) {\r\n    //   try {\r\n    //     const data = Object.assign({}, this.transData.initFormBean)\r\n    //     if (fields) { // 进行可选字段初始化\r\n    //       for (const field of fields) {\r\n    //         this.formBean[field] = data[field]\r\n    //       }\r\n    //     } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n    //       this.formBean = Object.assign({}, data)\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(error)\r\n    //   }\r\n    // },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      // if (this.formBean.startTime === '') {\r\n      //   this.$Message.error('未填写开始时间')\r\n      //   return\r\n      // }\r\n      // if (this.formBean.endTime === '') {\r\n      //   this.$Message.error('未填写结束时间')\r\n      //   return\r\n      // }\r\n      // let stime = new Date(this.formBean.startTime)\r\n      // let etime = new Date(this.formBean.endTime)\r\n      // let num = parseInt((etime.getTime() - stime.getTime()) / 1000 / 60 / 60 / 24)\r\n      // if (num < 0 || num > 30) {\r\n      //   this.$Message.error('查询时间应在30天之内')\r\n      //   return\r\n      // }\r\n      // if (etime <= stime) {\r\n      //   this.$Message.error('结束时间应大于开始时间')\r\n      //   return\r\n      // }\r\n      // Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      // for (let key in params) {\r\n      //   if (key === 'job' && params[key]) {\r\n      //     params[key] = params[key].trim().toUpperCase()\r\n      //   }\r\n      // }\r\n      params.platform = this.transData.jobData.platform\r\n      params.systems = this.transData.jobData.systems\r\n      params.job = this.transData.jobData.job\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectJobRecord',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n    // this.queryStreamTypeList()\r\n    // this.queryPlatform()\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["JobRecord.vue"],"names":[],"mappingsfile":"JobRecord.vue","sourceRoot":"src/view/spdb/job/jobList","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<Row>\r\n\t\t\t<Col span=\"24\">\r\n\t\t\t\t<div style=\"font-size:14px;font-weight: bold; color: #464c5b;margin-left:5px;\">\r\n\t\t\t\t运行记录\r\n\t\t\t\t&nbsp;&nbsp;平台名:{{this.transData.jobData.platform}}\r\n\t\t\t\t&nbsp;&nbsp;应用名:{{this.transData.jobData.systems}}\r\n\t\t\t\t&nbsp;&nbsp;作业名:{{this.transData.jobData.job}}\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row>\r\n\t\t<Form :label-width=\"80\">\r\n\t\t\t<Col span=\"13\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"4\">\r\n\t\t\t\t<FormItem  label=\"TXDate\" >\r\n\t\t\t\t\t<DatePicker :transfer=\"true\" v-model=\"formBean.startTime\" type=\"datetime\"  @on-change=\"getStartTime\" format=\"yyyyMMdd\" placeholder=\"请选择\" ></DatePicker>\r\n\t\t\t\t<!--\r\n\t\t\t\t\t<Select v-model=\"jobDate\" @on-change=\"search\" filterable multiple>\r\n\t\t\t\t\t\t<Option v-for=\"item in jobDateList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t</Select>-->\r\n\t\t\t\t</FormItem>\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"1\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"6\">\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">&nbsp;&nbsp;查询</Button>\r\n\t\t\t\t<!-- <Button type=\"primary\" @click=\"showJobScriptOp\" style=\"\">所有脚本</Button>\r\n        <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"hisDownload\" style=\"\">下载</Button> -->\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\t\t\t</Col>\r\n\t\t</Form>\r\n\t\t</Row>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" :loading=\"loadingTable\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t<!-- <Modal id=\"jobScript\"\r\n\t\t\tv-model=\"jobScriptOp.show\"\r\n\t\t\ttitle=\"所有脚本\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t> -->\r\n\t\t\t<!-- <div>\r\n\t\t\t\t<div class=\"spdb-table\" >\r\n\t\t\t\t\t<Table border :columns=\"scriptGridColumns\" :data=\"scriptGridData\" stripe>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t</div> -->\r\n\t\t\t<div slot=\"footer\">\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobRecord'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 175\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('a', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginRight: '5px'\r\n          //         // color: \"green\"\r\n          //       },\r\n          //       on: {\r\n          //         click: () => {\r\n          //           let id = row.job\r\n          //           this.$emit('switch', { id: id, statusName: 'jobdetail', jobData: row, formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }) // 提交form事件，在parent中显示form\r\n          //         }\r\n          //       }\r\n          //     }, row.job)\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          width: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('span', {\r\n          //       props: {\r\n          //         size: 'small',\r\n          //         type: 'info'\r\n          //       },\r\n          //       style: {\r\n          //         // marginLeft: '5px',\r\n          //         // color: '#3399ff'\r\n          //       }\r\n          //     }, this.jobtypeList[row.jobType])\r\n          //   ])\r\n          // }\r\n        },\r\n        {\r\n          title: '作业最后状态',\r\n          key: 'lastStatus',\r\n          width: 130\r\n        },\r\n        {\r\n          title: '触发方式',\r\n          key: 'streamType',\r\n          width: 120\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('div', {\r\n          //     }, this.streamTypeList[row.streamType])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '作业进入pending状态时间',\r\n        // \tkey: 'pendingTime',\r\n        // },\r\n        {\r\n          title: '开始时间',\r\n          key: 'startTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          key: 'endTime',\r\n          width: 175\r\n        },\r\n        {\r\n          title: 'TxDate',\r\n          key: 'jobDate',\r\n          width: 120\r\n        },\r\n        {\r\n          title: '批次号',\r\n          key: 'multiBatch',\r\n          width: 90\r\n        },\r\n        {\r\n          title: '执行次数',\r\n          key: 'numTimes',\r\n          width: 100\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-search'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.id + ''\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'log', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        }\r\n        // {\r\n        // \ttitle: '操作',\r\n        // \tfixed: 'right',\r\n        // \trender: (h, {column,index, row}) => {\r\n        // \t\treturn h('div', [\r\n        // \t\t\th('Button', {\r\n        // \t\t\t\tprops: {\r\n        // \t\t\t\t\tsize: 'small',\r\n        // \t\t\t\t\ttype: 'info',\r\n        // \t\t\t\t},\r\n        // \t\t\t\tstyle: {\r\n        // \t\t\t\t\tmarginRight: '5px'\r\n        // \t\t\t\t},\r\n        // \t\t\t\ton: {\r\n        // \t\t\t\t\tclick :() => {\r\n        // \t\t\t\t\t\tlet id = row.system;\r\n        // \t\t\t\t\t\tthis.$emit('switch', {id: id}); //提交form事件，在parent中显示form\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t}\r\n        // \t\t\t}, '编辑')\r\n        // \t\t])\r\n        // \t}\r\n        // }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //  this.formBean.system = \"\";\r\n      //  this.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        // Object.assign(this.formBean, this.transData.jobData)\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n      // this.queryStreamTypeList()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.search()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    // bindData (fields) {\r\n    //   try {\r\n    //     const data = Object.assign({}, this.transData.initFormBean)\r\n    //     if (fields) { // 进行可选字段初始化\r\n    //       for (const field of fields) {\r\n    //         this.formBean[field] = data[field]\r\n    //       }\r\n    //     } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n    //       this.formBean = Object.assign({}, data)\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(error)\r\n    //   }\r\n    // },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      // if (this.formBean.startTime === '') {\r\n      //   this.$Message.error('未填写开始时间')\r\n      //   return\r\n      // }\r\n      // if (this.formBean.endTime === '') {\r\n      //   this.$Message.error('未填写结束时间')\r\n      //   return\r\n      // }\r\n      // let stime = new Date(this.formBean.startTime)\r\n      // let etime = new Date(this.formBean.endTime)\r\n      // let num = parseInt((etime.getTime() - stime.getTime()) / 1000 / 60 / 60 / 24)\r\n      // if (num < 0 || num > 30) {\r\n      //   this.$Message.error('查询时间应在30天之内')\r\n      //   return\r\n      // }\r\n      // if (etime <= stime) {\r\n      //   this.$Message.error('结束时间应大于开始时间')\r\n      //   return\r\n      // }\r\n      // Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      // for (let key in params) {\r\n      //   if (key === 'job' && params[key]) {\r\n      //     params[key] = params[key].trim().toUpperCase()\r\n      //   }\r\n      // }\r\n      params.platform = this.transData.jobData.platform\r\n      params.systems = this.transData.jobData.systems\r\n      params.job = this.transData.jobData.job\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectJobRecord',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n    // this.queryStreamTypeList()\r\n    // this.queryPlatform()\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}