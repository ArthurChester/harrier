{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Attr.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Attr.vue","mtime":1681468306533},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport store from '@/store/index'\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJob'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    const timeWindowValid = (rule, value, callback, source, options) => {\r\n      if (!this.formBean.platform || !this.formBean.systems) {\r\n        callback()\r\n        return\r\n      }\r\n      let timeWindowS = this.formBean.timeWindowS\r\n      let timeWindowE = this.formBean.timeWindowE\r\n      if (!timeWindowS) {\r\n        callback(new Error('开始不能为空'))\r\n      }\r\n      if (!timeWindowE) {\r\n        callback(new Error('结束不能为空'))\r\n      }\r\n      // console.log(utils.dateDiff('20190901 '+timeWindowS,'20190901 '+timeWindowE ,'datetime'));\r\n      if (\r\n        utils.dateDiff(\r\n          '20190901 ' + timeWindowS,\r\n          '20190901 ' + timeWindowE,\r\n          'datetime'\r\n        ) <= 0\r\n      ) {\r\n        callback(new Error('请确定开始时间小于结束时间'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const callAgainMaxNumValid = (\r\n      rule,\r\n      value,\r\n      callback,\r\n      source,\r\n      options\r\n    ) => {\r\n      if (!this.formBean.platform || !this.formBean.systems) {\r\n        callback()\r\n        return\r\n      }\r\n      // alert(1)\r\n      // console.log(new Number(this.formBean.callAgainMaxNum) > -1 && new Number(this.formBean.callAgainMaxNum) <= 10);\r\n      if (\r\n        new Number(this.formBean.callAgainMaxNum) > -1 &&\r\n                new Number(this.formBean.callAgainMaxNum) <= 10\r\n      ) {\r\n        callback()\r\n      } else {\r\n        callback(new Error('最大重调次数范围0-10'))\r\n      }\r\n    }\r\n    return {\r\n      // 作业属性读写权限控制\r\n      udsjobConWR: {\r\n        priority: true,\r\n        callAgainMaxNum: true,\r\n        jobDate: true,\r\n        timeWindow: true,\r\n        lastStatus: true,\r\n        checkFrequency: true,\r\n        checkTimeTrigger: true,\r\n        dbControl: true,\r\n        checkFileStream: true,\r\n        ignoreError: true,\r\n        multiBatch: true\r\n      },\r\n      original: '',\r\n      formBean: {},\r\n      loading: false,\r\n      locationList: [],\r\n      priorityList: [],\r\n      formRule: {\r\n        priority: [\r\n          {\r\n            required: true,\r\n            message: '作业优先级不能为空，只能为数字'\r\n          }\r\n        ],\r\n        callAgainMaxNum: [\r\n          {\r\n            required: true,\r\n            message: '最大重调次数不能为空，只能为数字'\r\n          },\r\n          { validator: callAgainMaxNumValid, trigger: 'blur' }\r\n        ],\r\n        timeWindow: [\r\n          { required: true, message: '不能为空' },\r\n          { validator: timeWindowValid, trigger: 'blur' }\r\n        ],\r\n        checkFrequency: [{ required: true, message: '不能为空' }],\r\n        checkTimeTrigger: [{ required: true, message: '不能为空' }],\r\n        jobDate: [{ required: true, message: '不能为空' }],\r\n        jobType: [{ required: true, message: '不能为空' }]\r\n      },\r\n      cfsData: [{ value: 1, label: '是' }, { value: 0, label: '否' }],\r\n      igData: [{ value: 1, label: '是' }, { value: 0, label: '否' }]\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n         * 初始化\r\n         **/\r\n    init () {\r\n      if (this.transData.id) {\r\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        let params = {}\r\n        params.platform = this.transData.jobData.platform\r\n        params.systems = this.transData.jobData.systems\r\n        params.job = this.transData.jobData.job\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectJobDetail',\r\n          params: params\r\n        }\r\n        this.$ajax(loadConfig).then(resp => {\r\n          let data = resp.data.rows\r\n          if (data.timeWindow) {\r\n            data.timeWindowS = data.timeWindow.split('-')[0]\r\n            data.timeWindowE = data.timeWindow.split('-')[1]\r\n          }\r\n          if (data.ignoreError) {\r\n            data.ignoreError = 1\r\n          } else {\r\n            data.ignoreError = 0\r\n          }\r\n          // if (data.checkFrequency === 1) {\r\n          //   data.checkFrequency = true\r\n          // } else {\r\n          //   data.checkFrequency = false\r\n          // }\r\n          // if (data.checkTimeTrigger === 1) {\r\n          //   data.checkTimeTrigger = true\r\n          // } else {\r\n          //   data.checkTimeTrigger = false\r\n          // }\r\n\r\n          this.formBean = data\r\n          this.original = data.priority\r\n        })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.querylocationList()\r\n      // this.querypriorityList()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n         * 保存表单\r\n         **/\r\n    save () {\r\n      this.$refs.attrForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.jobDate = utils.fmtDate(this.formBean.jobDate, 'yyyy-MM-dd')\r\n        params.jobType = this.formBean.jobType\r\n        // if (this.formBean.checkFrequency === true) {\r\n        //   params.checkFrequency = 1\r\n        // } else {\r\n        //   params.checkFrequency = 0\r\n        // }\r\n        // if (this.formBean.checkTimeTrigger === true) {\r\n        //   params.checkTimeTrigger = 1\r\n        // } else {\r\n        //   params.checkTimeTrigger = 0\r\n        // }\r\n        let param = {}\r\n        param.platform = this.transData.jobData.platform\r\n        param.systems = this.transData.jobData.systems\r\n        param.job = this.transData.jobData.job\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectJobDetail',\r\n          params: param\r\n        }\r\n        this.$ajax(loadConfig).then(loadresp => {\r\n          if (!(loadresp.data.rows.lastStatus === 'SUCCESS' ||\r\n              loadresp.data.rows.lastStatus === 'FAILURE' ||\r\n              loadresp.data.rows.lastStatus === 'READY')\r\n          ) {\r\n            this.$Message.error({\r\n              content: '当前作业状态不为SUCCESS或FAILURE或READY,不能修改作业属性',\r\n              duration: 15,\r\n              closable: true\r\n            })\r\n            this.formBean.lastStatus = loadresp.data.rows.lastStatus\r\n            return\r\n          }\r\n          params.lastStatus = this.formBean.lastStatus\r\n          params.timeWindow = this.formBean.timeWindowS + '-' + this.formBean.timeWindowE\r\n          params.priority = this.formBean.priority\r\n          let httpConfig = {\r\n            method: 'POST',\r\n            url: RESOURCE_PATH + '/updateJobDetail',\r\n            data: params\r\n          }\r\n          // if (this.transData.id) {\r\n          // 置pending\r\n          //   if (params.lastStatus === 'Pending') {\r\n          //     // if (!this.isOwnPlatform(params)) {\r\n          //     //   return\r\n          //     // }\r\n          //     httpConfig.method = 'POST'\r\n          //     httpConfig.url =\r\n          //                   RESOURCE_PATH +\r\n          //                   '/pending/' +\r\n          //                   this.transData.id\r\n          //   } else {\r\n          //     if (this.original !== params.priority) {\r\n          //       if (!this.isOwnPlatform(params)) {\r\n          //         return\r\n          //       }\r\n          //       httpConfig.method = 'POST'\r\n          //       httpConfig.url =\r\n          //                     RESOURCE_PATH +\r\n          //                     '/priority/' +\r\n          //                     this.transData.id\r\n          //     } else {\r\n          //       httpConfig.method = 'PUT'\r\n          //       httpConfig.url =\r\n          //                   RESOURCE_PATH + '/' + this.transData.id\r\n          //     }\r\n          //   }\r\n          // } else {\r\n          //   httpConfig.method = 'POST'\r\n          // }\r\n          // const nparams = {}\r\n          // for (let key in this.udsjobConWR) {\r\n          //   if (this.udsjobConWR[key] === true) {\r\n          //     nparams[key] = params[key]\r\n          //   }\r\n          // }\r\n          // nparams.authps = this.formBean.platform + this.formBean.systems\r\n          // httpConfig.data = nparams\r\n          this.loading = true\r\n          this.$ajax(httpConfig).then(resp => {\r\n            this.loading = false\r\n            if (resp.status && resp.status === 200) {\r\n              this.cancel()\r\n            }\r\n          })\r\n        })\r\n      })\r\n    },\r\n    /**\r\n         * 平台管理员操作权限特殊处理增加判断\r\n         * 置Pending、修改作业优先级，仅当角色为平台管理员、平台是该用户拥有的才可以操作\r\n         *\r\n         **/\r\n    isOwnPlatform (job) {\r\n      let authPlatform = store.getters.getPlatforms\r\n      if (authPlatform.indexOf('ROLE_ADMIN') === -1) {\r\n        if (authPlatform.length > 0) {\r\n          if (authPlatform.includes(job.platform)) {\r\n            return true\r\n          } else {\r\n            // 修改的平台不是所属平台\r\n            this.$Message.error({\r\n              content: '操作权限不足，请联系管理员确认！',\r\n              duration: 15,\r\n              closable: true\r\n            })\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    /**\r\n         * 返回到数据视图\r\n         **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        prevTab = 'joblist'\r\n      }\r\n      let queryCache = {\r\n        formBean: this.transData.formBean,\r\n        currentPage: this.transData.currentPage,\r\n        pageSize: this.transData.pageSize\r\n      }\r\n      let backParam = {\r\n        statusName: 'table',\r\n        prevTab: prevTab,\r\n        type: 'back'\r\n      }\r\n      if (this.transData.jobStatus) {\r\n        queryCache.jobStatus = this.transData.jobStatus\r\n      }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n      // this.$emit('switch', {statusName: \"table\",prevTab: prevTab, type:\"back\"});\r\n      // this.$emit('switch',{statusName: \"table\"});\r\n    },\r\n    switchLastStatus (val) {\r\n      if (val === 'SUCCESS') {\r\n        this.$Message.warning({\r\n          content: '置SUCCESS后作业不会自动触发下游',\r\n          duration: 5,\r\n          closable: true\r\n        })\r\n      }\r\n    },\r\n    querypriorityList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'priority' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.priorityList = []\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.priorityList.push(tmp)\r\n        })\r\n      })\r\n    },\r\n    querylocationList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = []\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.locationList.push(tmp)\r\n        })\r\n      })\r\n    }\r\n  },\r\n  /**\r\n     * 视图挂载\r\n     **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n",{"version":3,"sources":["Attr.vue"],"names":[],"mappings":";AAofile":"Attr.vue","sourceRoot":"src/view/spdb/job/jobList","sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"margin-bottom:5px;\">\r\n            <Row>\r\n                <Col span=\"20\">\r\n                    <div\r\n                        style=\"font-size:14px;font-weight: bold; color: #464c5b;margin-left:5px;\"\r\n                    >\r\n                        修改属性 &nbsp;&nbsp;平台名:{{\r\n                            this.formBean.platform\r\n                        }}\r\n                        &nbsp;&nbsp;应用名:{{\r\n                            this.formBean.systems\r\n                        }}\r\n                        &nbsp;&nbsp;作业名:{{ this.formBean.job }}\r\n                    </div>\r\n                </Col>\r\n                <Col span=\"4\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        type=\"primary\"\r\n                        icon=\"ios-arrow-back\"\r\n                        @click=\"cancel\"\r\n                        style=\"\"\r\n                        >返回</Button\r\n                    >\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        <Form\r\n            ref=\"attrForm\"\r\n            :model=\"formBean\"\r\n            :label-width=\"180\"\r\n            :rules=\"formRule\"\r\n        >\r\n            <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"platform\" label=\"平台名\">\r\n                        <Input readonly v-model=\"formBean.platform\" />\r\n                    </FormItem>\r\n                </Col>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"systems\" label=\"应用名\">\r\n                        <Input readonly v-model=\"formBean.systems\" />\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"job\" label=\"作业名\">\r\n                        <Input\r\n                            readonly\r\n                            type=\"textarea\"\r\n                            :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                            v-model=\"formBean.job\"\r\n                        />\r\n                    </FormItem>\r\n                </Col>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"priority\" label=\"作业优先级\" v-show=\"udsjobConWR.priority\">\r\n                        <Input\r\n                            :readonly=\"false\"\r\n                            placeholder=\"0-1000\"\r\n                            v-model=\"formBean.priority\"\r\n                        />\r\n                         <!-- <Select :transfer=\"true\" filterable v-model=\"formBean.priority\" clearable>\r\n                            <Option v-for=\"item in priorityList\" :value=\"item.value\" :key=\"item.value\" >{{ item.label }}</Option>\r\n                        </Select> -->\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"callAgainMaxNum\" label=\"最大重调次数\" v-show=\"udsjobConWR.callAgainMaxNum\">\r\n                        <Input\r\n                            placeholder=\"请输入数字0-10\"\r\n                            v-model=\"formBean.callAgainMaxNum\"\r\n                        />\r\n                    </FormItem>\r\n                </Col>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"jobDate\" label=\"TXDate\" >\r\n                        <DatePicker\r\n                            :disabled=\"!udsjobConWR.jobDate\"\r\n                            :transfer=\"true\"\r\n                            type=\"date\"\r\n                            parse=\"yyyy-MM-dd\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            v-model=\"formBean.jobDate\"\r\n                        ></DatePicker>\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"lastStatus\" label=\"作业状态\" v-show=\"udsjobConWR.lastStatus\">\r\n                        <RadioGroup v-model=\"formBean.lastStatus\" @on-change=\"switchLastStatus\">\r\n                            <Radio label=\"PENDING\"><span>PENDING</span></Radio>\r\n                            <Radio label=\"READY\"><span>READY</span></Radio>\r\n                            <Radio label=\"SUCCESS\"><span>SUCCESS</span></Radio>\r\n                        </RadioGroup>\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"checkFrequency\" label=\"是否检测时间\" v-show=\"udsjobConWR.checkFrequency\">\r\n                        <Checkbox v-model=\"formBean.checkFrequency\"\r\n                            >启用</Checkbox\r\n                        >\r\n                        <!-- <Input  placeholder='1或0' v-model=\"formBean.checkFrequency\"/> -->\r\n                    </FormItem>\r\n                </Col>\r\n                <Col span=\"8\">\r\n                    <FormItem\r\n                        prop=\"checkTimeTrigger\"\r\n                        label=\"检测是否采用时间触发\"\r\n                        v-show=\"udsjobConWR.checkTimeTrigger\"\r\n                    >\r\n                        <Checkbox v-model=\"formBean.checkTimeTrigger\"\r\n                            >启用</Checkbox\r\n                        >\r\n                        <!-- <Input  placeholder='1或0' v-model=\"formBean.checkTimeTrigger\"/> -->\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row> </Row>\r\n\r\n            <Row>\r\n                <Col span=\"12\">\r\n                    <FormItem prop=\"timeWindow\" label=\"作业时间窗口\" v-show=\"udsjobConWR.timeWindow\">\r\n                        开始:\r\n                        <TimePicker\r\n                            :transfer=\"true\"\r\n                            v-model=\"formBean.timeWindowS\"\r\n                            format=\"HH:mm\"\r\n                            placement=\"bottom-end\"\r\n                            placeholder=\"选择时间范围\"\r\n                        ></TimePicker>\r\n                        结束:\r\n                        <TimePicker\r\n                            :transfer=\"true\"\r\n                            v-model=\"formBean.timeWindowE\"\r\n                            format=\"HH:mm\"\r\n                            placement=\"bottom-end\"\r\n                            placeholder=\"选择时间范围\"\r\n                        ></TimePicker>\r\n                    </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <!-- <Row>\r\n                <Col span=\"8\">\r\n                    <FormItem prop=\"dbControl\" label=\"逻辑集群\" v-show=\"udsjobConWR.dbControl\">\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in locationList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n                </Col>\r\n            </Row> -->\r\n            <Row>\r\n          <!-- <Col span=\"8\">\r\n            <FormItem prop=\"checkStreamSelf\" label=\"是否启用stream文件检测\" v-show=\"udsjobConWR.checkStreamSelf\">\r\n              <!--<Input v-model=\"formBean.resStatus\"/>\r\n              <Select filterable  v-model=\"formBean.checkStreamSelf\" clearable>\r\n                  <Option v-for=\"item in cfsData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                </Select>\r\n            </FormItem>\r\n          </Col> -->\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"ignoreError\" label=\"是否忽视错误\" v-show=\"udsjobConWR.ignoreError\">\r\n              <!--<Input v-model=\"formBean.resStatus\"/>-->\r\n              <Select filterable  v-model=\"formBean.ignoreError\" clearable>\r\n                  <Option v-for=\"item in igData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                </Select>\r\n            </FormItem>\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"8\">\r\n            <FormItem prop=\"batch\" label=\"批次号\" v-show=\"udsjobConWR.multiBatch\">\r\n              <InputNumber :max=\"10000\" :min=\"0\" v-model=\"formBean.multiBatch\"></InputNumber>\r\n            </FormItem>\r\n          </Col>\r\n      </Row>\r\n        </Form>\r\n\r\n        <div>\r\n            <Button\r\n                type=\"primary\"\r\n                :loading=\"loading\"\r\n                icon=\"md-add\"\r\n                @click=\"save\"\r\n                >保存</Button\r\n            >\r\n            <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\"\r\n                >取消</Button\r\n            >\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport store from '@/store/index'\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJob'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    const timeWindowValid = (rule, value, callback, source, options) => {\r\n      if (!this.formBean.platform || !this.formBean.systems) {\r\n        callback()\r\n        return\r\n      }\r\n      let timeWindowS = this.formBean.timeWindowS\r\n      let timeWindowE = this.formBean.timeWindowE\r\n      if (!timeWindowS) {\r\n        callback(new Error('开始不能为空'))\r\n      }\r\n      if (!timeWindowE) {\r\n        callback(new Error('结束不能为空'))\r\n      }\r\n      // console.log(utils.dateDiff('20190901 '+timeWindowS,'20190901 '+timeWindowE ,'datetime'));\r\n      if (\r\n        utils.dateDiff(\r\n          '20190901 ' + timeWindowS,\r\n          '20190901 ' + timeWindowE,\r\n          'datetime'\r\n        ) <= 0\r\n      ) {\r\n        callback(new Error('请确定开始时间小于结束时间'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const callAgainMaxNumValid = (\r\n      rule,\r\n      value,\r\n      callback,\r\n      source,\r\n      options\r\n    ) => {\r\n      if (!this.formBean.platform || !this.formBean.systems) {\r\n        callback()\r\n        return\r\n      }\r\n      // alert(1)\r\n      // console.log(new Number(this.formBean.callAgainMaxNum) > -1 && new Number(this.formBean.callAgainMaxNum) <= 10);\r\n      if (\r\n        new Number(this.formBean.callAgainMaxNum) > -1 &&\r\n                new Number(this.formBean.callAgainMaxNum) <= 10\r\n      ) {\r\n        callback()\r\n      } else {\r\n        callback(new Error('最大重调次数范围0-10'))\r\n      }\r\n    }\r\n    return {\r\n      // 作业属性读写权限控制\r\n      udsjobConWR: {\r\n        priority: true,\r\n        callAgainMaxNum: true,\r\n        jobDate: true,\r\n        timeWindow: true,\r\n        lastStatus: true,\r\n        checkFrequency: true,\r\n        checkTimeTrigger: true,\r\n        dbControl: true,\r\n        checkFileStream: true,\r\n        ignoreError: true,\r\n        multiBatch: true\r\n      },\r\n      original: '',\r\n      formBean: {},\r\n      loading: false,\r\n      locationList: [],\r\n      priorityList: [],\r\n      formRule: {\r\n        priority: [\r\n          {\r\n            required: true,\r\n            message: '作业优先级不能为空，只能为数字'\r\n          }\r\n        ],\r\n        callAgainMaxNum: [\r\n          {\r\n            required: true,\r\n            message: '最大重调次数不能为空，只能为数字'\r\n          },\r\n          { validator: callAgainMaxNumValid, trigger: 'blur' }\r\n        ],\r\n        timeWindow: [\r\n          { required: true, message: '不能为空' },\r\n          { validator: timeWindowValid, trigger: 'blur' }\r\n        ],\r\n        checkFrequency: [{ required: true, message: '不能为空' }],\r\n        checkTimeTrigger: [{ required: true, message: '不能为空' }],\r\n        jobDate: [{ required: true, message: '不能为空' }],\r\n        jobType: [{ required: true, message: '不能为空' }]\r\n      },\r\n      cfsData: [{ value: 1, label: '是' }, { value: 0, label: '否' }],\r\n      igData: [{ value: 1, label: '是' }, { value: 0, label: '否' }]\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n         * 初始化\r\n         **/\r\n    init () {\r\n      if (this.transData.id) {\r\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        let params = {}\r\n        params.platform = this.transData.jobData.platform\r\n        params.systems = this.transData.jobData.systems\r\n        params.job = this.transData.jobData.job\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectJobDetail',\r\n          params: params\r\n        }\r\n        this.$ajax(loadConfig).then(resp => {\r\n          let data = resp.data.rows\r\n          if (data.timeWindow) {\r\n            data.timeWindowS = data.timeWindow.split('-')[0]\r\n            data.timeWindowE = data.timeWindow.split('-')[1]\r\n          }\r\n          if (data.ignoreError) {\r\n            data.ignoreError = 1\r\n          } else {\r\n            data.ignoreError = 0\r\n          }\r\n          // if (data.checkFrequency === 1) {\r\n          //   data.checkFrequency = true\r\n          // } else {\r\n          //   data.checkFrequency = false\r\n          // }\r\n          // if (data.checkTimeTrigger === 1) {\r\n          //   data.checkTimeTrigger = true\r\n          // } else {\r\n          //   data.checkTimeTrigger = false\r\n          // }\r\n\r\n          this.formBean = data\r\n          this.original = data.priority\r\n        })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.querylocationList()\r\n      // this.querypriorityList()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n         * 保存表单\r\n         **/\r\n    save () {\r\n      this.$refs.attrForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.jobDate = utils.fmtDate(this.formBean.jobDate, 'yyyy-MM-dd')\r\n        params.jobType = this.formBean.jobType\r\n        // if (this.formBean.checkFrequency === true) {\r\n        //   params.checkFrequency = 1\r\n        // } else {\r\n        //   params.checkFrequency = 0\r\n        // }\r\n        // if (this.formBean.checkTimeTrigger === true) {\r\n        //   params.checkTimeTrigger = 1\r\n        // } else {\r\n        //   params.checkTimeTrigger = 0\r\n        // }\r\n        let param = {}\r\n        param.platform = this.transData.jobData.platform\r\n        param.systems = this.transData.jobData.systems\r\n        param.job = this.transData.jobData.job\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectJobDetail',\r\n          params: param\r\n        }\r\n        this.$ajax(loadConfig).then(loadresp => {\r\n          if (!(loadresp.data.rows.lastStatus === 'SUCCESS' ||\r\n              loadresp.data.rows.lastStatus === 'FAILURE' ||\r\n              loadresp.data.rows.lastStatus === 'READY')\r\n          ) {\r\n            this.$Message.error({\r\n              content: '当前作业状态不为SUCCESS或FAILURE或READY,不能修改作业属性',\r\n              duration: 15,\r\n              closable: true\r\n            })\r\n            this.formBean.lastStatus = loadresp.data.rows.lastStatus\r\n            return\r\n          }\r\n          params.lastStatus = this.formBean.lastStatus\r\n          params.timeWindow = this.formBean.timeWindowS + '-' + this.formBean.timeWindowE\r\n          params.priority = this.formBean.priority\r\n          let httpConfig = {\r\n            method: 'POST',\r\n            url: RESOURCE_PATH + '/updateJobDetail',\r\n            data: params\r\n          }\r\n          // if (this.transData.id) {\r\n          // 置pending\r\n          //   if (params.lastStatus === 'Pending') {\r\n          //     // if (!this.isOwnPlatform(params)) {\r\n          //     //   return\r\n          //     // }\r\n          //     httpConfig.method = 'POST'\r\n          //     httpConfig.url =\r\n          //                   RESOURCE_PATH +\r\n          //                   '/pending/' +\r\n          //                   this.transData.id\r\n          //   } else {\r\n          //     if (this.original !== params.priority) {\r\n          //       if (!this.isOwnPlatform(params)) {\r\n          //         return\r\n          //       }\r\n          //       httpConfig.method = 'POST'\r\n          //       httpConfig.url =\r\n          //                     RESOURCE_PATH +\r\n          //                     '/priority/' +\r\n          //                     this.transData.id\r\n          //     } else {\r\n          //       httpConfig.method = 'PUT'\r\n          //       httpConfig.url =\r\n          //                   RESOURCE_PATH + '/' + this.transData.id\r\n          //     }\r\n          //   }\r\n          // } else {\r\n          //   httpConfig.method = 'POST'\r\n          // }\r\n          // const nparams = {}\r\n          // for (let key in this.udsjobConWR) {\r\n          //   if (this.udsjobConWR[key] === true) {\r\n          //     nparams[key] = params[key]\r\n          //   }\r\n          // }\r\n          // nparams.authps = this.formBean.platform + this.formBean.systems\r\n          // httpConfig.data = nparams\r\n          this.loading = true\r\n          this.$ajax(httpConfig).then(resp => {\r\n            this.loading = false\r\n            if (resp.status && resp.status === 200) {\r\n              this.cancel()\r\n            }\r\n          })\r\n        })\r\n      })\r\n    },\r\n    /**\r\n         * 平台管理员操作权限特殊处理增加判断\r\n         * 置Pending、修改作业优先级，仅当角色为平台管理员、平台是该用户拥有的才可以操作\r\n         *\r\n         **/\r\n    isOwnPlatform (job) {\r\n      let authPlatform = store.getters.getPlatforms\r\n      if (authPlatform.indexOf('ROLE_ADMIN') === -1) {\r\n        if (authPlatform.length > 0) {\r\n          if (authPlatform.includes(job.platform)) {\r\n            return true\r\n          } else {\r\n            // 修改的平台不是所属平台\r\n            this.$Message.error({\r\n              content: '操作权限不足，请联系管理员确认！',\r\n              duration: 15,\r\n              closable: true\r\n            })\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    /**\r\n         * 返回到数据视图\r\n         **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        prevTab = 'joblist'\r\n      }\r\n      let queryCache = {\r\n        formBean: this.transData.formBean,\r\n        currentPage: this.transData.currentPage,\r\n        pageSize: this.transData.pageSize\r\n      }\r\n      let backParam = {\r\n        statusName: 'table',\r\n        prevTab: prevTab,\r\n        type: 'back'\r\n      }\r\n      if (this.transData.jobStatus) {\r\n        queryCache.jobStatus = this.transData.jobStatus\r\n      }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n      // this.$emit('switch', {statusName: \"table\",prevTab: prevTab, type:\"back\"});\r\n      // this.$emit('switch',{statusName: \"table\"});\r\n    },\r\n    switchLastStatus (val) {\r\n      if (val === 'SUCCESS') {\r\n        this.$Message.warning({\r\n          content: '置SUCCESS后作业不会自动触发下游',\r\n          duration: 5,\r\n          closable: true\r\n        })\r\n      }\r\n    },\r\n    querypriorityList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'priority' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.priorityList = []\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.priorityList.push(tmp)\r\n        })\r\n      })\r\n    },\r\n    querylocationList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = []\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.locationList.push(tmp)\r\n        })\r\n      })\r\n    }\r\n  },\r\n  /**\r\n     * 视图挂载\r\n     **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n</script>\r\n"]}]}