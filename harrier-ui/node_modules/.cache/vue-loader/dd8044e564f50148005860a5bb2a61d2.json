{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\main\\components\\user\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\main\\components\\user\\user.vue","mtime":1681468306468},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport './user.less'\r\nimport utils from '@/common/utils'\r\nimport { mapActions } from 'vuex'\r\n// import { RSAKeyPair, encryptedString } from 'speed4j-front-commonjs'\r\nimport env from '@/config'\r\nimport { localRemove } from '@/libs/util'\r\nexport default {\r\n  data () {\r\n    return {\r\n      userChName: '',\r\n      userMsg: false,\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      newPassword2: '',\r\n      loading: false,\r\n      isview: false,\r\n      key: ''\r\n    }\r\n  },\r\n  name: 'User',\r\n  props: {\r\n  },\r\n  computed: {\r\n    userName () {\r\n      return this.$store.getters.getUserName\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogOut'\r\n    ]),\r\n    logout () {\r\n      // utils.logout(this.$router)\r\n      localRemove('route')\r\n      this.handleLogOut().then(() => {\r\n        this.$router.push({\r\n          name: 'login'\r\n        })\r\n      })\r\n    },\r\n    message () {\r\n      this.$router.push({\r\n        name: 'message_page'\r\n      })\r\n    },\r\n    handleClick (name) {\r\n      switch (name) {\r\n        case '退出': this.logout()\r\n          break\r\n        case '修改密码':\r\n          this.userMsg = true\r\n          // if (env.enableVerifyPass) {\r\n          //   this.getKey()\r\n          // }\r\n          break\r\n      }\r\n    },\r\n    getUserName () {\r\n      // const userconfig = {\r\n      //   method: 'GET',\r\n      //   url: '/user',\r\n      //   params: { username: this.$store.getters.getUser.username }\r\n      // }\r\n      // this.$ajax(userconfig).then(resp => {\r\n      //   if (resp.data.rows) {\r\n      //     this.userChName = resp.data.rows[0].userchname\r\n      //   }\r\n      // })\r\n      this.userChName = this.$store.getters.getUserChName()\r\n    },\r\n    userOk () {\r\n      if (this.oldPassword) {\r\n        if (\r\n          this.newPassword === this.newPassword2 &&\r\n        !(this.newPassword === this.oldPassword)\r\n        ) {\r\n          var pwreg = /^(?![S|s]pdb.123)(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[`~!@#$%^&*()_+<>?:\"{},.;'\\/[\\]\\|\\\\=-]).*$/\r\n          if (pwreg.test(this.newPassword)) {\r\n            let params = {}\r\n            // params.oldPassword = encryptedString(this.key, this.oldPassword)\r\n            // params.newPassword = encryptedString(this.key, this.newPassword)\r\n            params.oldPassword = this.oldPassword\r\n            params.newPassword = this.newPassword\r\n            let httpConfig = {\r\n              method: 'PUT',\r\n              url: '/user/updatePwd',\r\n              params: params\r\n            }\r\n            this.loading = true\r\n            this.isview = true\r\n            this.$ajax(httpConfig).then(resp => {\r\n              if (resp.data === 'success') {\r\n                this.$Message.success('修改成功！')\r\n                this.userCancel()\r\n              } else if (resp.data === 'pwdfail') {\r\n                this.$Message.error('密码不匹配，修改失败！')\r\n              } else if (resp.data === 'userfail') {\r\n                this.$Message.error('登录超时，请重新登录！')\r\n                this.logout()\r\n              } else {\r\n                this.$Message.error('修改失败！')\r\n              }\r\n              this.loading = false\r\n              this.isview = false\r\n            })\r\n          } else {\r\n            this.$Message.error('密码不符合规则,必须是字母数组和特殊字符组合！')\r\n          }\r\n        } else {\r\n          this.$Message.error('两次输入密码不同或新旧密码相同！')\r\n        }\r\n      } else {\r\n        this.$Message.error('请输入旧密码！')\r\n      }\r\n    },\r\n    // getKey: function () {\r\n    //   // load rsa key 加密传输密码\r\n    //   this.$ajax({\r\n    //     url: '/login/key',\r\n    //     method: 'GET'\r\n    //   })\r\n    //     .then(response => {\r\n    //       if (response.status === 200) {\r\n    //         // 成功\r\n    //         this.exponent = response.data.exponent\r\n    //         this.modulus = response.data.modulus\r\n    //         this.key = new RSAKeyPair(this.exponent, '', this.modulus)\r\n    //         // this.isClick = false;\r\n    //       } else {\r\n    //         this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n    //         // this.isClick = true;\r\n    //         let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n    //         promise.then(() => this.getKey())\r\n    //       }\r\n    //     })\r\n    //     // eslint-disable-next-line handle-callback-err\r\n    //     .catch(error => {\r\n    //       // console.log(error);\r\n    //       this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n    //       // this.isClick = true;\r\n    //       let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n    //       promise.then(() => this.getKey())\r\n    //     })\r\n    // },\r\n    userCancel () {\r\n      this.userMsg = false\r\n      this.oldPassword = ''\r\n      this.newPassword = ''\r\n      this.newPassword2 = ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getUserName()\r\n  }\r\n}\r\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";AAqfile":"user.vue","sourceRoot":"src/components/main/components/user","sourcesContent":["<template>\r\n  <div class=\"sys-bar-user\">\r\n    <Dropdown trigger=\"click\" style=\"font-size:14px;\" @on-click=\"handleClick\">\r\n      <a class=\"sys-bar-user-a\" href=\"javascript:void(0)\">\r\n        <Icon type=\"md-person\" class=\"sys-bar-user-a\" style=\"font-size:22px\"></Icon>\r\n        <!-- &nbsp; -->\r\n        <span class=\"sys-bar-user-a\">您好, {{ userChName ? userChName : userName }}</span>\r\n        <!-- &nbsp; -->\r\n        <Icon :size=\"18\" class=\"sys-bar-user-a\" type=\"md-arrow-dropdown\"></Icon>\r\n      </a>\r\n      <DropdownMenu slot=\"list\" class=\"select-menu\">\r\n        <DropdownItem name=\"修改密码\">修改密码</DropdownItem>\r\n        <DropdownItem name=\"退出\">退出</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n    <!-- 用户弹窗 -->\r\n    <Modal\r\n\t\t\tv-model=\"userMsg\"\r\n\t\t\ttitle=\"修改密码\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n        <Form>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col span=\"20\">\r\n              <Input type=\"password\" v-model=\"oldPassword\">\r\n                <span slot=\"prepend\" style=\"display: inline-block;width:70px\">旧密码：</span>\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n          <Row style=\"margin-top:6px\" type=\"flex\" justify=\"center\">\r\n            <Col span=\"20\">\r\n              <Input type=\"password\" v-model=\"newPassword\">\r\n                <span slot=\"prepend\" style=\"display: inline-block;width:70px\">新密码：</span>\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n          <Row style=\"margin-top:6px\" type=\"flex\" justify=\"center\">\r\n            <Col span=\"20\">\r\n              <Input type=\"password\" v-model=\"newPassword2\">\r\n                <span slot=\"prepend\" style=\"display: inline-block;width:70px\">再次输入：</span>\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <div slot=\"footer\">\r\n          <Button type=\"primary\" :loading=\"loading\" @click=\"userOk\">确定</Button>\r\n          <Button type=\"text\" :disabled=\"isview\" @click=\"userCancel\">取消</Button>\r\n        </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './user.less'\r\nimport utils from '@/common/utils'\r\nimport { mapActions } from 'vuex'\r\n// import { RSAKeyPair, encryptedString } from 'speed4j-front-commonjs'\r\nimport env from '@/config'\r\nimport { localRemove } from '@/libs/util'\r\nexport default {\r\n  data () {\r\n    return {\r\n      userChName: '',\r\n      userMsg: false,\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      newPassword2: '',\r\n      loading: false,\r\n      isview: false,\r\n      key: ''\r\n    }\r\n  },\r\n  name: 'User',\r\n  props: {\r\n  },\r\n  computed: {\r\n    userName () {\r\n      return this.$store.getters.getUserName\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogOut'\r\n    ]),\r\n    logout () {\r\n      // utils.logout(this.$router)\r\n      localRemove('route')\r\n      this.handleLogOut().then(() => {\r\n        this.$router.push({\r\n          name: 'login'\r\n        })\r\n      })\r\n    },\r\n    message () {\r\n      this.$router.push({\r\n        name: 'message_page'\r\n      })\r\n    },\r\n    handleClick (name) {\r\n      switch (name) {\r\n        case '退出': this.logout()\r\n          break\r\n        case '修改密码':\r\n          this.userMsg = true\r\n          // if (env.enableVerifyPass) {\r\n          //   this.getKey()\r\n          // }\r\n          break\r\n      }\r\n    },\r\n    getUserName () {\r\n      // const userconfig = {\r\n      //   method: 'GET',\r\n      //   url: '/user',\r\n      //   params: { username: this.$store.getters.getUser.username }\r\n      // }\r\n      // this.$ajax(userconfig).then(resp => {\r\n      //   if (resp.data.rows) {\r\n      //     this.userChName = resp.data.rows[0].userchname\r\n      //   }\r\n      // })\r\n      this.userChName = this.$store.getters.getUserChName()\r\n    },\r\n    userOk () {\r\n      if (this.oldPassword) {\r\n        if (\r\n          this.newPassword === this.newPassword2 &&\r\n        !(this.newPassword === this.oldPassword)\r\n        ) {\r\n          var pwreg = /^(?![S|s]pdb.123)(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[`~!@#$%^&*()_+<>?:\"{},.;'\\/[\\]\\|\\\\=-]).*$/\r\n          if (pwreg.test(this.newPassword)) {\r\n            let params = {}\r\n            // params.oldPassword = encryptedString(this.key, this.oldPassword)\r\n            // params.newPassword = encryptedString(this.key, this.newPassword)\r\n            params.oldPassword = this.oldPassword\r\n            params.newPassword = this.newPassword\r\n            let httpConfig = {\r\n              method: 'PUT',\r\n              url: '/user/updatePwd',\r\n              params: params\r\n            }\r\n            this.loading = true\r\n            this.isview = true\r\n            this.$ajax(httpConfig).then(resp => {\r\n              if (resp.data === 'success') {\r\n                this.$Message.success('修改成功！')\r\n                this.userCancel()\r\n              } else if (resp.data === 'pwdfail') {\r\n                this.$Message.error('密码不匹配，修改失败！')\r\n              } else if (resp.data === 'userfail') {\r\n                this.$Message.error('登录超时，请重新登录！')\r\n                this.logout()\r\n              } else {\r\n                this.$Message.error('修改失败！')\r\n              }\r\n              this.loading = false\r\n              this.isview = false\r\n            })\r\n          } else {\r\n            this.$Message.error('密码不符合规则,必须是字母数组和特殊字符组合！')\r\n          }\r\n        } else {\r\n          this.$Message.error('两次输入密码不同或新旧密码相同！')\r\n        }\r\n      } else {\r\n        this.$Message.error('请输入旧密码！')\r\n      }\r\n    },\r\n    // getKey: function () {\r\n    //   // load rsa key 加密传输密码\r\n    //   this.$ajax({\r\n    //     url: '/login/key',\r\n    //     method: 'GET'\r\n    //   })\r\n    //     .then(response => {\r\n    //       if (response.status === 200) {\r\n    //         // 成功\r\n    //         this.exponent = response.data.exponent\r\n    //         this.modulus = response.data.modulus\r\n    //         this.key = new RSAKeyPair(this.exponent, '', this.modulus)\r\n    //         // this.isClick = false;\r\n    //       } else {\r\n    //         this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n    //         // this.isClick = true;\r\n    //         let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n    //         promise.then(() => this.getKey())\r\n    //       }\r\n    //     })\r\n    //     // eslint-disable-next-line handle-callback-err\r\n    //     .catch(error => {\r\n    //       // console.log(error);\r\n    //       this.$Message.error('请求登录信息异常,等待后台恢复！')\r\n    //       // this.isClick = true;\r\n    //       let promise = new Promise(resolve => setTimeout(resolve, 10000))\r\n    //       promise.then(() => this.getKey())\r\n    //     })\r\n    // },\r\n    userCancel () {\r\n      this.userMsg = false\r\n      this.oldPassword = ''\r\n      this.newPassword = ''\r\n      this.newPassword2 = ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getUserName()\r\n  }\r\n}\r\n</script>\r\n"]}]}