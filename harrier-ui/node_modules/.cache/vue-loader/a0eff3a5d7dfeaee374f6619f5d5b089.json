{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Table.vue?vue&type=style&index=0&id=a267ae96&lang=css&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Table.vue","mtime":1681468306539},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n#joblistTable table td div{\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n}\r\n#joblistTable table th div{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n#confirmM .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmD .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmV .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmBatchActive .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#confirmBatchForceStart .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#upAndDownstream .ivu-modal-body{\r\n  width:100%;\r\n}\r\n#upAndDownstream .ivu-modal-wrap{\r\n  z-index: 1500 !important;\r\n}\r\n#upAndDownstream .ivu-modal-mask{\r\n  z-index: 1500 !important;\r\n}\r\n#drawerClass .ivu-drawer-wrap{\r\n  z-index: 3000 !important;\r\n}\r\n#drawerClass .ivu-drawer-mask{\r\n  z-index: 3000 !important;\r\n}\r\n.jobdetailclass {\r\n  background: #eee;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  line-height: 340%;\r\n}\r\n.jobdetailclass .ivu-col .span{\r\n  font-size: 14px;\r\n  margin-left: 2%;\r\n}\r\n\r\n.treeTitle:hover {\r\n  background-color: #daedf9;\r\n}\r\n.treeTitle:visited {\r\n  background-color: #daedf9;\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";AAklEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/view/spdb/job/jobList","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\" style=\"margin-top:20px;\">\r\n      <Form ref=\"udsjobForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\">\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <FormItem prop=\"platform\" label=\"平台名\">\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value+''\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"作业状态\">\r\n              <Select filterable v-model=\"formBean.lastStatus\" clearable>\r\n                <Option v-for=\"item in jobstatusData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"作业名\">\r\n              <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.job\" placeholder=\"支持模糊查询\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"1\">&nbsp;</Col>\r\n          <Col span=\"8\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n              <!-- <S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n              <S-AuthButton type=\"primary\" icon=\"ios-trash-outline\" @click=\"del\" :requestConfig=request.delReq>删除</S-AuthButton> -->\r\n              <!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button> -->\r\n              <!--  icon=\"md-add\"  -->\r\n              <!-- <s-auth-button :loading=\"loadingBatchA\" :disabled=\"ctrlloadingBatchADisable\" type=\"primary\" @click=\"batchActiveConfirm\" :requestConfig=request.batchActive>批量重调</s-auth-button> -->\r\n              <!--\r\n                <S-AuthButton :loading=\"loadingBatchFC\" :disabled=\"ctrlloadingBatchFCDisable\" type=\"primary\" @click=\"batchForceStartConfirm\" :requestConfig=request.batchForceStart>批量补数</S-AuthButton>\r\n              -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-table\" id=\"joblistTable\">\r\n      <Table  size=\"small\"  :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\" @on-sort-change=\"changeSort\">\r\n      </Table>\r\n    </div>\r\n\r\n    <div v-if=\"transData.showTable\" class=\"spdb-page\">\r\n      <Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\"  show-total show-sizer show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" ></Page>\r\n    </div>\r\n\r\n    <Modal id=\"confirmM\"\r\n      v-model=\"confirm.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert type=\"warning\" >确认kill作业:{{confirm.job}}</Alert>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"killJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"confirmD\"\r\n      v-model=\"confirmDisable.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Form  ref=\"confirmDisableForm\" :label-width=\"100\"  inline>\r\n          <Alert class=\"m-warn-con\" type=\"warning\" >禁用作业后，该作业不再运行</Alert>\r\n          <Alert class=\"m-warn-con\" type=\"warning\" >禁用作业影响该作业的触发作业运行</Alert>\r\n          <Checkbox class=\"m-warn-con\" v-model=\"res.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n        </Form>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" :loading=\"loadingdisable\" @click=\"disableJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"disableCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"confirmBatchActive\"\r\n      v-model=\"confirmBatchActive.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >批量重调会检查依赖，触发下游作业执行，确认是否进行批量重调?</Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"confirmBatchActive.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"batchActive\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmBatchActiveCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n  <Modal id=\"confirmBatchForceStart\"\r\n      v-model=\"confirmBatchForceStart.show\"\r\n      :mask-closable=\"false\"\r\n      width='50%'\r\n      title=\"提示\">\r\n      <div>\r\n        <div>\r\n          <Form ref=\"confirmBatchForceStartForm\" :model=\"forceStartFormBean\" :rules=\"forceStartRuleValidate\" :label-width=\"100\"   inline>\r\n            <Row>\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"jobDate\" label=\"补数日期\">\r\n                  <DatePicker style=\"width:96%\" type=\"date\" multiple  format=\"yyyyMMdd\" v-model=\"forceStartFormBean.jobDate\" ></DatePicker>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n\t\t\t      <Row>\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"multiBatch\" label=\"批次号\">\r\n                  <Input style=\"width:110%\" v-model=\"forceStartFormBean.multiBatch\" />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row >\r\n              <Col span=\"10\">\r\n                <FormItem prop=\"serverName\" label=\"执行节点\">\r\n                    <Select style=\"width:100%\" filterable v-model=\"forceStartFormBean.serverName\" clearable placeholder=\"请选择\">\r\n                      <Option v-for=\"item in serverData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n              </Col>\r\n\r\n              <Col span=\"14\" >\r\n                <FormItem>\r\n                  <Alert type=\"warning\" > 提示:udsslavedep是交换的节点，专门跑Datastage的。perl脚本选udsslave即可</Alert>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >确认是否进行批量补数?</Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"confirmBatchForceStart.isAgree\" > 我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" @click=\"batchForceStart\">确定</Button>\r\n          <Button type=\"primary\" @click=\"confirmBatchForceStartCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"confirmV\"\r\n      v-model=\"confirmVi.show\"\r\n      :mask-closable=\"false\"\r\n      title=\"提示\">\r\n      <div>\r\n        <Alert class=\"m-warn-con\" type=\"warning\" >\r\n            <span style=\"font-weight:bold\">友情提示:</span><br/>\r\n            <div style=\"margin-left:4%\">\r\n              1.置虚作业后，不再执行该作业的脚本<br/>\r\n              2.使用该作业数据的下游也无法获取该作业最新数据<br/>\r\n              3.请应用关注下游作业影响，建议同步通知下游负责人<br/>\r\n           </div>\r\n        </Alert>\r\n        <Checkbox class=\"m-warn-con\" v-model=\"res.isAgree\" >我承担该操作的一切后果</Checkbox>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div style=\"margin-left: 150px;\">\r\n          <Button type=\"primary\" :loading=\"loadingvitual\" @click=\"vitualJob\">确定</Button>\r\n          <Button type=\"primary\" @click=\"vitualCancel\">取消</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    <Modal id=\"upAndDownstream\"\r\n\t\t\tv-model=\"upAndDownstream.show\"\r\n\t\t\ttitle=\"上下游信息\"\r\n\t\t\twidth='75%'\r\n\t\t\t>\r\n      <div style=\"max-height:60vh;overflow-y:scroll;overflow-x:hidden\">\r\n        <div style=\"background:#eee;padding: 10px;\">\r\n          <Card>\r\n            <p slot=\"title\">上游作业信息</p>\r\n            <Tree :data=\"upstreamData\" :load-data=\"loadUpData\" :render=\"renderContent\" expand-node></Tree>\r\n          </Card>\r\n        </div>\r\n        <div style=\"background:#eee;padding: 10px\">\r\n          <Card>\r\n            <p slot=\"title\">下游作业信息</p>\r\n            <Tree :data=\"downstreamData\" :load-data=\"loadDownData\" :render=\"renderContent\" expand-node></Tree>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\r\n    <!-- 作业详情信息预览抽屉 -->\r\n    <Drawer width=\"50\" v-model=\"jobDrawer.show\" title=\"作业详细信息\" id=\"drawerClass\">\r\n      <div>\r\n        <div class=\"jobdetailclass\">\r\n          <Card>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              平台名:<span class=\"span\">{{jobDetailBean.platform}} </span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              应用名:<span class=\"span\"> {{jobDetailBean.systems}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              作业名:<span class=\"span\">{{jobDetailBean.job}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              作业最后执行状态:<span class=\"span\">{{jobDetailBean.lastStatus}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              最后执行作业日期:<span class=\"span\">{{jobDetailBean.jobDate}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              执行节点:<span class=\"span\">{{jobDetailBean.serverName}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              进入pending状态的时间:<span class=\"span\">{{jobDetailBean.pendingTime}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              进入dispatcherTime状态的时间:<span class=\"span\"> {{jobDetailBean.dispatcherTime}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              开始执行时间:<span class=\"span\">{{jobDetailBean.startTime}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              结束时间:<span class=\"span\">{{jobDetailBean.endTime}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              批次号:<span class=\"span\">{{jobDetailBean.multiBatch}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              触发方式:<span class=\"span\">{{streamTypeList[jobDetailBean.streamType]}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              执行次数:<span class=\"span\">{{jobDetailBean.numTimes}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              当前重调次数:<span class=\"span\">{{jobDetailBean.callAgainNum}}</span>\r\n            </Col>\r\n          </Row>\r\n          </Card>\r\n        </div>\r\n\r\n        <!-- <Divider/> -->\r\n        <div class=\"jobdetailclass\">\r\n          <Card>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              作业中文名:<span class=\"span\">{{jobDetailBean.jobName}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              作业类型:<span class=\"span\" v-text=\"jobDetailBean.jobType == 'D'? '日':jobDetailBean.jobType== 'C'? '定时':jobDetailBean.jobType== 'W'? '周': '月'\">{{jobDetailBean.jobType}}</span>\r\n            </Col>\r\n          </Row>\r\n           <Row>\r\n             <Col span=\"12\">\r\n              最大重调次数:<span class=\"span\">{{jobDetailBean.callAgainMaxNum}}</span>\r\n            </Col>\r\n            <!-- <Col span=\"12\">\r\n              偏移天数:<span class=\"span\">{{jobDetailBean.offsetDay}}</span>\r\n            </Col> -->\r\n            <Col span=\"12\">\r\n              窗口执行时间:<span class=\"span\">{{jobDetailBean.timewindow}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              虚作业:<span v-text=\"jobDetailBean.virtualEnable == 1?'是':'否'\" class=\"span\">{{jobDetailBean.virtualEnable}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              优先级:<span class=\"span\">{{jobDetailBean.priority}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              是否可用:<span v-text=\"jobDetailBean.enable ?'是':'否'\" class=\"span\">{{jobDetailBean.enable}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              逻辑集群:<span class=\"span\">{{dbControlList[jobDetailBean.dbControl]}}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span=\"12\">\r\n              是否检测时间:<span v-text=\"jobDetailBean.checkFrequency == 1?'是':'否'\" class=\"span\">{{jobDetailBean.checkFrequency}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              检测是否采用时间触发:<span v-text=\"jobDetailBean.checkTimeTrigger == 1?'是':'否'\" class=\"span\">{{jobDetailBean.checkTimeTrigger}}</span>\r\n            </Col>\r\n          </Row>\r\n          <!-- <Row>\r\n            <Col span=\"12\">\r\n              是否启用streamFile检测触发:<span class=\"span\">{{jobDetailBean.checkStreamSelf}}</span>\r\n            </Col>\r\n            <Col span=\"12\">\r\n              是否检测权重:<span class=\"span\">{{jobDetailBean.checkWeight}}</span>\r\n            </Col>\r\n          </Row> -->\r\n        </Card>\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\nimport common from '@/mixins/common'\r\nimport { Circle } from 'iview'\r\nimport SAuthButton from '_c/s-auth-button'\r\nconst platforms = store.getters.getPlatforms\r\nconst RESOURCE_PATH = '/udsJob'\r\n\r\nexport default {\r\n  components: {\r\n    SAuthButton\r\n  },\r\n  mixins: [ common ],\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const validatePlatform = (rule, value, callback) => {\r\n      if (!this.formBean.platform) {\r\n        callback(new Error('请输入数据！'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      jobDetailBean: {},\r\n      jobDrawer: {\r\n        show: false\r\n      },\r\n      upAndDownstream: {\r\n        show: false\r\n      },\r\n      upstreamData: [],\r\n      downstreamData: [],\r\n      serverData: [],\r\n      forceStartFormBean: {},\r\n      loadingBatchFC: false,\r\n      ctrlloadingBatchFCDisable: true,\r\n      loadingBatchA: false,\r\n      ctrlloadingBatchADisable: true,\r\n      jobtypeList: { 'D': '日', 'C': '定时', 'W': '周', 'M': '月' },\r\n      streamTypeList: {},\r\n      dbControlList: {},\r\n      loadingvitual: false,\r\n      loadingdisable: false,\r\n      res: { isAgree: true },\r\n      confirm: {\r\n        show: false,\r\n        job: '',\r\n        row: null\r\n      },\r\n      confirmDisable: {\r\n        show: false,\r\n        row: {}\r\n      },\r\n      confirmVi: {\r\n        show: false,\r\n        row: {}\r\n      },\r\n      confirmBatchActive: {\r\n        show: false,\r\n        isAgree: false\r\n      },\r\n      confirmBatchForceStart: {\r\n        show: false,\r\n        isAgree: false\r\n      },\r\n      platformData: [],\r\n      dropdownItems: [{ val: 'invoke' }, { val: '补数' }, { val: '置虚或实' }, { val: '启用禁用' }, { val: 'kill作业' }], //, {val: '查看脚本'}\r\n      systemData: [],\r\n      jobstatusData: [],\r\n      formBean: {},\r\n      udsJobStyle: {\r\n        status: 'black'\r\n      },\r\n      request: {\r\n        batchActive: {\r\n          method: 'POST',\r\n          url: '/udsjob/batchActive'\r\n        },\r\n        batchForceStart: {\r\n          method: 'POST',\r\n          url: '/udsjob/batchForceStart'\r\n        },\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n\r\n        {\r\n          type: 'selection',\r\n          width: 36,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          ellipsis: true,\r\n          width: 90,\r\n          sortable: true,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          ellipsis: true,\r\n          align: 'left',\r\n          width: 90,\r\n          sortable: true,\r\n          className: 'uds-job-column',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          ellipsis: false,\r\n          // tooltip: true,\r\n          sortable: true,\r\n          minWidth: 150,\r\n          className: 'uds-job-column',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  color: row.enable ? '' : 'red'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '类型',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 70,\r\n          maxWidth: 80,\r\n          // align: 'center',\r\n          sortable: true,\r\n          key: 'jobType',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginLeft: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'frequency', jobData: row }, this.getPageParam()))\r\n                    } else if (row.jobType == 'C') {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'trigger', jobData: row }, this.getPageParam()))\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'startTime'\r\n          /* render: (h, {column, index, row}) => {\r\n            let startArr = ['', '']\r\n            if (row.startTime) {\r\n              startArr = row.startTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, startArr[0]),\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, startArr[1])])\r\n          } */\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        /* render: (h, {column, index, row}) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : endArr[0]),\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : endArr[1])])\r\n          }\r\n        }, */\r\n        {\r\n          title: 'TXDate',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 100,\r\n          sortable: true,\r\n          key: 'jobDate',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.jobDate.substring(0, 10))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '虚作业',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          align: 'center',\r\n          width: 70,\r\n          key: 'virtualEnable',\r\n          render: (h, { column, index, row }) => {\r\n            let enableStatus = row.virtualEnable == 1 ? '是' : '否'\r\n            let colors = row.virtualEnable == 1 ? 'red' : 'green'\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: colors\r\n                }\r\n              }, enableStatus)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '上下游',\r\n          width: 60,\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  // icon: 'shuffle'\r\n                  icon: 'md-swap'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.upAndDownstream.show = true\r\n                    this.getUpstreamData(row.job, null, row)\r\n                    this.getDownstreamData(row.job, null, row)\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '依赖',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-arrow-back'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'dep', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'dep', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '作业画像',\r\n        //   width: 70,\r\n        //   align: 'center',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           icon: 'ios-image'\r\n        //         },\r\n        //         style: {\r\n        //           // marginRight: '5px'\r\n        //           margin: '0px',\r\n        //           fontSize: '20px',\r\n        //           border: 0,\r\n        //           padding: '4px 8px',\r\n        //           color: '#03399b',\r\n        //           background: 'transparent'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             let id = row.job\r\n        //             if (this.transData.jobStatus) {\r\n        //               this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n        //             } else {\r\n        //               this.$emit('switch', Object.assign({}, { id: id, statusName: 'img', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n        //             }\r\n        //           }\r\n        //         }\r\n        //       }, '')\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '运行记录',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'jobRecord', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobRecord', curTab: 'Table' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '脚本',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-search'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'script', jobData: row }, this.getPageParam()))\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'script', jobData: row }, this.getPageParam()))\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        /* {\r\n          title: '上游',\r\n          width: 36,\r\n          // fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, {id: id, statusName: 'upjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        }, */\r\n        /* {\r\n          title: '下游',\r\n          width: 50,\r\n          // fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, {id: id, jobStatus: this.transData.jobStatus, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, {id: id, statusName: 'downjobs', jobData: row}, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        }, */\r\n        /* {\r\n          title: '状态',\r\n          width: 36,\r\n          //fixed: 'right',\r\n          render: (h, {column,index, row}) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info',\r\n                },\r\n                style: {\r\n                  //marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click :() => {\r\n                    let id = row.job;\r\n                    this.$emit('switch', Object.assign({},{id: id,statusName: \"status\",jobData: row},this.getPageParam())); //提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '修改')\r\n            ])\r\n          }\r\n        }, */\r\n        {\r\n          title: '属性',\r\n          width: 50,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-create'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  margin: '0px',\r\n                  fontSize: '16px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  background: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    if (!row.enable) {\r\n                      this.$Message.error({\r\n                        content: '当前作业状态为禁用,不能修改作业属性',\r\n                        duration: 10,\r\n                        closable: true\r\n                      })\r\n                      return\r\n                    }\r\n                    let id = row.job\r\n                    if (!(row.lastStatus === 'SUCCESS' ||\r\n                        row.lastStatus === 'FAILURE' ||\r\n                        row.lastStatus === 'READY')\r\n                    ) {\r\n                      this.$Message.error({\r\n                        content: '当前作业状态不为SUCCESS或FAILURE或READY,不能修改作业属性',\r\n                        duration: 15,\r\n                        closable: true\r\n                      })\r\n                      return\r\n                    }\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'attr', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'attr', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 60,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('Dropdown', {\r\n              props: {\r\n                trigger: 'click',\r\n                placement: 'bottom-end',\r\n                transfer: true\r\n              },\r\n              style: {\r\n                paddingRight: '3px'\r\n              },\r\n              on: {\r\n                'on-click': (value) => {\r\n                  let flag = value\r\n                  this.execOpt(flag, row, index, column)\r\n                }\r\n              }\r\n            }, [\r\n              h('a', [\r\n                /* h('span', '更多'), */\r\n                h('Button', {\r\n                  props: {\r\n                    icon: 'ios-more'\r\n                  },\r\n                  style: {\r\n                  // marginRight: '5px'\r\n                    margin: '0px',\r\n                    fontSize: '20px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  }\r\n                })\r\n              ]),\r\n              h('DropdownMenu', {\r\n                slot: 'list'\r\n              },\r\n              this.dropdownItems.map(function (data) {\r\n                return h('DropdownItem', {\r\n                  props: {\r\n                    name: data.val\r\n\r\n                  },\r\n                  style: {\r\n                    color: '#3399ff'\r\n                    // paddingLeft: '2px',\r\n                    // paddingRight: '3px'\r\n                  }\r\n                }, data.val)\r\n              })\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      // gridData: [{platform: \"BDP\", system: \"DLA\", job: \"BDP_DLA_TEST\",serverName: \"SERVER1\", jobType:\"D\", lastStatus:\"Pending\",\r\n      // startTime: \"2019-06-31 8:00:00\", endTime:  \"2019-06-31 8:00:00\",jobDate: \"2019-06-31\"}],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      isRequirePlatform: true,\r\n      ruleValidate: {\r\n        // platform: [\r\n        //   { required: true, message: '请输入数据！', trigger: 'change' }\r\n        // ]\r\n        platform: [\r\n          { validator: validatePlatform, trigger: 'change' }\r\n        ]\r\n      },\r\n      forceStartRuleValidate: {\r\n        multiBatch: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        serverName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      fromto: '1'\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n\r\n      if (window.sessionStorage.getItem('errorlist_udsjob') || this.transData.jobStatus) {\r\n        this.fromto = '0'\r\n        // this.transData.jobStatus\r\n        if (window.sessionStorage.getItem('errorlist_udsjob') == '0') {\r\n          this.formBean.enable = 0\r\n        } else {\r\n          this.formBean.enable = 1\r\n          if (this.transData.formBean && (this.transData.formBean.lastStatus ||\r\n          this.transData.formBean.lastStatus.length == 0)) { this.formBean.lastStatus = this.transData.formBean.lastStatus } else { this.formBean.lastStatus = window.sessionStorage.getItem('errorlist_udsjob') }\r\n          if (this.transData.jobData) {\r\n            this.formBean.platform = this.transData.jobData.platform\r\n          }\r\n          // if (this.transData.jobData.platform) {\r\n          //  this.formBean.platform = this.transData.jobData.platform;\r\n          // }\r\n        }\r\n      }\r\n      /* if (!this.formBean.platform) {\r\n        console.log(this.formBean.platform)\r\n        if (!platforms.includes('ROLE_ADMIN')) {\r\n          this.formBean.platform = platforms[0]\r\n          this.querySystem()\r\n        }\r\n      } */\r\n      // console.log(this.transData.jobStatus);\r\n      // this.queryPlatform();\r\n      // this.search();\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      if (\r\n        window.sessionStorage.getItem('errorlist_udsjob') ||\r\n                this.transData.jobStatus\r\n      ) {\r\n        let prevTab = ''\r\n        let backParam = {}\r\n        if (this.transData.statusName === 'table') {\r\n          backParam.statusName = this.transData.prevTab\r\n        } else {\r\n          backParam.statusName = this.transData.statusName\r\n        }\r\n        backParam.udsjobsearch = '1'\r\n        this.$emit('switch', Object.assign({}, backParam))\r\n      } else {\r\n        this.$emit(\r\n          'switch',\r\n          Object.assign({}, { statusName: 'table' })\r\n        )\r\n      }\r\n      this.$refs.udsjobForm.validate(valid => {\r\n        if (!valid && this.fromto == '1') return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.current = this.page.current\r\n        params.size = this.page.size\r\n        for (let key in params) {\r\n          if (key === 'job') {\r\n            if (params[key] && params[key] !== '') {\r\n              params[key] = '%' + params[key].trim().toUpperCase() + '%'\r\n            } else {\r\n              delete params[key]\r\n            }\r\n          }\r\n          if (key === 'systems' && params[key]) {\r\n            params[key] = params[key].trim().toUpperCase()\r\n          }\r\n        }\r\n\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/selectAll',\r\n          params: params\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            if (resp.data.total && resp.data.total > 0) {\r\n              if (resp.data.rows && resp.data.rows.length === 0) {\r\n                this.page.current = 1\r\n                this.search()\r\n              }\r\n            }\r\n            this.gridData = resp.data.rows\r\n            this.page.total = resp.data.total\r\n          })\r\n      })\r\n    },\r\n    findServer () {\r\n      let param = {}\r\n      param.location = 'all'\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getServer',\r\n        params: param\r\n      }\r\n      this.serverData = []\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // let sData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.serverName\r\n            tmp.label = data.serverName\r\n            // sData.push(tmp)\r\n            this.serverData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    execOpt (flag, row, index, column) {\r\n      if (flag == 'invoke') {\r\n        let id = row.job\r\n        if (!row.enable) {\r\n          this.$Message.warning({\r\n            content: '该作业已被禁用，无法invoke',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'invoke', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'invoke', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == '补数') {\r\n        let id = row.job\r\n        if (!row.enable) {\r\n          this.$Message.warning({\r\n            content: '该作业已被禁用，无法补数',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'forcestart', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'forcestart', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == '置虚或实') {\r\n        if (row.virtualEnable == 1) {\r\n          let id = row.job\r\n          this.changeJobVEnable({ virtualEnable: row.virtualEnable, job: id }, index, row)\r\n        } else {\r\n          this.confirmV(row, index)\r\n        }\r\n      } else if (flag == '启用禁用') {\r\n        if (row.lastStatus == 'SUCCESS' || row.lastStatus == 'READY' || row.lastStatus == 'FAILURE') {\r\n          if (row.enable) {\r\n            this.confirmD(row, index)\r\n          } else {\r\n            let id = row.job\r\n            let enable = row.enable ? 0 : 1\r\n            this.changeJobEnable({ enable: enable, job: id }, index, row)\r\n          }\r\n        } else {\r\n          this.$Message.warning({\r\n            content: '当前该作业状态:' + row.lastStatus + '无法禁用',\r\n            duration: 3,\r\n            closable: true\r\n          })\r\n        }\r\n      } else if (flag == '查看脚本') {\r\n        let id = row.job\r\n        if (this.transData.jobStatus) {\r\n          this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'script', jobData: row }, this.getPageParam()))\r\n        } else {\r\n          this.$emit('switch', Object.assign({}, { id: id, statusName: 'script', jobData: row }, this.getPageParam()))\r\n        }\r\n      } else if (flag == 'kill作业') {\r\n        this.confirmBtn(row)\r\n      }\r\n    },\r\n    handleTreeData (data) {\r\n      data.forEach((data, index) => {\r\n        data.expand = false\r\n        let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n        let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n        data.title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n        if (data.children.length == 0) {\r\n          data.expand = false\r\n          data.children = []\r\n        } else {\r\n          this.handleTreeData(data.children)\r\n        }\r\n      })\r\n    },\r\n    renderContent (h, { root, node, data }) {\r\n      let col = '#515a6e'\r\n      if (data.udsJob) {\r\n        if (!data.udsJob.enable) { // 作业禁用\r\n          col = 'red'\r\n        }\r\n      }\r\n      return h('span', {\r\n        style: {\r\n          display: 'inline-block',\r\n          width: '100%'\r\n        }\r\n      }, [\r\n        h('span', [\r\n          h('a', {\r\n            style: {\r\n              color: col\r\n            },\r\n            class: {\r\n              treeTitle: true\r\n            },\r\n            on: {\r\n              click: () => {\r\n                let job = data.id ? data.id : data.title\r\n                this.jobDetailBean = {}\r\n                let params = {}\r\n                params.job = job\r\n                params.platform = data.udsJobMenu.platform\r\n                params.systems = data.udsJobMenu.systems\r\n                let httpConfig = {\r\n                  method: 'GET',\r\n                  url: RESOURCE_PATH + '/selectJobDetail',\r\n                  params: params\r\n                }\r\n                this.$ajax(httpConfig)\r\n                  .then(resp => {\r\n                    this.jobDetailBean = resp.data.rows\r\n                    this.jobDrawer.show = true\r\n                  })\r\n              }\r\n            }\r\n          }, data.title)\r\n        ])\r\n      ])\r\n    },\r\n    // 上游\r\n    getUpstreamData (job, level, row) {\r\n      if (!level) {\r\n        this.upstreamData = []\r\n        let obj = {\r\n          title: job,\r\n          loading: false,\r\n          expand: false,\r\n          children: [],\r\n          platform: row.platform,\r\n          systems: row.systems\r\n        }\r\n        this.upstreamData.push(obj)\r\n      }\r\n      let params = {}\r\n      params.job = job\r\n      params.level = level || '1'\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allUpjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // console.log('上游')\r\n          // console.log(resp.data)\r\n          if (resp.status && resp.status === 200) {\r\n            let tmpUpobsTree = this.upstreamData\r\n            tmpUpobsTree[0].expand = true\r\n            // let treeData = []\r\n            if (resp.data.length > 0) {\r\n              resp.data.forEach((data, index) => {\r\n                resp.data[index].loading = false\r\n                let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n                let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n                resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n                if (data.children.length == 0) {\r\n                  data.children = []\r\n                  data.expand = false\r\n                } else {\r\n                  data.expand = false\r\n                  this.handleTreeData(data.children)\r\n                }\r\n              })\r\n              tmpUpobsTree[0].children = resp.data\r\n              this.upstreamData = tmpUpobsTree\r\n            }\r\n          }\r\n        })\r\n    },\r\n    loadUpData (item, callback) {\r\n      let params = {}\r\n      params.job = item.id ? item.id : item.title\r\n      params.level = '1'\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allUpjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          let data = []\r\n          let tmp = {}\r\n          if (resp.data.length == 0) {\r\n            this.$Message.info('该作业已经没有上游了')\r\n          }\r\n          resp.data.forEach(node => {\r\n            let udsjob = node.udsJobMenu // lastStatus jobDate jobType\r\n            tmp = {}\r\n            let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n            tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n            // tmp.title = node.id\r\n            tmp.id = node.id\r\n            tmp.loading = false\r\n            tmp.children = []\r\n            data.push(tmp)\r\n          })\r\n          callback(data)\r\n        })\r\n    },\r\n    // 下游\r\n    getDownstreamData (job, level, row) {\r\n      if (!level) {\r\n        this.downstreamData = []\r\n        let obj = {\r\n          title: job,\r\n          loading: false,\r\n          expand: false,\r\n          children: [],\r\n          platform: row.platform,\r\n          systems: row.systems\r\n        }\r\n        this.downstreamData.push(obj)\r\n      }\r\n\r\n      let params = {}\r\n      params.job = job\r\n      params.level = level || '1'\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allDownjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // console.log('下游')\r\n          // console.log(resp.data)\r\n          if (resp.status && resp.status === 200) {\r\n            let tmpDownobsTree = this.downstreamData\r\n            tmpDownobsTree[0].expand = true\r\n            // let treeData = []\r\n            if (resp.data.length > 0) {\r\n              resp.data.forEach((data, index) => {\r\n                resp.data[index].loading = false\r\n                let udsjob = data.udsJobMenu // lastStatus jobDate jobType\r\n                let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n                resp.data[index].title = data.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n                if (data.children.length == 0) {\r\n                  data.children = []\r\n                  data.expand = false\r\n                } else {\r\n                  data.expand = false\r\n                  this.handleTreeData(data.children)\r\n                }\r\n              })\r\n              tmpDownobsTree[0].children = resp.data\r\n              this.downstreamData = tmpDownobsTree\r\n            }\r\n          }\r\n        })\r\n    },\r\n    // renderDownContent\r\n    loadDownData (item, callback) {\r\n      let params = {}\r\n      params.job = item.id ? item.id : item.title\r\n      params.level = '1'\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/allDownjobList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          let data = []\r\n          let tmp = {}\r\n          if (resp.data.length == 0) {\r\n            this.$Message.info('该作业已经没有下游了')\r\n          }\r\n          resp.data.forEach(node => {\r\n            let udsjob = node.udsJobMenu // lastStatus jobDate jobType\r\n            let depStatus = udsjob.depIsEnable ? '启用' : '禁用'\r\n            tmp = {}\r\n            tmp.title = node.title + ' | 状态:' + udsjob.lastStatus + ' | TXDATE:' + udsjob.jobDate + ' | 类型:' + udsjob.jobType + ' | 依赖:' + depStatus\r\n            // tmp.title = node.id\r\n            tmp.id = node.id\r\n            tmp.loading = false\r\n            tmp.children = []\r\n            data.push(tmp)\r\n          })\r\n          callback(data)\r\n        })\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.platform)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n    *改变作业是否enable状态\r\n    **/\r\n    changeJobEnable (params, index, row) {\r\n      // console.log(this.$store.getters.getBreadcrumb);\r\n      // params.authps = row.platform + row.system\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: '/udsJobConfig/setEnable',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingdisable = false\r\n          if (resp.status && resp.status == 200) {\r\n            this.gridData[index].enable = params.enable\r\n            this.confirmDisable.show = false\r\n          }\r\n        })\r\n    },\r\n    /**\r\n    *改变作业是否虚作业状态\r\n    **/\r\n    changeJobVEnable (params, index, row) {\r\n      if (params.virtualEnable === 1) {\r\n        params.virtualEnable = 0\r\n      } else if (params.virtualEnable === 0) {\r\n        params.virtualEnable = 1\r\n      }\r\n      // params.authps = row.platform + row.system\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      params.virtual = params.virtualEnable\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: '/udsJobConfig/setVirtual',\r\n        data: params\r\n      }\r\n      // httpConfig.method = 'PUT'\r\n      // httpConfig.url = '/udsjobconfig/' + params.job\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingvitual = false\r\n          if (resp.status && resp.status == 200) {\r\n            this.gridData[index].virtualEnable = params.virtualEnable\r\n            this.confirmVi.show = false\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n     * 列排序\r\n     **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      // console.log(\"column,key,order\"+ column.key );\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    // harrier getPlatformList\r\n    getPlatformList () {\r\n      // let loadConfig = {\r\n      //   method: 'GET',\r\n      //   url: '/udsSystem/listQuery'\r\n      // }\r\n      // this.$ajax(loadConfig)\r\n      //   .then(resp => {\r\n      //     let platformList = []\r\n      //     resp.data.forEach(data => {\r\n      //       platformList.push(data.platform)\r\n      //       // this.formBean.platform = \"UDS\";\r\n      //     })\r\n      //     platformList = Array.from(new Set(platformList))\r\n      //     platformList.forEach(data => {\r\n      //       let tmp = {}\r\n      //       tmp.value = data\r\n      //       tmp.label = data\r\n      //       this.platformData.push(tmp)\r\n      //       // this.formBean.platform = \"UDS\";\r\n      //     })\r\n      //     this.search()\r\n      //   })\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      this.search()\r\n      this.queryJobstatus()\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      // let loadConfig = {\r\n      //   method: 'GET',\r\n      //   url: '/udsSystem/listQuery'\r\n      // }\r\n      // this.systemData = []\r\n      // this.$refs.refsystem.setQuery('')\r\n      // if (this.formBean.platform) {\r\n      //   this.$ajax(loadConfig)\r\n      //     .then(resp => {\r\n      //       resp.data.forEach(data => {\r\n      //         if (this.formBean.platform === data.platform && data.systems !== '*') {\r\n      //           let tmp = {}\r\n      //           tmp.value = data.systems\r\n      //           tmp.label = data.systems\r\n      //           this.systemData.push(tmp)\r\n      //         }\r\n      //       })\r\n      //     })\r\n      // }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    // harrier test end\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          this.search()\r\n          this.queryjobtypeList()\r\n          this.queryDBControList()\r\n          this.queryStreamTypeList()\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      // modify by jcjin 20200528 for systemData返回值由对象调整为集合\r\n      //    this.$ajax(loadConfig)\r\n      //      .then(resp => {\r\n      //        if (this.transData.formBean && this.transData.formBean.system) {\r\n      //        this.formBean.system = this.transData.formBean.system;\r\n      //      } else {\r\n      //        this.formBean.system = \"\";\r\n      //      }\r\n      //      this.systemData = resp.data;\r\n      //\r\n      //    })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    queryJobstatus () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: { dicCode: 'jobStatus' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobstatusData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.dicValue\r\n            tmp.label = data.dicValue\r\n            this.jobstatusData.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n        })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    confirmBtn (row) {\r\n      if (!(row.lastStatus == 'Running')) {\r\n        this.$Message.error({\r\n          content: '当前作业状态不为Running',\r\n          duration: 15,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      this.confirm.job = row.job\r\n      this.confirm.row = row\r\n      this.confirm.show = true\r\n      // let id = row.job\r\n      // this.$emit('switch', Object.assign({}, { id: id, statusName: 'killjob', jobData: row }, this.getPageParam()))\r\n    },\r\n    confirmV (row, index) {\r\n      this.confirmVi.show = true\r\n      this.confirmVi.row = row\r\n      this.confirmVi.index = index\r\n    },\r\n    vitualJob () {\r\n      if (!this.res.isAgree == true) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      let id = this.confirmVi.row.job\r\n      this.loadingvitual = true\r\n      this.changeJobVEnable({ virtualEnable: this.confirmVi.row.virtualEnable, job: id }, this.confirmVi.index, this.confirmVi.row)\r\n    },\r\n    vitualCancel () {\r\n      this.confirmVi.show = false\r\n    },\r\n    confirmD (row, index) {\r\n      this.confirmDisable.show = true\r\n      this.confirmDisable.row = row\r\n      this.confirmDisable.index = index\r\n    },\r\n    disableJob () {\r\n      if (!this.res.isAgree == true) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      let id = this.confirmDisable.row.job\r\n      let enable = this.confirmDisable.row.enable ? 0 : 1\r\n      this.loadingdisable = true\r\n      this.changeJobEnable({ isAgree: this.res.isAgree, enable: enable, job: id }, this.confirmDisable.index, this.confirmDisable.row)\r\n    },\r\n    disableCancel () {\r\n      this.confirmDisable.show = false\r\n    },\r\n    confirmCancel () {\r\n      this.confirm.job = ''\r\n      this.confirm.row = null\r\n      this.confirm.show = false\r\n    },\r\n    confirmBatchForceStartCancel () {\r\n      this.confirmBatchForceStart.show = false\r\n    },\r\n    batchForceStartConfirm () {\r\n      // this.findServer()\r\n      this.confirmBatchForceStart.show = true\r\n    },\r\n    batchForceStart () {\r\n      this.$refs.confirmBatchForceStartForm.validate(valid => {\r\n        if (!valid) return\r\n        if (!this.confirmBatchForceStart.isAgree) {\r\n          this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n          return\r\n        }\r\n        const selectSystems = Array.from(this.selection, e => e.platform + e.system)\r\n        if (selectSystems.length < 1) {\r\n          this.$Message.warning('请至少选择一行')\r\n          return\r\n        }\r\n        let authSystems = store.getters.getSystems\r\n        let isExist = true\r\n        if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n          // 非系统管理员\r\n          for (let i = 0; i < selectSystems.length; i++) {\r\n            for (let j = 0; j < authSystems.length; j++) {\r\n              if (selectSystems[i] == authSystems[j]) {\r\n                isExist = false\r\n              }\r\n            }\r\n            if (isExist) {\r\n              this.$Message.warning('该用户没有' + selectSystems[i] + '权限')\r\n              return true\r\n            }\r\n          }\r\n        }\r\n        const ids = Array.from(this.selection, e => e.job)\r\n        let jobArr = ''\r\n        ids.forEach(id => {\r\n          if (jobArr == '') {\r\n            jobArr = id\r\n          } else {\r\n            jobArr = jobArr + '/' + id\r\n          }\r\n        })\r\n        let params = {}\r\n        Object.assign(params, this.forceStartFormBean)\r\n        params.datalist = this.selection\r\n        params.reqparams = {}\r\n        params.requesttype = 'lo'\r\n        params.udsjob = this.forceStartFormBean\r\n        params.reqparams = this.forceStartFormBean\r\n        params.reqparams.jobDate = utils.fmtDate(this.forceStartFormBean.jobDate, 'yyyyMMdd')\r\n        params.reqparams.serverName = this.forceStartFormBean.serverName\r\n        params.reqparams.jobArr = jobArr\r\n        params.authps = selectSystems[0]// this.formBean.platform + this.formBean.system;\r\n        // alert(params.authps);\r\n        this.loadingBatchFC = true\r\n        let httpConfig = {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH + '/batchForcestart',\r\n          data: params\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            setTimeout(() => {\r\n              this.loading = false\r\n            }, 2000)\r\n            if (resp.data.returnCode != null &&\r\n              resp.data.returnCode !== 'undefined' &&\r\n              resp.data.returnCode === 'fail') {\r\n              this.loadingBatchFC = false\r\n              // this.ctrlloadingBatchFCDisable = true\r\n              return\r\n            }\r\n            if (resp.data === 'success') {\r\n              this.ctrlloadingBatchFCDisable = true\r\n              this.ctrlloadingBatchADisable = true\r\n              this.loadingBatchFC = false\r\n              this.ctrlloadingBatchFCDisable = true\r\n              this.confirmBatchForceStart.show = false\r\n              this.search()\r\n            }\r\n          })\r\n      })\r\n    },\r\n\r\n    confirmBatchActiveCancel () {\r\n      this.confirmBatchActive.show = false\r\n    },\r\n    batchActiveConfirm () {\r\n      this.confirmBatchActive.show = true\r\n    },\r\n    batchActive () {\r\n      if (!this.confirmBatchActive.isAgree) {\r\n        this.$Message.warning({ content: '请同意 我承担该操作的一切后果!' })\r\n        return\r\n      }\r\n      const selectSystems = Array.from(this.selection, e => e.platform + e.system)\r\n      if (selectSystems.length < 1) {\r\n        this.$Message.warning('请至少选择一行')\r\n        return\r\n      }\r\n      let authSystems = store.getters.getSystems\r\n      let isExist = true\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        // 非系统管理员\r\n        for (let i = 0; i < selectSystems.length; i++) {\r\n          for (let j = 0; j < authSystems.length; j++) {\r\n            if (selectSystems[i] == authSystems[j]) {\r\n              isExist = false\r\n            }\r\n          }\r\n          if (isExist) {\r\n            this.$Message.warning('该用户没有' + selectSystems[i] + '权限')\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      const ids = Array.from(this.selection, e => e.job)\r\n      let jobArr = ''\r\n      ids.forEach(id => {\r\n        if (jobArr == '') {\r\n          jobArr = id\r\n        } else {\r\n          jobArr = jobArr + '/' + id\r\n        }\r\n      })\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.jobArr = jobArr\r\n      params.authps = selectSystems[0]// this.formBean.platform + this.formBean.system;\r\n      this.loadingBatchA = true\r\n      // alert(params.authps);\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: RESOURCE_PATH + '/batchActive',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.ctrlloadingBatchFCDisable = true\r\n          this.ctrlloadingBatchADisable = true\r\n          this.confirmBatchActive.show = false\r\n          this.loadingBatchA = false\r\n          this.search()\r\n        })\r\n    },\r\n    killJob () {\r\n      let row = this.confirm.row\r\n      let params = {}\r\n      params.platform = row.platform\r\n      params.systems = row.systems\r\n      params.job = row.job\r\n      params.jobdate = row.jobDate\r\n      params.multibatch = row.multiBatch\r\n\r\n      // let row = this.confirm.row\r\n      // let params = this.confirm.row\r\n      // params.authps = row.platform + row.system\r\n      // console.log(this.$store.getters.getBreadcrumb);\r\n      let httpConfig = {\r\n        method: 'POST',\r\n        url: RESOURCE_PATH + '/killJob',\r\n        data: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status == 200) {\r\n            if (resp.data === 1) {\r\n              this.confirm.show = false\r\n              this.$Message.success({\r\n                content: 'kill作业：' + row.job + '成功！',\r\n                duration: 15,\r\n                closable: true\r\n              })\r\n              this.search()\r\n            } else {\r\n              this.$Message.error({\r\n                content: 'kill作业：' + row.job + '失败！',\r\n                duration: 15,\r\n                closable: true\r\n              })\r\n            }\r\n            this.confirm.show = false\r\n          }\r\n        })\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryDBControList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.dbControlList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.dbControlList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.getPlatformList()\r\n    // this.queryPlatform()\r\n    // this.findServer()\r\n    // 作业列表菜单权限控制\r\n    // const authSystems = this.$store.getters.getSystems\r\n    /* const authSystems = sessionStorage.systems.split(',')\r\n    if (authSystems.includes('ROLE_ADMIN') ||\r\n      authSystems.includes('ROLE_PLAT')) {\r\n\r\n    } else {\r\n      this.dropdownItems = [{ val: '补数' }, { val: '置虚或实' }]\r\n    } */\r\n\r\n    // console.log(this.$refs.uptree.getSelectedNodes())\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length != 0) {\r\n        this.ctrlloadingBatchFCDisable = false\r\n        this.ctrlloadingBatchADisable = false\r\n      } else {\r\n        this.ctrlloadingBatchFCDisable = true\r\n        this.ctrlloadingBatchADisable = true\r\n      }\r\n    },\r\n    /*  作业列表修改属性后重新查询数据库  */\r\n    transData: function (val, oldVal) {\r\n      if (this.transData.showTable) {\r\n        this.$refs.udsjobForm.validate(valid => {\r\n          if (!valid && this.fromto == '1') return\r\n          let params = {}\r\n          Object.assign(params, this.formBean)\r\n          params.current = this.page.current\r\n          params.size = this.page.size\r\n          for (let key in params) {\r\n            if (key === 'job') {\r\n              if (params[key] && params[key] !== '') {\r\n                params[key] = '%' + params[key].trim().toUpperCase() + '%'\r\n              } else {\r\n                delete params[key]\r\n              }\r\n            }\r\n            if (key == 'system' && params[key]) {\r\n              params[key] = params[key].trim().toUpperCase()\r\n            }\r\n          }\r\n\r\n          let httpConfig = {\r\n            method: 'GET',\r\n            url: RESOURCE_PATH + '/selectAll',\r\n            params: params\r\n          }\r\n          this.$ajax(httpConfig)\r\n            .then(resp => {\r\n            // console.log(resp);\r\n              if (resp.data.total && resp.data.total > 0) {\r\n                if (resp.data.rows && resp.data.rows.length === 0) {\r\n                  this.page.current = 1\r\n                  this.search()\r\n                }\r\n              }\r\n              this.gridData = resp.data.rows\r\n              this.page.total = resp.data.total\r\n            })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n<style>\r\n#joblistTable table td div{\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n}\r\n#joblistTable table th div{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n#confirmM .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmD .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmV .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n#confirmBatchActive .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#confirmBatchForceStart .ivu-modal-body{\r\n  padding:16px;font-size:14px;line-height:1.5;width: 100%;\r\n}\r\n\r\n#upAndDownstream .ivu-modal-body{\r\n  width:100%;\r\n}\r\n#upAndDownstream .ivu-modal-wrap{\r\n  z-index: 1500 !important;\r\n}\r\n#upAndDownstream .ivu-modal-mask{\r\n  z-index: 1500 !important;\r\n}\r\n#drawerClass .ivu-drawer-wrap{\r\n  z-index: 3000 !important;\r\n}\r\n#drawerClass .ivu-drawer-mask{\r\n  z-index: 3000 !important;\r\n}\r\n.jobdetailclass {\r\n  background: #eee;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  line-height: 340%;\r\n}\r\n.jobdetailclass .ivu-col .span{\r\n  font-size: 14px;\r\n  margin-left: 2%;\r\n}\r\n\r\n.treeTitle:hover {\r\n  background-color: #daedf9;\r\n}\r\n.treeTitle:visited {\r\n  background-color: #daedf9;\r\n}\r\n</style>\r\n"]}]}