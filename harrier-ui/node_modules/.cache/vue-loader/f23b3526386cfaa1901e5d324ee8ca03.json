{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmconfig\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmconfig\\Form.vue","mtime":1681468306498},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nconst RESOURCE_PATH = '/alarm/config'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      codeData: [],\r\n      systemData: [],\r\n      serverityTypeData: [],\r\n      jobTypeData: [],\r\n      noticeObjData: [],\r\n      model1: [],\r\n      isEdit: false,\r\n      defStatusData: [],\r\n      buildData: [\r\n        { label: '是', value: 'true' },\r\n        { label: '否', value: 'false' }\r\n      ],\r\n      formRule: {\r\n        platform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        code: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        alarmType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        serverity: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        noticeType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        model1: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        noticeCon: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n        // updateUser: [{\r\n        // required: true,\r\n        // message: '请输入数据！'\r\n        // }],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.formBean = Object.assign({}, this.transData.row) \r\n        if (this.formBean.build === false) {\r\n          this.formBean.build = 'false'\r\n        } else if (this.formBean.build === true) {\r\n          this.formBean.build = 'true'\r\n        }\r\n        this.isEdit = true\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      this.queryPlatform()\r\n      this.queryDefaultStatus()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmConfigForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        this.formBean.job = '*'\r\n        Object.assign(params, this.formBean)\r\n        params.build = this.formBean.build === 0\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n        if (this.transData.row) {\r\n          // httpConfig.method = 'PUT'\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/update'\r\n        } else {\r\n          // httpConfig.method = 'POST'\r\n          httpConfig.method = 'PUT'\r\n          httpConfig.url = RESOURCE_PATH + '/add'\r\n        }\r\n        delete params.updateTime\r\n        // return\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    queryDefaultStatus () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/config/defaultStatus'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.defStatusData = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let tmp = {}\r\n              tmp.value = values[i]\r\n              tmp.label = keys[i]\r\n              this.defStatusData.push(tmp)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n      } else if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n\r\n      let backParam = { id: this.transData.id, statusName: 'emailTable', prevTab: prevTab, curTab: 'emailForm' }\r\n\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";AAwfile":"Form.vue","sourceRoot":"src/view/app/alarm/alarmconfig","sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"alarmConfigForm\" :model=\"formBean\" :label-width=\"150\" :rules=\"formRule\">\r\n      <Row>\r\n        <Col span=\"8\">\r\n\r\n          <FormItem prop=\"platform\" label=\"平台名\">\r\n            <Input v-model=\"formBean.platform\" disabled v-if=\"isEdit\"/>\r\n            <Select filterable v-model=\"formBean.platform\" @on-change=\"querySystem\" clearable v-if=\"!isEdit\">\r\n                <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"systems\" label=\"应用名\">\r\n            <Input v-model=\"formBean.systems\" disabled v-if=\"isEdit\"/>\r\n            <Select ref=\"refsystem\" v-model=\"formBean.systems\"  filterable  clearable v-if=\"!isEdit\">\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"code\" label=\"告警码\">\r\n            <Input v-model=\"formBean.code\" :disabled=\"isEdit\"/>\r\n            <!-- <Select v-model=\"formBean.code\" filterable clearable>\r\n              <Option v-for=\"item in codeData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n            </Select> -->\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <!-- <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"job\" label=\"作业\">\r\n            <Input  v-model=\"formBean.job\" clearable :disabled=\"isEdit\"></Input>\r\n          </FormItem>\r\n        </Col>\r\n      </Row> -->\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"defStatus\" label=\"告警默认状态\">\r\n            <Select filterable v-model=\"formBean.defStatus\" clearable>\r\n              <Option v-for=\"item in defStatusData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n            </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"noticeTimes\" label=\"通知次数\">\r\n            <InputNumber style=\"width:100%\" :max=\"999\" :min=\"0\" :step=\"1\" v-model=\"formBean.noticeTimes\"></InputNumber>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"noticeCycle\" label=\"通知间隔分\">\r\n            <InputNumber style=\"width:100%\" :max=\"99999\" :min=\"0\" :step=\"1\" v-model=\"formBean.noticeCycle\"></InputNumber>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"noticeGroupName\" label=\"通知用户组\">\r\n            <Input v-model=\"formBean.noticeGroupName\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n       <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"build\" label=\"是否生成告警信息\">\r\n            <Select v-model=\"formBean.build\" filterable clearable>\r\n              <Option v-for=\"item in buildData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n            </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"remark\" label=\"备注\">\r\n            <Input v-model=\"formBean.remark\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <FormItem prop=\"isEnable\" label=\"是否启用\" >\r\n            <Checkbox v-model=\"formBean.isEnable\">启用</Checkbox>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <div style=\"margin-left:15%\">\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst RESOURCE_PATH = '/alarm/config'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      codeData: [],\r\n      systemData: [],\r\n      serverityTypeData: [],\r\n      jobTypeData: [],\r\n      noticeObjData: [],\r\n      model1: [],\r\n      isEdit: false,\r\n      defStatusData: [],\r\n      buildData: [\r\n        { label: '是', value: 'true' },\r\n        { label: '否', value: 'false' }\r\n      ],\r\n      formRule: {\r\n        platform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        code: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        alarmType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        serverity: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        noticeType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        model1: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        noticeCon: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n        // updateUser: [{\r\n        // required: true,\r\n        // message: '请输入数据！'\r\n        // }],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.formBean = Object.assign({}, this.transData.row) \r\n        if (this.formBean.build === false) {\r\n          this.formBean.build = 'false'\r\n        } else if (this.formBean.build === true) {\r\n          this.formBean.build = 'true'\r\n        }\r\n        this.isEdit = true\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      this.queryPlatform()\r\n      this.queryDefaultStatus()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmConfigForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        this.formBean.job = '*'\r\n        Object.assign(params, this.formBean)\r\n        params.build = this.formBean.build === 0\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n        if (this.transData.row) {\r\n          // httpConfig.method = 'PUT'\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/update'\r\n        } else {\r\n          // httpConfig.method = 'POST'\r\n          httpConfig.method = 'PUT'\r\n          httpConfig.url = RESOURCE_PATH + '/add'\r\n        }\r\n        delete params.updateTime\r\n        // return\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    queryDefaultStatus () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/config/defaultStatus'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.defStatusData = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let tmp = {}\r\n              tmp.value = values[i]\r\n              tmp.label = keys[i]\r\n              this.defStatusData.push(tmp)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n      } else if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n\r\n      let backParam = { id: this.transData.id, statusName: 'emailTable', prevTab: prevTab, curTab: 'emailForm' }\r\n\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}