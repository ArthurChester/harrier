{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\sqlQuery\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\sqlQuery\\Table.vue","mtime":1681468306543},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n// import common from '@/mixins/common'\r\n// import Alert from 'iview'\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/jobmanage/customsql'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      msgwarnstyle: {\r\n        fontSize: '14px',\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n      },\r\n      msgerrorstyle: {\r\n        fontSize: '14px',\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n      },\r\n      errormsgtmp: '',\r\n      errorshow: false,\r\n      warnshow: true,\r\n      formBean: { isAgree: true },\r\n      loading: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      formRule: {\r\n        selectSql: [{\r\n          required: true,\r\n          message: '请输入自定义SQL！'\r\n        }]\r\n      },\r\n      gridColumns: [],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.search();\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n    **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      if (!this.formBean.selectSql) {\r\n        this.$Message.warning({ content: 'sql语句不能为空！' })\r\n        return\r\n      } else if (!this.formBean.isAgree === true) {\r\n        this.$Message.warning({ content: '请同意 我承担执行SQL的后果!' })\r\n        return\r\n      }\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search (pageChange) {\r\n      let params = {}\r\n      if (typeof this.formBean.selectSql === 'undefined' || this.formBean.selectSql.trim().length === 0) {\r\n        this.$Message.warning({ content: 'sql语句不能为空！' })\r\n        return\r\n      } else if (!this.formBean.isAgree === true) {\r\n        this.$Message.warning({ content: '请同意 我承担执行SQL的后果!' })\r\n        return\r\n      }\r\n      Object.assign(params, this.formBean)\r\n      if (pageChange === 'change') {\r\n        params.pageCurrent = this.page.current\r\n        params.pageSize = this.page.size\r\n      } else {\r\n        this.page.current = 1\r\n        // this.page.size = 10\r\n        params.pageCurrent = 1\r\n        params.pageSize = this.page.size\r\n      }\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      if (this.formBean.selectSql.trim().toUpperCase().startsWith('INSERT') ||\r\n            this.formBean.selectSql.trim().toUpperCase().startsWith('UPDATE') ||\r\n            this.formBean.selectSql.trim().toUpperCase().startsWith('DELETE')\r\n      ) {\r\n        // if (this.$store.getters.getSystems.indexOf('ROLE_ADMIN') === -1) {\r\n        //   this.$Message.error('您非系统管理员，无增删改的权限，如需请联系系统管理员')\r\n        //   return\r\n        // }\r\n        httpConfig = {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n      } else if (this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n        // for (let key in params) {\r\n        //   params[key] = encodeURIComponent(params[key])// encodeURIComponent(params[key])\r\n        // }\r\n        httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH,\r\n          params: params\r\n        }\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          // console.log(resp)\r\n          if (resp.data.returnCode && resp.data.returnCode === 'fail') {\r\n            // this.$Message.error(resp.data.returnDetailMsg.substring(12));\r\n            this.errorshow = true\r\n            this.errormsgtmp = resp.data.returnDetailMsg.substring(12)\r\n            this.gridColumns = []\r\n            this.gridData = []\r\n            this.page.total = 0\r\n            return\r\n          } else {\r\n            this.errorshow = false\r\n          }\r\n          if (resp.status === 200 && !this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n            this.$Message.success('操作成功')\r\n            // if (this.formBean.selectSql.trim().toUpperCase().startsWith('INSERT')) {\r\n\r\n            // } else {\r\n            //   this.$Message.success('操作成功')\r\n            // }\r\n            return\r\n          } else if (resp.status !== 200) {\r\n            this.$Message.success('操作失败')\r\n            return\r\n          }\r\n          // console.log(resp);\r\n          let datas = resp.data.rows\r\n          if (resp.data.returnCode != null && resp.data.returnCode !== 'undefined' && resp.data.returnCode === 'fail') {\r\n            this.errorshow = true\r\n            this.errormsgtmp = resp.data.returnDetailMsg\r\n\r\n            return\r\n          } else {\r\n            this.errorshow = false\r\n          }\r\n          var columnNames = datas.shift(0).columnNames\r\n          // console.log(columnNames.length);\r\n          let headerw = new Array(columnNames.length).fill(0)\r\n          // console.log(headerw);\r\n          let tmpGridColumn = [{\r\n            type: 'index',\r\n            title: ' ',\r\n            width: 60,\r\n            // align: 'center',\r\n            fixed: 'left'\r\n\r\n          }]\r\n          for (let i = 0; i < datas.length; i++) {\r\n            let data = datas[i]\r\n            for (let j = 0; j < columnNames.length; j++) {\r\n              let tmp = data[columnNames[j]] != null ? data[columnNames[j]].length : 0\r\n              if (headerw[j] < tmp) {\r\n                headerw[j] = tmp\r\n              }\r\n            }\r\n          }\r\n          for (let i = 0; i < columnNames.length; i++) {\r\n            let tmpColumn = {}\r\n            tmpColumn.title = columnNames[i]\r\n            tmpColumn.key = columnNames[i]\r\n            headerw.push(tmpColumn.title.length)\r\n            let len = tmpColumn.title.length\r\n            if (len < headerw[i]) {\r\n              len = headerw[i]\r\n            }\r\n            tmpColumn.width = len * 15\r\n            if (tmpColumn.width < 100) {\r\n              tmpColumn.width = 100\r\n            }\r\n            tmpGridColumn.push(tmpColumn)\r\n          }\r\n          if (this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n            this.gridColumns = tmpGridColumn\r\n            this.gridData = datas\r\n            this.page.total = resp.data.total\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      let pageChange = 'change'\r\n      this.page.current = currentPage\r\n      this.search(pageChange)\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      let pageChange = 'change'\r\n      this.page.size = pageSize\r\n      this.search(pageChange)\r\n    }\r\n  },\r\n  computed: {\r\n    errormsg: function () {\r\n      return this.errormsgtmp\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length !== 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappingsfile":"Table.vue","sourceRoot":"src/view/spdb/job/sqlQuery","sourcesContent":["<template>\r\n\r\n\t<div>\r\n\t\t<Alert v-if=\"errorshow\" type=\"error\">\r\n\t\t\t<span slot=\"desc\" class=\"warningtext\" :style=\"msgerrorstyle\" ref=\"error\">{{errormsg}}</span>\r\n\t\t</Alert>\r\n\t\t<Alert  v-if=\"warnshow\" type=\"warning\">\r\n\t\t\t<span slot=\"desc\" class=\"warningtext\" :style=\"msgwarnstyle\" ref=\"warn\">警告:执行SQL一切后果由操作者承担!</span>\r\n\t\t</Alert>\r\n\t\t<div class=\"spdb-form\">\r\n\t\t\t<Form ref=\"systemconfigForm\" :model=\"formBean\" :label-width=\"80\" label-position=\"top\" :rules=\"formRule\">\r\n        <Row>\r\n\t\t\t\t\t<Span style=\"fontSize:16px;color:#ff9900;\">请输入SQL,注意: 仅支持select,update,delete</Span>\r\n\t\t\t\t</Row>\r\n        <!-- <Row>\r\n\t\t\t   <span style=\"fontSize:16px;color:#ff9900\">(常用表：依赖表:uds_job_dependency; 作业信息表:uds_job_config; 定时和触发作业表:uds_job_time_trigger; 作业频度表:uds_job_date_frequency)</span>\r\n\t\t\t\t</Row> -->\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<!--<FormItem prop=\"selectSql\" label=\"请输入SQL,注意: 仅支持Explain,Show,Help:\">\r\n\t\t\t\t\t</FormItem>-->\r\n\t\t\t\t\t<Input v-model=\"formBean.selectSql\" type=\"textarea\" :autosize=\"{minRows: 3,maxRows: 100}\" placeholder=\"请输入SQL语句！ SQL结束不需要标点符号\"></Input>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Checkbox v-model=\"formBean.isAgree\" > 我承担执行SQL的后果</Checkbox>\r\n\t\t\t\t\t<FormItem prop=\"\" label=\"\">\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t<Button type=\"primary\" :loading=\"loading\" icon=\"md-checkmark\" @click=\"search\">提交</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n\t\t\t<!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button> -->\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table border :columns=\"gridColumns\" :data=\"gridData\" stripe >\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n// import common from '@/mixins/common'\r\n// import Alert from 'iview'\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/jobmanage/customsql'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      msgwarnstyle: {\r\n        fontSize: '14px',\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n      },\r\n      msgerrorstyle: {\r\n        fontSize: '14px',\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n      },\r\n      errormsgtmp: '',\r\n      errorshow: false,\r\n      warnshow: true,\r\n      formBean: { isAgree: true },\r\n      loading: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      formRule: {\r\n        selectSql: [{\r\n          required: true,\r\n          message: '请输入自定义SQL！'\r\n        }]\r\n      },\r\n      gridColumns: [],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.search();\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n    **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      if (!this.formBean.selectSql) {\r\n        this.$Message.warning({ content: 'sql语句不能为空！' })\r\n        return\r\n      } else if (!this.formBean.isAgree === true) {\r\n        this.$Message.warning({ content: '请同意 我承担执行SQL的后果!' })\r\n        return\r\n      }\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search (pageChange) {\r\n      let params = {}\r\n      if (typeof this.formBean.selectSql === 'undefined' || this.formBean.selectSql.trim().length === 0) {\r\n        this.$Message.warning({ content: 'sql语句不能为空！' })\r\n        return\r\n      } else if (!this.formBean.isAgree === true) {\r\n        this.$Message.warning({ content: '请同意 我承担执行SQL的后果!' })\r\n        return\r\n      }\r\n      Object.assign(params, this.formBean)\r\n      if (pageChange === 'change') {\r\n        params.pageCurrent = this.page.current\r\n        params.pageSize = this.page.size\r\n      } else {\r\n        this.page.current = 1\r\n        // this.page.size = 10\r\n        params.pageCurrent = 1\r\n        params.pageSize = this.page.size\r\n      }\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      if (this.formBean.selectSql.trim().toUpperCase().startsWith('INSERT') ||\r\n            this.formBean.selectSql.trim().toUpperCase().startsWith('UPDATE') ||\r\n            this.formBean.selectSql.trim().toUpperCase().startsWith('DELETE')\r\n      ) {\r\n        // if (this.$store.getters.getSystems.indexOf('ROLE_ADMIN') === -1) {\r\n        //   this.$Message.error('您非系统管理员，无增删改的权限，如需请联系系统管理员')\r\n        //   return\r\n        // }\r\n        httpConfig = {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n      } else if (this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n        // for (let key in params) {\r\n        //   params[key] = encodeURIComponent(params[key])// encodeURIComponent(params[key])\r\n        // }\r\n        httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH,\r\n          params: params\r\n        }\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          // console.log(resp)\r\n          if (resp.data.returnCode && resp.data.returnCode === 'fail') {\r\n            // this.$Message.error(resp.data.returnDetailMsg.substring(12));\r\n            this.errorshow = true\r\n            this.errormsgtmp = resp.data.returnDetailMsg.substring(12)\r\n            this.gridColumns = []\r\n            this.gridData = []\r\n            this.page.total = 0\r\n            return\r\n          } else {\r\n            this.errorshow = false\r\n          }\r\n          if (resp.status === 200 && !this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n            this.$Message.success('操作成功')\r\n            // if (this.formBean.selectSql.trim().toUpperCase().startsWith('INSERT')) {\r\n\r\n            // } else {\r\n            //   this.$Message.success('操作成功')\r\n            // }\r\n            return\r\n          } else if (resp.status !== 200) {\r\n            this.$Message.success('操作失败')\r\n            return\r\n          }\r\n          // console.log(resp);\r\n          let datas = resp.data.rows\r\n          if (resp.data.returnCode != null && resp.data.returnCode !== 'undefined' && resp.data.returnCode === 'fail') {\r\n            this.errorshow = true\r\n            this.errormsgtmp = resp.data.returnDetailMsg\r\n\r\n            return\r\n          } else {\r\n            this.errorshow = false\r\n          }\r\n          var columnNames = datas.shift(0).columnNames\r\n          // console.log(columnNames.length);\r\n          let headerw = new Array(columnNames.length).fill(0)\r\n          // console.log(headerw);\r\n          let tmpGridColumn = [{\r\n            type: 'index',\r\n            title: ' ',\r\n            width: 60,\r\n            // align: 'center',\r\n            fixed: 'left'\r\n\r\n          }]\r\n          for (let i = 0; i < datas.length; i++) {\r\n            let data = datas[i]\r\n            for (let j = 0; j < columnNames.length; j++) {\r\n              let tmp = data[columnNames[j]] != null ? data[columnNames[j]].length : 0\r\n              if (headerw[j] < tmp) {\r\n                headerw[j] = tmp\r\n              }\r\n            }\r\n          }\r\n          for (let i = 0; i < columnNames.length; i++) {\r\n            let tmpColumn = {}\r\n            tmpColumn.title = columnNames[i]\r\n            tmpColumn.key = columnNames[i]\r\n            headerw.push(tmpColumn.title.length)\r\n            let len = tmpColumn.title.length\r\n            if (len < headerw[i]) {\r\n              len = headerw[i]\r\n            }\r\n            tmpColumn.width = len * 15\r\n            if (tmpColumn.width < 100) {\r\n              tmpColumn.width = 100\r\n            }\r\n            tmpGridColumn.push(tmpColumn)\r\n          }\r\n          if (this.formBean.selectSql.trim().toUpperCase().startsWith('SELECT')) {\r\n            this.gridColumns = tmpGridColumn\r\n            this.gridData = datas\r\n            this.page.total = resp.data.total\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      let pageChange = 'change'\r\n      this.page.current = currentPage\r\n      this.search(pageChange)\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      let pageChange = 'change'\r\n      this.page.size = pageSize\r\n      this.search(pageChange)\r\n    }\r\n  },\r\n  computed: {\r\n    errormsg: function () {\r\n      return this.errormsgtmp\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length !== 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\t.warningtext {\r\n\t\tcolor: \"red\";\r\n\t\tweight: 300;\r\n\t}\r\n</style>\r\n"]}]}