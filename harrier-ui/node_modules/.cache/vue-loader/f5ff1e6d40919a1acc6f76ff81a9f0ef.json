{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\fileManage\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\fileManage\\Table.vue","mtime":1681468306545},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/server'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      loadingTable: false,\r\n      ifShowBack: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      serverData: [],\r\n      dirList: [],\r\n      currentDir: '',\r\n      parentPath: '',\r\n      newPath: '',\r\n      files: [],\r\n      fileError: '',\r\n      file: null,\r\n      uploadRpc: {\r\n        show: false\r\n      },\r\n      dropdownItems: [{ val: '下载' }, { val: '删除' }, { val: '上传' }],\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        // \ttype: 'selection',\r\n        // \twidth: 60,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        //   title: '目录名',\r\n        //   minWidth: 120,\r\n        //   key: 'rootDir'\r\n        // },\r\n        {\r\n          title: '文件名',\r\n          key: 'fileName',\r\n          minWidth: 180,\r\n          sortable: true,\r\n          render: (h, { column, index, row }) => {\r\n            if (row.dir) {\r\n              return h('div', [\r\n                h('Icon', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'ios-folder'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  }\r\n                }),\r\n                h('a', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'text'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.ifShowBack = true\r\n                      let params = {}\r\n                      Object.assign(params, this.formBean)\r\n                      params.rootDir = row.path\r\n                      this.parentPage.push(this.page.current)\r\n                      this.page.current = 1\r\n                      let isExit = false\r\n                      this.dirList.forEach(element => {\r\n                        if (element.value === params.rootDir) {\r\n                          isExit = true\r\n                        }\r\n                      })\r\n                      if (!isExit) {\r\n                        this.dirList.push({ label: params.rootDir, value: params.rootDir })\r\n                      }\r\n                      this.$set(this.formBean, 'rootDir', params.rootDir)\r\n                      delete params.fileName\r\n                      this.searchFile(params)\r\n                    }\r\n                  }\r\n                }, row.fileName)\r\n              ])\r\n            } else {\r\n              return h('div', [\r\n                h('Icon', {\r\n                  props: {\r\n                    // size: 'small',\r\n                    type: 'md-document'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  }\r\n                }),\r\n                h('span', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                    }\r\n                  }\r\n                }, row.fileName)\r\n              ])\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '文件路径',\r\n          key: 'filePath',\r\n          minWidth: 200\r\n        },\r\n        {\r\n          title: '权限',\r\n          key: 'authority',\r\n          width: 150\r\n        },\r\n        {\r\n          title: '所属用户',\r\n          width: 120,\r\n          key: 'user'\r\n        },\r\n\r\n        {\r\n          title: '所属组',\r\n          width: 120,\r\n          key: 'group'\r\n        },\r\n        {\r\n          title: '文件大小',\r\n          width: 120,\r\n          // key: 'used',\r\n          key: 'size',\r\n          // align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            let u = row.size\r\n            let reg = /^[0-9]*$/\r\n            if (reg.test(row.size)) {\r\n              u = row.size + 'B'\r\n            }\r\n            return h('div', [\r\n              h('span', {\r\n\r\n              }, u)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'time'\r\n          // align: 'center'\r\n        },\r\n        /*\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  // click: () => {\r\n                  //   let params = {}\r\n                  //   Object.assign(params, this.formBean)\r\n                  //   params.rootDir = row.rootDir\r\n                  //   params.nodeFileName = row.nodeFileName\r\n                  //   params.type = 'excel'\r\n                  //   utils.download(RESOURCE_PATH + '/fileDownLoad', params)\r\n                  // }\r\n                }\r\n              }, '下载')\r\n            ])\r\n          }\r\n        } */\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('Dropdown', {\r\n              props: {\r\n                trigger: 'click',\r\n                placement: 'bottom-end',\r\n                transfer: true\r\n              },\r\n              style: {\r\n                paddingRight: '3px'\r\n              },\r\n              on: {\r\n                'on-click': (value) => {\r\n                  let flag = value\r\n                  this.execOpt(flag, row, index, column)\r\n                }\r\n              }\r\n            }, [\r\n              h('a', [\r\n                /* h('span', '更多'), */\r\n                h('Button', {\r\n                  props: {\r\n                    icon: 'ios-more'\r\n                  },\r\n                  style: {\r\n                  // marginRight: '5px'\r\n                    margin: '0px',\r\n                    fontSize: '20px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  }\r\n                })\r\n              ]),\r\n              h('DropdownMenu', {\r\n                slot: 'list'\r\n              },\r\n              this.dropdownItems.map(function (data) {\r\n                return h('DropdownItem', {\r\n                  props: {\r\n                    name: data.val\r\n                  },\r\n                  style: {\r\n                    color: '#3399ff'\r\n                  }\r\n                }, data.val)\r\n              })\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1, // 当前显示页数\r\n        total: 10,\r\n        size: 10, // 每页显示页数\r\n        num: 1, // 共几页\r\n        opt: [10, 50, 100]// 一页共数据个数\r\n      },\r\n      // 所有页面的数据\r\n      totalPage: [],\r\n      parentPage: [],\r\n      rules: {\r\n        serverName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        rootDir: [{\r\n          required: true,\r\n          // type: 'string',\r\n          message: '请输入数据！'\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.search();\r\n      this.findServer()\r\n      this.loadfile()\r\n    },\r\n    loadfile () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: { dicCode: 'fileRootPath' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.dirList = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.dicValue\r\n            tmp.label = data.dicValue\r\n            this.dirList.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    findServer () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsServer/listQuery'\r\n      }\r\n      this.serverData = []\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // let sData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.ip + ':' + data.port\r\n            tmp.label = data.serverName\r\n            // sData.push(tmp)\r\n            this.serverData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    handleUpload: function (file) {\r\n      // if (!this.multiple) {\r\n      if (this.files.length > 0) {\r\n        this.fileError = `不能选择多个的文件`\r\n        return false\r\n      }\r\n      // }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    changeSort (param) {\r\n      this.formBean.order = param.key + '_' + param.order\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      this.$refs.udsfileForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.rootDir\r\n        params.currentPage = this.page.current\r\n        params.pageSize = this.page.size\r\n        this.page.current = 1\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: '/file/selectFile',\r\n          params: params\r\n        }\r\n        this.gridData = []\r\n        this.page.total = 0\r\n        this.loadingTable = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              this.gridData = resp.data\r\n              // this.gridData.path = resp.data.path\r\n              // this.newPath = resp.data.path\r\n              this.newPath = params.rootDir\r\n              // 分页\r\n              this.page.total = this.gridData.length\r\n              this.page.num = Math.ceil(this.gridData.length / this.page.size) || 1\r\n              for (let i = 0; i < this.page.num; i++) {\r\n                this.totalPage[i] = this.gridData.slice(this.page.size * i, this.page.size * (i + 1))\r\n              }\r\n              this.gridData = this.totalPage[this.page.current - 1]\r\n            }\r\n            this.loadingTable = false\r\n            this.parentPath = params.rootDir\r\n            this.ifShowBack = false\r\n            this.parentPage = []\r\n          })\r\n      })\r\n    },\r\n    searchFile (params) {\r\n      params.uri = 'spdb://' + params.serverName + '/' + params.rootDir\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/file/selectFile',\r\n        params: params\r\n      }\r\n      this.gridData = []\r\n      this.loadingTable = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = resp.data\r\n            // this.gridData.path = resp.data.path\r\n            this.newPath = params.rootDir\r\n            // 分页\r\n            this.page.total = this.gridData.length\r\n            this.page.num = Math.ceil(this.gridData.length / this.page.size) || 1\r\n            for (let i = 0; i < this.page.num; i++) {\r\n              this.totalPage[i] = this.gridData.slice(this.page.size * i, this.page.size * (i + 1))\r\n            }\r\n            this.gridData = this.totalPage[this.page.current - 1]\r\n            this.loadingTable = false\r\n          }\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    backToPre (row) {\r\n      let temp = this.newPath.substr(0, this.newPath.lastIndexOf('/'))\r\n      if (temp === '') {\r\n        temp = '/'\r\n      }\r\n      this.newPath = temp\r\n      let lastPage = this.parentPage.length - 1\r\n      this.page.current = this.parentPage[lastPage]\r\n      this.parentPage.pop()\r\n      this.formBean.rootDir = temp\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.rootDir = temp\r\n      delete params.fileName\r\n      this.searchFile(params)\r\n      if (this.parentPath === temp) {\r\n        this.ifShowBack = false\r\n      } else {\r\n        this.ifShowBack = true\r\n      }\r\n    },\r\n    execOpt (flag, row, index, column) {\r\n      if (flag == '下载') {\r\n        if (row.dir) {\r\n          this.$Message.warning({\r\n            content: '禁止下载文件夹！',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.srcFilePath = row.path\r\n        params.filename = row.fileName\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.srcFilePath\r\n        // params.uri = 'local:///C:/Users/c-yujh/Downloads/7月7日疫情风险地区提示单.doc'\r\n        utils.download('/file/loadFile', params)\r\n        // let loadConfig = {\r\n        //   method: 'GET',\r\n        //   url: '/file/loadFile',\r\n        //   params: params\r\n        // }\r\n        // // this.gridData = []\r\n        // this.$ajax(loadConfig)\r\n        //   .then(resp => {\r\n        //     if (resp.data) {\r\n        //       params.type = 'excel'\r\n        //       utils.download('/udsFileRpc/loadFile', params)\r\n        //     }\r\n        //   })\r\n      } else if (flag == '删除') {\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.srcFilePath = row.path\r\n        params.fileName = row.fileName\r\n        params.dir = row.dir\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.srcFilePath\r\n        // params.uri = 'local:///C:/Users/c-yujh/Downloads/7月13日疫情风险地区提示单（简版）(1).doc'\r\n        if (row.dir) {\r\n          this.$Message.warning({\r\n            content: '禁止删除文件夹！',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        // this.request.delReq.method = 'DELETE'\r\n        let config = {\r\n          method: 'GET',\r\n          url: '/file/deleteFile',\r\n          params: params\r\n        }\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            if (resp.data) {\r\n              // 完成\r\n              this.$Message.success('删除成功！')\r\n              this.searchFile(params)\r\n            } else {\r\n              this.$Message.warning({\r\n                content: '删除文件失败！',\r\n                duration: 5,\r\n                closable: true\r\n              })\r\n\r\n              // 失败\r\n            }\r\n          })\r\n      } else if (flag == '上传') {\r\n        this.uploadRpc.show = true\r\n        this.uploadRpc.srcFilePath = row.path\r\n        this.uploadRpc.fileName = row.fileName\r\n        this.uploadRpc.dir = row.dir\r\n      }\r\n    },\r\n    upload () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.srcFilePath=row.path\r\n      // params.fileName=row.fileName\r\n      // params.isDir=row.isDir\r\n      if (!this.uploadRpc.dir) {\r\n        this.$Message.warning({\r\n          content: '请在文件夹上进行上传文件！',\r\n          duration: 5,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      var formData = new FormData()\r\n      for (const key in this.formBean) {\r\n        formData.append(key, this.formBean[key])\r\n      }\r\n      formData.append('srcFilePath', this.uploadRpc.srcFilePath)\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择上传文件')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('fileName', ele.name)\r\n          formData.append('uri', 'spdb://' + params.serverName + '/' + this.uploadRpc.srcFilePath + '/' + ele.name)\r\n          // formData.append('uri', 'local:///D:/文档/temp/temp' + '/' + ele.name)\r\n          formData.append('file', ele)\r\n        }\r\n        this.loadingTable = true\r\n        this.$ajax.post('/file/uploadFile', formData)\r\n          .then(resp => {\r\n            this.loadingTable = false\r\n            this.uploadRpc.show = false\r\n            // this.$Message.warning(resp.data.msg)\r\n            this.files = []\r\n          })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.rootDir = this.newPath\r\n      this.searchFile(params)\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.rootDir = this.newPath\r\n      this.searchFile(params)\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n\t\t this.init()\r\n\t\t this.loadfile()\r\n  }\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";AAmFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/view/spdb/systemsetting/fileManage","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div class=\"spdb-form\">\r\n\t\t\t<Form ref=\"udsfileForm\" :label-width=\"80\" :model=\"formBean\" :rules=\"rules\" >\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<!--<Col span=\"4\">\r\n\t\t\t\t\t\t<Form-Item prop=\"param\" label=\"节点名称\">\r\n\t\t\t\t\t\t\t<Select  placeholder=\"请选择\" v-model=\"formBean.nodeName\"   @on-change=\"paramChange()\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in nodeList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col> -->\r\n          <Col span=\"4\">\r\n\t\t\t\t\t\t <FormItem prop=\"serverName\" label=\"执行节点\">\r\n\t\t\t\t\t\t\t <Select :transfer=\"true\" filterable v-model=\"formBean.serverName\" clearable placeholder=\"请选择\">\r\n                <Option v-for=\"item in serverData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n               </Select>\r\n\t\t\t\t\t   </FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"6\">\r\n\t\t\t\t\t\t<Form-Item prop=\"rootDir\" label=\"目录名称\">\r\n\t\t\t\t\t\t\t<Select filterable placeholder=\"请选择\" v-model=\"formBean.rootDir\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in dirList\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"5\">\r\n\t\t\t\t\t\t<Form-Item prop=\"fileName\" label=\"文件名\">\r\n\t\t\t\t\t\t\t<!--<Input  placeholder=\"支持通配符*\" v-model=\"formBean.nodeFileName\"/>-->\r\n\t\t\t\t\t\t\t<Input  placeholder=\"请输入文件名\" v-model=\"formBean.fileName\"/>\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"9\">\r\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;<Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;<Button v-if=\"ifShowBack\" type=\"primary\" icon=\"ios-arrow-back\" @click=\"backToPre\">返回上一级</Button>\r\n          </Col>\r\n\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t\t<Modal id=\"UploadByRpc\"\r\n\t\t\tv-model=\"uploadRpc.show\"\r\n\t\t\ttitle=\"上传\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form  ref=\"uploadForm\" :label-width=\"150\"  inline>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem label=\"文件:\" style=\"cursor:pointer;\" >\r\n                <Col span=\"22\">\r\n                  <Upload ref=\"upload\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n                  <Input style=\"width:100%;\" type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n                  </Upload>\r\n                </Col>\r\n                <Col span=\"2\">\r\n                  <div >\r\n                    <Button type=\"primary\" @click=\"upload\" :loading=\"loadingTable\">\r\n                      {{ loadingTable ? 'Uploading' : '上传' }}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" :loading=\"loadingTable\" stripe @on-selection-change=\"select\" @on-sort-change=\"changeSort\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n       <Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/server'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      loadingTable: false,\r\n      ifShowBack: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      serverData: [],\r\n      dirList: [],\r\n      currentDir: '',\r\n      parentPath: '',\r\n      newPath: '',\r\n      files: [],\r\n      fileError: '',\r\n      file: null,\r\n      uploadRpc: {\r\n        show: false\r\n      },\r\n      dropdownItems: [{ val: '下载' }, { val: '删除' }, { val: '上传' }],\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        // \ttype: 'selection',\r\n        // \twidth: 60,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        //   title: '目录名',\r\n        //   minWidth: 120,\r\n        //   key: 'rootDir'\r\n        // },\r\n        {\r\n          title: '文件名',\r\n          key: 'fileName',\r\n          minWidth: 180,\r\n          sortable: true,\r\n          render: (h, { column, index, row }) => {\r\n            if (row.dir) {\r\n              return h('div', [\r\n                h('Icon', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'ios-folder'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  }\r\n                }),\r\n                h('a', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'text'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.ifShowBack = true\r\n                      let params = {}\r\n                      Object.assign(params, this.formBean)\r\n                      params.rootDir = row.path\r\n                      this.parentPage.push(this.page.current)\r\n                      this.page.current = 1\r\n                      let isExit = false\r\n                      this.dirList.forEach(element => {\r\n                        if (element.value === params.rootDir) {\r\n                          isExit = true\r\n                        }\r\n                      })\r\n                      if (!isExit) {\r\n                        this.dirList.push({ label: params.rootDir, value: params.rootDir })\r\n                      }\r\n                      this.$set(this.formBean, 'rootDir', params.rootDir)\r\n                      delete params.fileName\r\n                      this.searchFile(params)\r\n                    }\r\n                  }\r\n                }, row.fileName)\r\n              ])\r\n            } else {\r\n              return h('div', [\r\n                h('Icon', {\r\n                  props: {\r\n                    // size: 'small',\r\n                    type: 'md-document'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  }\r\n                }),\r\n                h('span', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                    }\r\n                  }\r\n                }, row.fileName)\r\n              ])\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '文件路径',\r\n          key: 'filePath',\r\n          minWidth: 200\r\n        },\r\n        {\r\n          title: '权限',\r\n          key: 'authority',\r\n          width: 150\r\n        },\r\n        {\r\n          title: '所属用户',\r\n          width: 120,\r\n          key: 'user'\r\n        },\r\n\r\n        {\r\n          title: '所属组',\r\n          width: 120,\r\n          key: 'group'\r\n        },\r\n        {\r\n          title: '文件大小',\r\n          width: 120,\r\n          // key: 'used',\r\n          key: 'size',\r\n          // align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            let u = row.size\r\n            let reg = /^[0-9]*$/\r\n            if (reg.test(row.size)) {\r\n              u = row.size + 'B'\r\n            }\r\n            return h('div', [\r\n              h('span', {\r\n\r\n              }, u)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'time'\r\n          // align: 'center'\r\n        },\r\n        /*\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          fixed: 'right',\r\n          render: (h, {column, index, row}) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  // click: () => {\r\n                  //   let params = {}\r\n                  //   Object.assign(params, this.formBean)\r\n                  //   params.rootDir = row.rootDir\r\n                  //   params.nodeFileName = row.nodeFileName\r\n                  //   params.type = 'excel'\r\n                  //   utils.download(RESOURCE_PATH + '/fileDownLoad', params)\r\n                  // }\r\n                }\r\n              }, '下载')\r\n            ])\r\n          }\r\n        } */\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('Dropdown', {\r\n              props: {\r\n                trigger: 'click',\r\n                placement: 'bottom-end',\r\n                transfer: true\r\n              },\r\n              style: {\r\n                paddingRight: '3px'\r\n              },\r\n              on: {\r\n                'on-click': (value) => {\r\n                  let flag = value\r\n                  this.execOpt(flag, row, index, column)\r\n                }\r\n              }\r\n            }, [\r\n              h('a', [\r\n                /* h('span', '更多'), */\r\n                h('Button', {\r\n                  props: {\r\n                    icon: 'ios-more'\r\n                  },\r\n                  style: {\r\n                  // marginRight: '5px'\r\n                    margin: '0px',\r\n                    fontSize: '20px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  }\r\n                })\r\n              ]),\r\n              h('DropdownMenu', {\r\n                slot: 'list'\r\n              },\r\n              this.dropdownItems.map(function (data) {\r\n                return h('DropdownItem', {\r\n                  props: {\r\n                    name: data.val\r\n                  },\r\n                  style: {\r\n                    color: '#3399ff'\r\n                  }\r\n                }, data.val)\r\n              })\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1, // 当前显示页数\r\n        total: 10,\r\n        size: 10, // 每页显示页数\r\n        num: 1, // 共几页\r\n        opt: [10, 50, 100]// 一页共数据个数\r\n      },\r\n      // 所有页面的数据\r\n      totalPage: [],\r\n      parentPage: [],\r\n      rules: {\r\n        serverName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        rootDir: [{\r\n          required: true,\r\n          // type: 'string',\r\n          message: '请输入数据！'\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.search();\r\n      this.findServer()\r\n      this.loadfile()\r\n    },\r\n    loadfile () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: { dicCode: 'fileRootPath' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.dirList = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.dicValue\r\n            tmp.label = data.dicValue\r\n            this.dirList.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    findServer () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsServer/listQuery'\r\n      }\r\n      this.serverData = []\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // let sData = []\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.ip + ':' + data.port\r\n            tmp.label = data.serverName\r\n            // sData.push(tmp)\r\n            this.serverData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    handleUpload: function (file) {\r\n      // if (!this.multiple) {\r\n      if (this.files.length > 0) {\r\n        this.fileError = `不能选择多个的文件`\r\n        return false\r\n      }\r\n      // }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    changeSort (param) {\r\n      this.formBean.order = param.key + '_' + param.order\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      this.$refs.udsfileForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.rootDir\r\n        params.currentPage = this.page.current\r\n        params.pageSize = this.page.size\r\n        this.page.current = 1\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: '/file/selectFile',\r\n          params: params\r\n        }\r\n        this.gridData = []\r\n        this.page.total = 0\r\n        this.loadingTable = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              this.gridData = resp.data\r\n              // this.gridData.path = resp.data.path\r\n              // this.newPath = resp.data.path\r\n              this.newPath = params.rootDir\r\n              // 分页\r\n              this.page.total = this.gridData.length\r\n              this.page.num = Math.ceil(this.gridData.length / this.page.size) || 1\r\n              for (let i = 0; i < this.page.num; i++) {\r\n                this.totalPage[i] = this.gridData.slice(this.page.size * i, this.page.size * (i + 1))\r\n              }\r\n              this.gridData = this.totalPage[this.page.current - 1]\r\n            }\r\n            this.loadingTable = false\r\n            this.parentPath = params.rootDir\r\n            this.ifShowBack = false\r\n            this.parentPage = []\r\n          })\r\n      })\r\n    },\r\n    searchFile (params) {\r\n      params.uri = 'spdb://' + params.serverName + '/' + params.rootDir\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/file/selectFile',\r\n        params: params\r\n      }\r\n      this.gridData = []\r\n      this.loadingTable = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = resp.data\r\n            // this.gridData.path = resp.data.path\r\n            this.newPath = params.rootDir\r\n            // 分页\r\n            this.page.total = this.gridData.length\r\n            this.page.num = Math.ceil(this.gridData.length / this.page.size) || 1\r\n            for (let i = 0; i < this.page.num; i++) {\r\n              this.totalPage[i] = this.gridData.slice(this.page.size * i, this.page.size * (i + 1))\r\n            }\r\n            this.gridData = this.totalPage[this.page.current - 1]\r\n            this.loadingTable = false\r\n          }\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    backToPre (row) {\r\n      let temp = this.newPath.substr(0, this.newPath.lastIndexOf('/'))\r\n      if (temp === '') {\r\n        temp = '/'\r\n      }\r\n      this.newPath = temp\r\n      let lastPage = this.parentPage.length - 1\r\n      this.page.current = this.parentPage[lastPage]\r\n      this.parentPage.pop()\r\n      this.formBean.rootDir = temp\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.rootDir = temp\r\n      delete params.fileName\r\n      this.searchFile(params)\r\n      if (this.parentPath === temp) {\r\n        this.ifShowBack = false\r\n      } else {\r\n        this.ifShowBack = true\r\n      }\r\n    },\r\n    execOpt (flag, row, index, column) {\r\n      if (flag == '下载') {\r\n        if (row.dir) {\r\n          this.$Message.warning({\r\n            content: '禁止下载文件夹！',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.srcFilePath = row.path\r\n        params.filename = row.fileName\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.srcFilePath\r\n        // params.uri = 'local:///C:/Users/c-yujh/Downloads/7月7日疫情风险地区提示单.doc'\r\n        utils.download('/file/loadFile', params)\r\n        // let loadConfig = {\r\n        //   method: 'GET',\r\n        //   url: '/file/loadFile',\r\n        //   params: params\r\n        // }\r\n        // // this.gridData = []\r\n        // this.$ajax(loadConfig)\r\n        //   .then(resp => {\r\n        //     if (resp.data) {\r\n        //       params.type = 'excel'\r\n        //       utils.download('/udsFileRpc/loadFile', params)\r\n        //     }\r\n        //   })\r\n      } else if (flag == '删除') {\r\n        let params = {}\r\n        Object.assign(params, this.formBean)\r\n        params.srcFilePath = row.path\r\n        params.fileName = row.fileName\r\n        params.dir = row.dir\r\n        params.uri = 'spdb://' + params.serverName + '/' + params.srcFilePath\r\n        // params.uri = 'local:///C:/Users/c-yujh/Downloads/7月13日疫情风险地区提示单（简版）(1).doc'\r\n        if (row.dir) {\r\n          this.$Message.warning({\r\n            content: '禁止删除文件夹！',\r\n            duration: 5,\r\n            closable: true\r\n          })\r\n          return\r\n        }\r\n        // this.request.delReq.method = 'DELETE'\r\n        let config = {\r\n          method: 'GET',\r\n          url: '/file/deleteFile',\r\n          params: params\r\n        }\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            if (resp.data) {\r\n              // 完成\r\n              this.$Message.success('删除成功！')\r\n              this.searchFile(params)\r\n            } else {\r\n              this.$Message.warning({\r\n                content: '删除文件失败！',\r\n                duration: 5,\r\n                closable: true\r\n              })\r\n\r\n              // 失败\r\n            }\r\n          })\r\n      } else if (flag == '上传') {\r\n        this.uploadRpc.show = true\r\n        this.uploadRpc.srcFilePath = row.path\r\n        this.uploadRpc.fileName = row.fileName\r\n        this.uploadRpc.dir = row.dir\r\n      }\r\n    },\r\n    upload () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.srcFilePath=row.path\r\n      // params.fileName=row.fileName\r\n      // params.isDir=row.isDir\r\n      if (!this.uploadRpc.dir) {\r\n        this.$Message.warning({\r\n          content: '请在文件夹上进行上传文件！',\r\n          duration: 5,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      var formData = new FormData()\r\n      for (const key in this.formBean) {\r\n        formData.append(key, this.formBean[key])\r\n      }\r\n      formData.append('srcFilePath', this.uploadRpc.srcFilePath)\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择上传文件')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('fileName', ele.name)\r\n          formData.append('uri', 'spdb://' + params.serverName + '/' + this.uploadRpc.srcFilePath + '/' + ele.name)\r\n          // formData.append('uri', 'local:///D:/文档/temp/temp' + '/' + ele.name)\r\n          formData.append('file', ele)\r\n        }\r\n        this.loadingTable = true\r\n        this.$ajax.post('/file/uploadFile', formData)\r\n          .then(resp => {\r\n            this.loadingTable = false\r\n            this.uploadRpc.show = false\r\n            // this.$Message.warning(resp.data.msg)\r\n            this.files = []\r\n          })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.rootDir = this.newPath\r\n      this.searchFile(params)\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.rootDir = this.newPath\r\n      this.searchFile(params)\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n\t\t this.init()\r\n\t\t this.loadfile()\r\n  }\r\n}\r\n</script>\r\n"]}]}