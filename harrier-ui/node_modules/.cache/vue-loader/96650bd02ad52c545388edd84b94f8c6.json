{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\JobComplement.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobComplement\\JobComplement.vue","mtime":1681468306532},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobComplement'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobstatusData: [\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Running', value: 'Running' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Ready', value: 'Ready' }\r\n      ],\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          ellipsis: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          ellipsis: true,\r\n          align: 'left',\r\n          width: 120,\r\n          sortable: true,\r\n          className: 'uds-job-column',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          ellipsis: false,\r\n          // tooltip: true,\r\n          sortable: true,\r\n          minWidth: 170,\r\n          className: 'uds-job-column',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  color: row.enable ? '' : 'red'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '批次号',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 90,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'multiBatch'\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'jobDate',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.jobDate.substring(0, 10))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        {\r\n          title: '描述',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'desc'\r\n        }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      params.platform = this.formBean.platform\r\n      params.systems = this.formBean.systems\r\n      params.lastStatus = this.formBean.lastStatus\r\n      params.complementId = this.transData.jobData.id\r\n      if (this.formBean.job) {\r\n        params.job = this.formBean.job\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    },\r\n    getPlatformList () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      console.log(this.platformData)\r\n      this.search()\r\n    },\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.getPlatformList()\r\n    this.init()\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["JobComplement.vue"],"names":[],"mappingsfile":"JobComplement.vue","sourceRoot":"src/view/spdb/job/jobComplement","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<Row>\r\n      <Form ref=\"udsjobForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\">\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <FormItem prop=\"platform\" label=\"平台名\">\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value+''\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <FormItem label=\"作业状态\">\r\n              <Select filterable v-model=\"formBean.lastStatus\" clearable>\r\n                <Option v-for=\"item in jobstatusData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <FormItem label=\"作业名\">\r\n              <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"formBean.job\" placeholder=\"支持模糊查询\"/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col span=\"1\">&nbsp;</Col>\r\n          <Col span=\"8\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\r\n              <!-- <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button> -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\t\t</Row>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" :loading=\"loadingTable\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t\t<div slot=\"footer\">\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobComplement'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      jobstatusData: [\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Running', value: 'Running' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Ready', value: 'Ready' }\r\n      ],\r\n      jobtypeList: {},\r\n      loadingTable: false,\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      streamTypeList: {},\r\n\r\n      gridColumns: [\r\n        {\r\n          title: '平台名',\r\n          ellipsis: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          ellipsis: true,\r\n          align: 'left',\r\n          width: 120,\r\n          sortable: true,\r\n          className: 'uds-job-column',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          ellipsis: false,\r\n          // tooltip: true,\r\n          sortable: true,\r\n          minWidth: 170,\r\n          className: 'uds-job-column',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  color: row.enable ? '' : 'red'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          minWidth: 110,\r\n          maxWidth: 130,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'lastStatus'\r\n        },\r\n        {\r\n          title: '批次号',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 90,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'multiBatch'\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 170,\r\n          sortable: true,\r\n          key: 'jobDate',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.jobDate.substring(0, 10))\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          ellipsis: false,\r\n          tooltip: false,\r\n          width: 180,\r\n          sortable: true,\r\n          key: 'endTime',\r\n          render: (h, { column, index, row }) => {\r\n            let endArr = ['', '']\r\n            if (row.endTime) {\r\n              endArr = row.endTime.split(' ')\r\n            }\r\n            return h('div', [\r\n              h('div', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.lastStatus === 'Running' ? '' : row.endTime)])\r\n          }\r\n        },\r\n        {\r\n          title: '描述',\r\n          ellipsis: true,\r\n          tooltip: true,\r\n          minWidth: 80,\r\n          maxWidth: 100,\r\n          sortable: true,\r\n          key: 'desc'\r\n        }\r\n      ],\r\n      statusList: [\r\n        {\r\n          label: 'Done',\r\n          key: 'Done'\r\n        },\r\n        {\r\n          label: 'Failed',\r\n          key: 'Failed'\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    getStartTime (startTime) {\r\n      this.formBean.startTime = startTime\r\n    },\r\n    getEndTime (endTime) {\r\n      this.formBean.endTime = endTime\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.jobData) {\r\n        this.page.size = this.transData.pageSize\r\n        this.page.current = this.transData.currentPage\r\n        this.search()\r\n      }\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      params.platform = this.formBean.platform\r\n      params.systems = this.formBean.systems\r\n      params.lastStatus = this.formBean.lastStatus\r\n      params.complementId = this.transData.jobData.id\r\n      if (this.formBean.job) {\r\n        params.job = this.formBean.job\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.loadingTable = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          this.loadingTable = false\r\n        })\r\n    },\r\n    queryStreamTypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'stream_type' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.streamTypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.streamTypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.formBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.system)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      if (this.transData.tablePage) {\r\n        queryCache = { formBean: this.transData.formBean, currentPage: this.tablePage.current, pageSize: this.tablePage.size }\r\n      }\r\n      if (this.transData.prequeryCache) {\r\n        if (this.transData.jobStatus) {\r\n          this.transData.prequeryCache.jobStatus = this.transData.jobStatus\r\n        }\r\n        this.$emit('switch', Object.assign({}, this.transData.prequeryCache, backParam))\r\n      } else {\r\n        this.$emit('switch', Object.assign({}, queryCache, backParam, { jobData: this.transData.jobData }))\r\n      }\r\n    },\r\n    getPlatformList () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n      console.log(this.platformData)\r\n      this.search()\r\n    },\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.getPlatformList()\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}