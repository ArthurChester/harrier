{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Table.vue?vue&type=style&index=0&id=1352b354&lang=css&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Table.vue","mtime":1681468306510},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.ivu-poptip-body-content-inner {\r\n    text-align: center;\r\n    /* overflow: auto; */\r\n    width: 100%;\r\n    word-break: break-word;\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";AAiyBA;AACA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/view/app/workflow/workflowmanage","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form ref=\"workflowManageForm\" :model=\"formBean\" :label-width=\"80\" :rules='ruleValidate'>\r\n        <Row>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"platform\" label=\"平台名\" >\r\n              <Select filterable v-model=\"formBean.platform\" @on-change=\"querySystem\" clearable>\r\n                <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"systems\" label=\"应用名\" >\r\n              <Select ref=\"refsystem\" v-model=\"formBean.systems\" style=\"width:100px\" filterable  clearable>\r\n                <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</Option>\r\n              </Select>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"6\">\r\n            <Form-Item prop=\"job\" label=\"作业名\" >\r\n              <Input  v-model=\"formBean.job\"/>\r\n            </Form-Item>\r\n          </Col>\r\n          <Col span=\"3\">\r\n            <Form-Item prop=\"etlSystem\" label=\"版本号\">\r\n              <Input  v-model=\"formBean.version\"/>\r\n            </Form-Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n           <Col span=\"10\">\r\n            <div class=\"spdb-toolbar\">\r\n              <Button type=\"primary\" icon=\"ios-search\" @click=\"search\">查询</Button>\r\n              <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n              <Button icon=\"ios-cloud-upload-outline\" @click=\"versionOp.uploadShow=true\">导入工作流</Button>\r\n              <!-- <S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n              <S-AuthButton type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</S-AuthButton> -->\r\n              <!-- <Button type=\"primary\" :loading=\"loadingdel\" @click=\"\">导入工作流</Button> -->\r\n              <!-- <Button type=\"primary\" :loading=\"loadingsync\" icon=\"ios-sync\" @click=\"sync\">同步</Button> -->\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\r\n    <Modal id=\"versionOp\" v-model=\"versionOp.show\" title=\"历史版本\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Row>\r\n            <Col span=\"2\">\r\n              <h3>版本号：</h3>\r\n            </Col>\r\n            <Col span=\"22\">\r\n              <Tag v-for=\"item in versionOp.data\" style=\"margin-right:3%\" :key=\"item\" color=\"primary\" :name=\"item\" @click.native=\"versionDetail(item)\" size=\"large\">{{ item }}</Tag>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <div class=\"spdb-toolbar\">\r\n          <!-- <Button icon=\"md-add\" type=\"primary\" @click=\"\">{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button> -->\r\n          <Button icon=\"md-close\" type=\"primary\" @click=\"versionOp.show=false\" > 取消 </Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"uploadOp\" v-model=\"versionOp.uploadShow\" title=\"工作流压缩包上传\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Form ref=\"importOpForm\" :label-width=\"100\" >\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"导入文件名:\" style=\"cursor:pointer;\" >\r\n                  <Upload ref=\"importTar\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n                    <Input style=\"width:400px;\" type=\"textarea\" :format=\"['tar']\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n                  </Upload>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <div class=\"spdb-toolbar\">\r\n                  <Button icon=\"md-add\" type=\"primary\" @click=\"importTar\" :loading=\"loadingStatus\" :disabled=\"loadingStatus\" >{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button>\r\n                  <Button icon=\"md-close\" type=\"primary\" @click=\"versionOp.uploadShow=false\" > 取消 </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/jobarrange'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      platformData: [],\r\n      systemData: [],\r\n      ctrlDisable: true,\r\n      loadingdel: false,\r\n      loadingsync: false,\r\n      loadingStatus: false,\r\n      fileType: '',\r\n      files: [],\r\n      formBean: {},\r\n      platformList: [],\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n          // fixed: 'left'\r\n        },\r\n        // {\r\n        //   title: '序号',\r\n        //   key: 'id',\r\n        //   align: 'center',\r\n        //   width: 80\r\n        // },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center',\r\n          width: 80\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          align: 'center',\r\n          width: 80\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          align: 'center',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '变更状态',\r\n          key: 'job',\r\n          align: 'taskStatus',\r\n          width: 95,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.taskStatusList[row.taskStatus])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '任务状态',\r\n          key: 'processStatus',\r\n          align: 'center',\r\n          width: 95,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.processStatusList[row.processStatus])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '同步状态',\r\n          key: 'syncStatus',\r\n          align: 'center',\r\n          minWidth: 130,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Span', {}, this.syncStatusList[row.syncStatus])\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '进入Dispatcher时间',\r\n        //   key: 'startDate',\r\n        //   align: 'center',\r\n        //   width: 180\r\n        // },\r\n        // {\r\n        //   title: '开始执行时间',\r\n        //   key: 'endDate',\r\n        //   align: 'center',\r\n        //   minWidth: 180\r\n        // },\r\n        {\r\n          title: '版本号',\r\n          key: 'version',\r\n          align: 'center',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 300,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            // row.taskStatus 1->新增；2->变更；3->下线 4->上线完成\r\n            // row.taskStatus = 2\r\n            let col = '#03399b'\r\n            let text = '上线'\r\n            let iconStyle = 'md-arrow-round-up'\r\n            let disable = false\r\n            if (row.processStatus === 3) {\r\n              col = 'red'\r\n              text = '下线'\r\n              iconStyle = 'md-arrow-round-down'\r\n              disable = true\r\n            } else {\r\n              col = 'green'\r\n            }\r\n\r\n            return h('div', [\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '编辑',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 编辑\r\n                  props: {\r\n                    icon: 'md-create',\r\n                    disabled: disable\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                      this.$emit('switch', Object.assign({}, { row: row, id: row.id }, queryCache)) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: text,\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 上线：部署的流程（点完之后变为上线\r\n                  props: {\r\n                    icon: iconStyle\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: col,\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                    // deploy 上线 rollback 下线\r\n                      let params = Object.assign({}, row)\r\n                      if (row.processStatus === 3) {\r\n                        this.$Modal.confirm({\r\n                          title: '提示',\r\n                          content: '确定下线' + params.job + '作业吗',\r\n                          onOk: () => {\r\n                            let loadConfig = {\r\n                              method: 'POST',\r\n                              url: '/jobdevelop/rollback',\r\n                              data: params\r\n                            }\r\n                            this.$ajax(loadConfig)\r\n                              .then(resp => {\r\n                                this.search()\r\n                              })\r\n                          },\r\n                          onCancel: () => {\r\n                          }\r\n                        })\r\n                      } else {\r\n                        this.$Modal.confirm({\r\n                          title: '提示',\r\n                          content: '确定上线' + params.job + '作业吗',\r\n                          onOk: () => {\r\n                            let loadConfig = {\r\n                              method: 'POST',\r\n                              url: '/jobdevelop/deploy',\r\n                              data: params\r\n                            }\r\n                            this.$ajax(loadConfig)\r\n                              .then(resp => {\r\n                                this.search()\r\n                              })\r\n                          },\r\n                          onCancel: () => {\r\n                          }\r\n                        })\r\n                      }\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '删除',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 删除：只删除dy_job_arrange\r\n                  props: {\r\n                    icon: 'md-trash',\r\n                    disabled: disable\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.$Modal.confirm({\r\n                        title: '提示',\r\n                        content: '确定删除' + row.job + '作业吗',\r\n                        onOk: () => {\r\n                          let delConfig = {\r\n                            method: 'DELETE',\r\n                            url: RESOURCE_PATH + '/delete/' + row.id\r\n                          }\r\n                          this.$ajax(delConfig)\r\n                            .then(resp => {\r\n                              this.search()\r\n                            })\r\n                        },\r\n                        onCancel: () => {\r\n                        }\r\n                      })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '导出',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 导出：下载一个压缩包\r\n                  props: {\r\n                    icon: 'md-redo'\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job, version: row.version }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/download',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          utils.blobDownload(resp)\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '版本切换',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 版本切换\r\n                  props: {\r\n                    icon: 'md-repeat',\r\n                    disabled: disable\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job, version: row.version }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/loadJobArrangesByVersion',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          console.log(resp)\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ]),\r\n              h('Poptip', {\r\n                props: {\r\n                  content: '历史版本',\r\n                  transfer: true,\r\n                  width: '50px',\r\n                  trigger: 'hover'\r\n                },\r\n                class: {\r\n                  poptipContentInner: true\r\n                }\r\n              }, [\r\n                h('Button', { // 历史版本\r\n                  props: {\r\n                    icon: 'md-search'\r\n                  // shape: 'circle',\r\n                  // type: 'primary'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px',\r\n                    margin: '0px',\r\n                    fontSize: '16px',\r\n                    border: 0,\r\n                    padding: '4px 8px',\r\n                    color: '#03399b',\r\n                    background: 'transparent'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let params = { platform: row.platform, systems: row.systems, job: row.job }\r\n                      let delConfig = {\r\n                        method: 'GET',\r\n                        url: RESOURCE_PATH + '/versionCodeList/',\r\n                        params: params\r\n                      }\r\n                      this.$ajax(delConfig)\r\n                        .then(resp => {\r\n                          this.versionOp.platform = row.platform\r\n                          this.versionOp.systems = row.systems\r\n                          this.versionOp.job = row.job\r\n                          this.versionOp.show = true\r\n                          this.versionOp.data = resp.data\r\n                        })\r\n                    }\r\n                  }\r\n                }, '')\r\n              ])\r\n\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      versionOp: {\r\n        platform: '',\r\n        systems: '',\r\n        job: '',\r\n        show: false,\r\n        uploadShow: false,\r\n        data: [],\r\n        detail: {}\r\n      },\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      },\r\n      syncStatusList: { '0': '正常线上开发无需同步', '1': '成功', '2': '失败' },\r\n      processStatusList: { '1': '待投产', '2': '投产失败', '3': '投产成功' },\r\n      taskStatusList: { '1': '新增', '2': '变更', '3': '下线' }\r\n    }\r\n  },\r\n  watch: {\r\n    selection: function (val) {\r\n      if (val.length != 0) {\r\n        this.ctrlDisable = false\r\n      } else {\r\n        this.ctrlDisable = true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    versionDetail (version) {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/loadJobArrangesByVersion',\r\n        params: { platform: this.versionOp.platform, systems: this.versionOp.systems, job: this.versionOp.job, version: version }\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.gridData = []\r\n            this.gridData.push(resp.data)\r\n            this.page.total = 1\r\n            // this.versionOp.detail = resp.data\r\n            this.versionOp.show = false\r\n          }\r\n        })\r\n    },\r\n    // 同步\r\n    sync () {\r\n      // 同步\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/sync'\r\n      }\r\n      this.loadingsync = true\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.loadingsync = false\r\n          if (resp.data == '1') {\r\n            this.$Notice.success({\r\n              title: '信息',\r\n              desc: '同步成功'\r\n            })\r\n          } else {\r\n            this.$Notice.error({\r\n              title: '信息',\r\n              desc: '同步失败'\r\n            })\r\n          }\r\n          this.search()\r\n        })\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.job) {\r\n        this.formBean.job = this.transData.job\r\n      }\r\n      if (this.transData.currentPage) {\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (this.formBean.job) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/findDjAgAll',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.gridData = resp.data.records\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.alarmsettingid)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.loadingdel = true\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.loadingdel = false\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    handleUpload: function (file) {\r\n      var fileExtension = (file.name).match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)\r\n      if (fileExtension.pop() !== 'tar') {\r\n        this.$Message.warning('您上传的不是工程压缩包！')\r\n        return false\r\n      }\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    importTar () {\r\n      var formData = new FormData()\r\n      formData.append('fileType', 'tar')\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入工程tar包')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        this.loadingStatus = true\r\n        this.$ajax.post('/jobattributes/parseProject', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            this.files = []\r\n            this.versionOp.uploadShow = false\r\n            this.search()\r\n          })\r\n      }\r\n      // })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      // alert(currentPage);\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n    this.queryPlatform()\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.ivu-poptip-body-content-inner {\r\n    text-align: center;\r\n    /* overflow: auto; */\r\n    width: 100%;\r\n    word-break: break-word;\r\n}\r\n</style>\r\n<style scoped>\r\n.detail-title{\r\n  font-size: 15px;\r\n}\r\n.detail-message {\r\n  color: #3e3f4b;\r\n  margin-left: 10px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]}]}