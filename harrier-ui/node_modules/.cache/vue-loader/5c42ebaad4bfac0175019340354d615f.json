{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\login\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\login\\Register.vue","mtime":1681468306522},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport { mapActions } from 'vuex'\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      captchaSwitch: false,\r\n      codeMessage: '获取验证码',\r\n      homeTitle: 'Harrier',\r\n      formBean: {},\r\n      isShow: true,\r\n      isEdit: false,\r\n      loading: false,\r\n      formRule: {\r\n        userCode: [ { required: true, message: '该项为必输项！' }, {\r\n          validator: (rule, value, callback, source, options) => {\r\n            let v = this.formBean.userCode\r\n            if (this.isEdit) {\r\n              callback()\r\n              return\r\n            }\r\n            this.$ajax(`user/${v}/codeExists`)\r\n              .then(resp => {\r\n                if (resp.data === true) {\r\n                  callback(new Error('该用户名已存在！'))\r\n                } else {\r\n                  callback()\r\n                }\r\n              })\r\n          }}\r\n        ],\r\n        code: [{ required: true, message: '请输入验证码！' }],\r\n        userName: [ { required: true, message: '该项为必输项！' } ],\r\n        password: [ { required: true, message: '该项为必输项！' } ],\r\n        userPwd: [ { required: true, message: '该项为必输项！' } ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogOut'\r\n    ]),\r\n    getCaptchaSwitch () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/register/selectCaptchaOnOff'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.captchaSwitch = resp.data.data\r\n        })\r\n    },\r\n    getCode () {\r\n      if (!this.formBean.userEmail) {\r\n        this.$Message.warning({\r\n          content: '请输入邮箱',\r\n          duration: 8,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      let cookieV = this.getCookieValue('registerEmail') ? this.getCookieValue('registerEmail') : 0\r\n      if (cookieV > 0) {\r\n        this.settime()\r\n        this.$Message.info({\r\n          content: '请检查您的邮箱，查看是否收到验证码',\r\n          duration: 8,\r\n          closable: true\r\n        })\r\n      } else {\r\n        let param = {}\r\n        Object.assign(param, this.formBean)\r\n        let loadConfig = {\r\n          method: 'POST',\r\n          url: '/user/sendRegistervaricode',\r\n          data: param\r\n        }\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              if (resp.data) {\r\n                this.getCode_btn = true\r\n                this.addCookie('registerEmail', 60, 60)\r\n                this.settime()\r\n              } else {\r\n                this.$Message.error({\r\n                  content: '验证码发送失败！',\r\n                  duration: 8,\r\n                  closable: true\r\n                })\r\n              }\r\n            }\r\n          })\r\n      }\r\n    },\r\n    getCookieValue (name) {\r\n      let strCookie = document.cookie\r\n      let arrCokie = strCookie.split(';')\r\n      let result = ''\r\n      arrCokie.forEach((d, i) => {\r\n        let arr = d.split('=')\r\n        if (arr[0].replace(/\\s*/g, '') === name) {\r\n          result = unescape(arr[1])\r\n        }\r\n      })\r\n      return result\r\n    },\r\n    settime () {\r\n      let countdown = this.getCookieValue('registerEmail')\r\n      let that = this\r\n      let tim = setInterval(function () {\r\n        countdown--\r\n        that.codeMessage = '重新发送(' + countdown + ')'\r\n        that.getCode_btn = true\r\n        if (countdown <= 0) {\r\n          clearInterval(tim)\r\n          that.getCode_btn = false\r\n          that.codeMessage = '重新发送'\r\n        }\r\n        that.editCookie('registerEmail', countdown, countdown + 1)\r\n      }, 1000)\r\n    },\r\n    editCookie (name, value, expiresHours) {\r\n      let cookieString = name + '=' + escape(value)\r\n      if (expiresHours > 0) {\r\n        let date = new Date()\r\n        date.setTime(date.getTime() + expiresHours * 1000)\r\n        cookieString = cookieString + ';expires=' + date.toGMTString()\r\n      }\r\n      document.cookie = cookieString\r\n    },\r\n    addCookie (name, value, expiresHours) {\r\n      let cookieString = name + '=' + escape(value)\r\n      if (expiresHours > 0) {\r\n        let date = new Date()\r\n        date.setTime(date.getTime() + expiresHours * 1000)\r\n        cookieString = cookieString + ';expires=' + date.toUTCString()\r\n      }\r\n      document.cookie = cookieString\r\n    },\r\n    save: function () {\r\n      if (this.formBean.userId) { // 编辑\r\n      } else {\r\n        if (this.formBean.userPwd != this.formBean.password) {\r\n          this.$Message.error('两次密码不同')\r\n          return\r\n        }\r\n      }\r\n      this.$refs.userForm.validate((valid) => {\r\n        if (!valid) return\r\n        let config = {}\r\n        config.data = this.formBean\r\n        config.data.username = this.formBean.userCode\r\n        config.method = 'POST'\r\n        config.url = '/register'\r\n        config.contentType = 'json'\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            console.log(resp)\r\n            debugger\r\n            if (resp.data.success) {\r\n              var msg = resp.data.data.msg\r\n              var status = resp.data.data.status\r\n              if (status === 'true' || status === true) {\r\n                this.$Modal.success({\r\n                  title: '提示',\r\n                  content: '注册成功！'\r\n                })\r\n                setTimeout(() => {\r\n                  this.cancel()\r\n                }, 1000)\r\n              } else {\r\n                this.$Modal.error({\r\n                  title: '提示',\r\n                  content: msg\r\n                })\r\n                this.loading = false\r\n              }\r\n            }\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      this.handleLogOut().then(() => {\r\n        this.$router.push({\r\n          name: 'login'\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.getCaptchaSwitch()\r\n    //\r\n  }\r\n}\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AAifile":"Register.vue","sourceRoot":"src/view/login","sourcesContent":["<template>\r\n<div id=\"login-header\" class=\"background-image\">\r\n  <div>\r\n    <div>\r\n\t\t\t<Row type=\"flex\" justify=\"center\" align=\"middle\" class=\"code-row-bg\" style=\"margin-top:3%\">\r\n\t\t\t\t<Col span=\"12\" >\r\n\t\t\t\t\t<Card icon=\"log-in\" title=\"用户注册\" :bordered=\"false\" class=\"login_old\" :style=\"[{height: (captchaSwitch ? '390px': '280px')},{marginTop: (captchaSwitch ? '5%': '10%')},{background: 'rgba(255, 255, 255, 0.9)'}]\">\r\n          <Form ref=\"userForm\" :label-width=\"10\" :model=\"formBean\" :rules=\"formRule\">\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"userCode\">\r\n                <Input v-model=\"formBean.userCode\" :disabled=\"isEdit\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">账户：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"userPwd\">\r\n                <Input type='password' v-model=\"formBean.userPwd\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">密码：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"password\">\r\n                <Input type=\"password\" v-model=\"formBean.password\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">再次输入：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\" v-if=\"captchaSwitch\">\r\n              <Form-Item prop=\"userEmail\">\r\n                <Input type=\"userEmail\" v-model=\"formBean.userEmail\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">邮箱:</span>\r\n                </Input>\r\n              </Form-Item>\r\n            </Col>\r\n            <Col span=\"16\" v-if=\"captchaSwitch\">\r\n              <FormItem prop=\"code\">\r\n                <Input v-model=\"formBean.code\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">验证码：</span>\r\n                </Input>\r\n              </FormItem>\r\n            </Col>\r\n\t\t\t\t\t\t<Col span=\"6\" v-if=\"captchaSwitch\">\r\n              <FormItem>\r\n                <Button  type=\"primary\" @click=\"getCode\">{{codeMessage}}</Button>\r\n              </FormItem>\r\n            </Col>\r\n            <div>\r\n              <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save()\" style=\"float: right\">保存</Button>\r\n              <Button type=\"primary\" icon=\"ios-redo-outline\" @click=\"cancel()\" style=\" margin-right: 15px;float: right;\">取消</Button>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\r\n<!-- \r\n    <div class=\"sys-bar-title\">\r\n      <div>Harrier</div>\r\n    </div>\r\n    <Row style=\"height:100%;\">\r\n      <Col span=\"15\">\r\n          &nbsp;\r\n      </Col>\r\n      <Col span=\"9\" style=\"height:100%;opacity: 0.76;background: #FFFFFF;\">\r\n        <div style=\"text-align:center;padding-top:25%\">\r\n            <img src=\"../../../static/img/logo_harrier.png\" width = \"137px\" height = \"157px\"/>\r\n            <div class=\"homeTitle\">\r\n              {{ homeTitle }}\r\n            </div>\r\n        </div>\r\n        <Card icon=\"log-in\" title=\"用户注册\" :bordered=\"false\" class=\"login_old\" :style=\"[{height: (captchaSwitch ? '380px': '280px')},{marginTop: (captchaSwitch ? '25%': '30%')}]\">\r\n          <Form ref=\"userForm\" :label-width=\"10\" :model=\"formBean\" :rules=\"formRule\">\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"userCode\">\r\n                <Input v-model=\"formBean.userCode\" :disabled=\"isEdit\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">账户：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"userPwd\">\r\n                <Input type='password' v-model=\"formBean.userPwd\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">密码：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\">\r\n              <Form-Item prop=\"password\">\r\n                <Input type=\"password\" v-model=\"formBean.password\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">再次输入：</span>\r\n                </Input>\r\n              </Form-Item>\r\n\t\t\t\t\t\t</Col>\r\n            <Col span=\"22\" v-if=\"captchaSwitch\">\r\n              <Form-Item prop=\"userEmail\">\r\n                <Input type=\"userEmail\" v-model=\"formBean.userEmail\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">邮箱:</span>\r\n                </Input>\r\n              </Form-Item>\r\n            </Col>\r\n            <Col span=\"16\" v-if=\"captchaSwitch\">\r\n              <FormItem prop=\"code\">\r\n                <Input v-model=\"formBean.code\">\r\n                  <span slot=\"prepend\" style=\"display: inline-block;width:60px\">验证码：</span>\r\n                </Input>\r\n              </FormItem>\r\n            </Col>\r\n\t\t\t\t\t\t<Col span=\"1\" v-if=\"captchaSwitch\">\r\n              <FormItem>\r\n                <Button  type=\"primary\" @click=\"getCode\">{{codeMessage}}</Button>\r\n              </FormItem>\r\n            </Col>\r\n            <div>\r\n              <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save()\" style=\"margin-left: 80px;\">保存</Button>\r\n              <Button type=\"primary\" icon=\"ios-redo-outline\" @click=\"cancel()\" style=\"margin-left: 30px;\">取消</Button>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row> -->\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      captchaSwitch: false,\r\n      codeMessage: '获取验证码',\r\n      homeTitle: 'Harrier',\r\n      formBean: {},\r\n      isShow: true,\r\n      isEdit: false,\r\n      loading: false,\r\n      formRule: {\r\n        userCode: [ { required: true, message: '该项为必输项！' }, {\r\n          validator: (rule, value, callback, source, options) => {\r\n            let v = this.formBean.userCode\r\n            if (this.isEdit) {\r\n              callback()\r\n              return\r\n            }\r\n            this.$ajax(`user/${v}/codeExists`)\r\n              .then(resp => {\r\n                if (resp.data === true) {\r\n                  callback(new Error('该用户名已存在！'))\r\n                } else {\r\n                  callback()\r\n                }\r\n              })\r\n          }}\r\n        ],\r\n        code: [{ required: true, message: '请输入验证码！' }],\r\n        userName: [ { required: true, message: '该项为必输项！' } ],\r\n        password: [ { required: true, message: '该项为必输项！' } ],\r\n        userPwd: [ { required: true, message: '该项为必输项！' } ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'handleLogOut'\r\n    ]),\r\n    getCaptchaSwitch () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/register/selectCaptchaOnOff'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.captchaSwitch = resp.data.data\r\n        })\r\n    },\r\n    getCode () {\r\n      if (!this.formBean.userEmail) {\r\n        this.$Message.warning({\r\n          content: '请输入邮箱',\r\n          duration: 8,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      let cookieV = this.getCookieValue('registerEmail') ? this.getCookieValue('registerEmail') : 0\r\n      if (cookieV > 0) {\r\n        this.settime()\r\n        this.$Message.info({\r\n          content: '请检查您的邮箱，查看是否收到验证码',\r\n          duration: 8,\r\n          closable: true\r\n        })\r\n      } else {\r\n        let param = {}\r\n        Object.assign(param, this.formBean)\r\n        let loadConfig = {\r\n          method: 'POST',\r\n          url: '/user/sendRegistervaricode',\r\n          data: param\r\n        }\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              if (resp.data) {\r\n                this.getCode_btn = true\r\n                this.addCookie('registerEmail', 60, 60)\r\n                this.settime()\r\n              } else {\r\n                this.$Message.error({\r\n                  content: '验证码发送失败！',\r\n                  duration: 8,\r\n                  closable: true\r\n                })\r\n              }\r\n            }\r\n          })\r\n      }\r\n    },\r\n    getCookieValue (name) {\r\n      let strCookie = document.cookie\r\n      let arrCokie = strCookie.split(';')\r\n      let result = ''\r\n      arrCokie.forEach((d, i) => {\r\n        let arr = d.split('=')\r\n        if (arr[0].replace(/\\s*/g, '') === name) {\r\n          result = unescape(arr[1])\r\n        }\r\n      })\r\n      return result\r\n    },\r\n    settime () {\r\n      let countdown = this.getCookieValue('registerEmail')\r\n      let that = this\r\n      let tim = setInterval(function () {\r\n        countdown--\r\n        that.codeMessage = '重新发送(' + countdown + ')'\r\n        that.getCode_btn = true\r\n        if (countdown <= 0) {\r\n          clearInterval(tim)\r\n          that.getCode_btn = false\r\n          that.codeMessage = '重新发送'\r\n        }\r\n        that.editCookie('registerEmail', countdown, countdown + 1)\r\n      }, 1000)\r\n    },\r\n    editCookie (name, value, expiresHours) {\r\n      let cookieString = name + '=' + escape(value)\r\n      if (expiresHours > 0) {\r\n        let date = new Date()\r\n        date.setTime(date.getTime() + expiresHours * 1000)\r\n        cookieString = cookieString + ';expires=' + date.toGMTString()\r\n      }\r\n      document.cookie = cookieString\r\n    },\r\n    addCookie (name, value, expiresHours) {\r\n      let cookieString = name + '=' + escape(value)\r\n      if (expiresHours > 0) {\r\n        let date = new Date()\r\n        date.setTime(date.getTime() + expiresHours * 1000)\r\n        cookieString = cookieString + ';expires=' + date.toUTCString()\r\n      }\r\n      document.cookie = cookieString\r\n    },\r\n    save: function () {\r\n      if (this.formBean.userId) { // 编辑\r\n      } else {\r\n        if (this.formBean.userPwd != this.formBean.password) {\r\n          this.$Message.error('两次密码不同')\r\n          return\r\n        }\r\n      }\r\n      this.$refs.userForm.validate((valid) => {\r\n        if (!valid) return\r\n        let config = {}\r\n        config.data = this.formBean\r\n        config.data.username = this.formBean.userCode\r\n        config.method = 'POST'\r\n        config.url = '/register'\r\n        config.contentType = 'json'\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            console.log(resp)\r\n            debugger\r\n            if (resp.data.success) {\r\n              var msg = resp.data.data.msg\r\n              var status = resp.data.data.status\r\n              if (status === 'true' || status === true) {\r\n                this.$Modal.success({\r\n                  title: '提示',\r\n                  content: '注册成功！'\r\n                })\r\n                setTimeout(() => {\r\n                  this.cancel()\r\n                }, 1000)\r\n              } else {\r\n                this.$Modal.error({\r\n                  title: '提示',\r\n                  content: msg\r\n                })\r\n                this.loading = false\r\n              }\r\n            }\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      this.handleLogOut().then(() => {\r\n        this.$router.push({\r\n          name: 'login'\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.getCaptchaSwitch()\r\n    //\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import url(\"./login.less\");\r\n.sys-bar-title {\r\n  color: #fff;\r\n  width: 600px;\r\n  position: absolute;\r\n  // top: 8px;\r\n  // left: 200px;\r\n  left: 60px;\r\n  z-index: 999;\r\n  height: 60px;\r\n  text-align: left;\r\n  line-height: 54px;\r\n  margin: 0 0px;\r\n  font-size: 24px;\r\n  letter-spacing: 0.1em;\r\n\r\n  background-repeat: no-repeat;\r\n}\r\n.ivu-btn-primary{\r\n  background-color: #376eff;\r\n  border-color: #376eff;\r\n  margin-top: 3%;\r\n}\r\n.flip-horizontal {\r\n  width: 90%;\r\n}\r\n</style>\r\n<style>\r\n#userRegisterForm .ivu-form-item-error-tip {\r\n  width: 150px;\r\n}\r\nbody {\r\n    background-image:url(~@/assets/images/login_background.png);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    -webkit-background-size: cover;\r\n    background-position: center 0;\r\n}\r\n</style>\r\n"]}]}