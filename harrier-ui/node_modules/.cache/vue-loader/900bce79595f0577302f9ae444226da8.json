{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Form.vue?vue&type=style&index=0&id=62ae2bae&lang=css&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\workflow\\workflowmanage\\Form.vue","mtime":1681468306509},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.drawer-calss .ivu-drawer-wrap  {\n    z-index: 3000 !important\n}\n.drawer-calss .ivu-drawer-mask {\n    z-index: 3000 !important\n}\n.drawer-footer{\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  border-top: 1px solid #e8e8e8;\n  padding: 10px 16px;\n  text-align: right;\n  background: #fff;\n}\n.jobsetp-title{\n  font-size: 14px;\n  font-weight: 700;\n  color: #495060;\n  text-align: center;\n}\n.jobsetp-tag .ivu-tag{\n  font-size: 14px;\n  margin-top: 10%;\n  margin-left: 10%;\n  /* align-items: center; */\n}\n.work-flow .ivu-form-item-error-tip {\n  white-space: nowrap;\n}\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";AA+jDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Form.vue","sourceRoot":"src/view/app/workflow/workflowmanage","sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"alarmConfigForm\" :model=\"formBean\" class=\"work-flow\" :label-width=\"210\" :rules=\"formRule\">\r\n      <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n        <Col span=\"20\">\r\n          <Row>\r\n            <p>名称属性定义</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"platform\" label=\"平台名\">\r\n                    <Select :disabled=\"isEdit\" filterable v-model=\"formBean.platform\" clearable  @on-change=\"querySystem\">\r\n                      <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"systems\" label=\"应用名\">\r\n                    <Select ref=\"refsystem\" :disabled=\"isEdit\" v-model=\"formBean.systems\" filterable clearable>\r\n                      <Option v-for=\"item in systemsData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"job\" label=\"作业名\">\r\n                    <Input :disabled=\"isEdit\" v-model=\"formBean.job\"/>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col  span=\"1\">\r\n                  <Poptip trigger=\"hover\" title=\"作业命名规则\" style=\"margin-top:5px\" >\r\n                    <Icon type=\"md-help-circle\" style=\"font-size:22px;margin-left:10px;cursor:pointer\"></Icon>\r\n                    <div slot=\"content\">\r\n                      平台名_系统名_表名_【作业类型：D/W/M/C，分别表示日作业/周作业/月作业/定时作业】\r\n                    </div>\r\n                  </Poptip>\r\n                </Col>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobName\" label=\"作业名中文\">\r\n                    <Input v-model=\"formBean.jobName\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务执行频度设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobType\" label=\"作业类型\">\r\n                    <Select v-model=\"formBean.jobType\" @on-change=\"changeJobType\" filterable clearable>\r\n                      <Option v-for=\"item in jobTypeData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"jobFrequency\" label=\"作业频度\" >\r\n                    <Input v-model=\"formBean.jobFrequency\" :disabled=\"disJobFrequency\"></Input>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col  span=\"1\">\r\n                  <Poptip trigger=\"hover\" title=\"Corn表达式\" style=\"margin-top:5px\" >\r\n                    <Icon type=\"md-help-circle\" style=\"font-size:22px;margin-left:10px;cursor:pointer\"></Icon>\r\n                    <div slot=\"content\">\r\n                       <img src=\"@/assets/images/corn.png\" width=\"880\"/>\r\n                    </div>\r\n                  </Poptip>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"offsetDay\" label=\"偏移天数\" >\r\n                    <InputNumber style=\"width: 100%\" :step=\"1\" :editable=\"false\" v-model=\"formBean.offsetDay\"></InputNumber>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"timeWindow\" label=\"窗口执行时间\">\r\n                    <TimePicker format=\"HH:mm\" type=\"timerange\" v-model=\"formBean.timeWindow\"></TimePicker>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"multiBatch\" label=\"批次号\">\r\n                    <Input v-model=\"formBean.multiBatch\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务触发设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"streamType\" label=\"作业触发类型\">\r\n                    <!-- <Input :disabled=\"isEdit\" v-model=\"formBean.streamType\"/> -->\r\n                    <Select :disabled=\"isEdit\" v-model=\"formBean.streamType\" @on-change=\"changeStreamType\" filterable clearable>\r\n                      <Option v-for=\"item in streamTypeData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"checkStreamSelf\" label=\"是否启用stream file\">\r\n                    <Select v-model=\"formBean.checkStreamSelf\" disabled filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不采用</Option>\r\n                      <Option :value=\"1\" :key=\"1\">采用</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"checkTimeTrigger\" label=\"检测是否采用时间触发\">\r\n                    <Select v-model=\"formBean.checkTimeTrigger\" disabled filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不检测</Option>\r\n                      <Option :value=\"1\" :key=\"1\">检测</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"checkFrequency\" label=\"是否检测时间\">\r\n                    <Select v-model=\"formBean.checkFrequency\" filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不检测</Option>\r\n                      <Option :value=\"1\" :key=\"1\">检测</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>异常重调设置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"callAgainMaxNum\" label=\"自动重调最大次数\">\r\n                    <Select v-model=\"formBean.callAgainMaxNum\" filterable clearable>\r\n                      <Option v-for=\"item in callAgainMaxNumData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"callAgainWaitSec\" label=\"自动重调等待时间(秒)\">\r\n                    <InputNumber style=\"width: 100%\" :min=\"1\" :max=\"2592000\" :step=\"1\" v-model=\"formBean.callAgainWaitSec\"/>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"ignoreError\" label=\"是否忽视错误现场\" >\r\n                    <Select v-model=\"formBean.ignoreError\" filterable clearable>\r\n                      <Option :value=\"0\" :key=\"0\">不忽视</Option>\r\n                      <Option :value=\"1\" :key=\"1\">忽视</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务状态属性</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"lastStatus\" label=\"作业运行状态\">\r\n                    <Select filterable v-model=\"formBean.lastStatus\" disabled clearable>\r\n                      <Option v-for=\"item in lastStatusData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"taskStatus\" label=\"任务状态\">\r\n                    <Select filterable v-model=\"formBean.taskStatus\" disabled clearable>\r\n                      <Option v-for=\"item in taskStatusData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"jobDate\" label=\"批量日期\">\r\n                    <DatePicker :transfer=\"true\" type=\"date\" parse=\"yyyy-MM-dd\" format=\"yyyy-MM-dd\" v-model=\"formBean.jobDate\"></DatePicker>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"virtualEnable\" label=\"作业是否置虚\">\r\n                    <Select v-model=\"formBean.virtualEnable\" filterable clearable>\r\n                      <Option :value=\"1\" :key=\"1\">虚作业</Option>\r\n                      <Option :value=\"0\" :key=\"0\">非虚作业</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <FormItem prop=\"priority\" label=\"作业执行优先级\">\r\n                    <Select filterable v-model=\"formBean.priority\" clearable>\r\n                      <Option v-for=\"item in priorityData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col :offset=\"1\" span=\"10\">\r\n                  <FormItem prop=\"des\" label=\"描述\" >\r\n                    <Input v-model=\"formBean.des\"></Input>\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务依赖配置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <Button type=\"primary\" @click=\"depJobConfig\">依赖配置</Button>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n          </br>\r\n          <Row>\r\n            <p>任务脚本配置</p>\r\n          </Row>\r\n          <Row style=\"margin-top:10px\">\r\n            <Card>\r\n              <Row>\r\n                <Col span=\"10\">\r\n                  <Button type=\"primary\" @click=\"jobStepConfig\">脚本配置</Button>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <div style=\"text-align:center\">\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n\r\n    <Modal\r\n      title=\"依赖配置\"\r\n      v-model=\"depJobDrawer.show\"\r\n      width=\"720\"\r\n      :mask-closable=\"false\"\r\n      fullscreen\r\n      style=\"z-index: 999;!important\"\r\n      >\r\n      <Form ref=\"depJobDrawerForm\" :model=\"depJobDrawer.data\" :label-width=\"100\" :rules=\"depJobRuler\">\r\n        <Row :gutter=\"32\">\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depPlatform\" label=\"依赖平台\" label-position=\"top\">\r\n                    <!-- <Input v-model=\"depJobDrawer.data.depPlatform\"/> -->\r\n                    <Select filterable v-model=\"depJobDrawer.data.depPlatform\" clearable  @on-change=\"queryDepSystem\">\r\n                      <Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n            </Col>\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depSystem\" label=\"依赖应用\" label-position=\"top\">\r\n                    <!-- <Input v-model=\"depJobDrawer.data.depSystem\">\r\n                    </Input> -->\r\n                    <Select ref=\"refsystem\" v-model=\"depJobDrawer.data.depSystem\" @on-change=\"queryDepJob\" filterable clearable>\r\n                      <Option v-for=\"item in depSystemsData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </FormItem>\r\n            </Col>\r\n        </Row>\r\n        <Row :gutter=\"32\">\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depJob\" label=\"依赖作业\" label-position=\"top\">\r\n                  <!-- <Input v-model=\"depJobDrawer.data.depJob\"> -->\r\n                  <Select ref=\"refjob\" v-model=\"depJobDrawer.data.depJob\" filterable clearable>\r\n                      <Option v-for=\"item in depJobData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n                  </Select>\r\n                    <!-- </Input> -->\r\n                </FormItem>\r\n            </Col>\r\n            <Col span=\"12\">\r\n                <FormItem prop=\"depBatch\" label=\"批次\" label-position=\"top\">\r\n                  <!-- <Input v-model=\"depJobDrawer.data.depBatch\"></Input> -->\r\n                    <InputNumber style=\"width: 100%\" :step=\"1\" :min=\"0\" v-model=\"depJobDrawer.data.depBatch\"></InputNumber>\r\n                </FormItem>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col :offset=\"11\" span=\"2\">\r\n              <Button type=\"primary\" icon=\"md-add\" @click=\"addDepJob\">添加</Button>\r\n            </Col>\r\n        </Row>\r\n        <Row style=\"margin-top:6%\" :gutter=\"32\">\r\n            <Col span=\"24\">\r\n              <Table :columns=\"depColumns\" :data=\"depJobList\" stripe></Table>\r\n            </Col>\r\n        </Row>\r\n      </Form>\r\n      <div slot=\"footer\" class=\"drawer-footer\">\r\n        <Button style=\"margin-right: 8px\" @click=\"depJobDrawer.show = false\">取消</Button>\r\n        <Button type=\"primary\" @click=\"saveDepJob\">保存</Button>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal\r\n      title=\"脚本配置\"\r\n      v-model=\"jobStepDrawer.show\"\r\n      width=\"80%\"\r\n      fullscreen\r\n      :mask-closable=\"false\"\r\n      >\r\n      <Row>\r\n        <Col style=\"background:#eee;padding:20px\" span=\"6\">\r\n          <Card style=\"background-color:#eeeee\" shadow>\r\n            <p slot=\"title\">\r\n              <Icon type=\"ios-bookmark\"></Icon>\r\n              <span  style=\"font-size:16px\">脚本类型 </span>\r\n            </p>\r\n            <!-- <Row style=\"background:#d9dee9;padding:5px\">\r\n              <Col>\r\n                <span class=\"jobsetp-title\">脚本模块</span>\r\n              </Col>\r\n            </Row> -->\r\n            <!-- <Row>\r\n            </Row> -->\r\n            <!-- <Col> -->\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList2\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList3\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n              <Row>\r\n                <a v-for=\"item in stepTypeList4\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n                  <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"100\" style=\"margin-left:1%\" @click=\"handleAdd(item.key)\"></img>\r\n                </a>\r\n              </Row>\r\n            <!-- </Col> -->\r\n          </Card>\r\n        </Col>\r\n        <Col style=\"background:#eee;padding:20px\" span=\"18\">\r\n          <Card  shadow>\r\n            <Row style=\"background:#d9dee9;padding:5px\">\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">序号</span>\r\n              </Col>\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">类型</span>\r\n              </Col>\r\n              <Col span=\"2\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">脚本上传</span>\r\n              </Col>\r\n              <Col span=\"4\" :offset=\"2\">\r\n                <span class=\"jobsetp-title\">脚本参数</span>\r\n              </Col>\r\n              <Col span=\"5\" :offset=\"1\">\r\n                <span class=\"jobsetp-title\">环境参数</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n               <Form ref=\"jobStepDrawerForm\" :model=\"jobStepDrawer.data\" :label-width=\"100\" style=\"margin-top:2%\">\r\n                <FormItem\r\n                  v-for=\"(item,index) in jobStepDrawer.data.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"'序号'+(index+1)\"\r\n                  :prop=\"'list.'+index+'.value'\"\r\n                  >\r\n                  <Row>\r\n                    <Col span=\"3\" :offset=\"1\">\r\n                      <span>{{item.operCmd}}</span>\r\n                    </Col>\r\n                    <Col span=\"2\" :offset=\"1\">\r\n                      <Button icon=\"ios-cloud-upload-outline\" @click=\"uploadStepShow(item,index)\">上传</Button>\r\n                    </Col>\r\n                    <Col span=\"5\" :offset=\"1\">\r\n                      <Input v-model=\"item.parameter\" readonly @click.native=\"parameterShow(item,index)\">\r\n                      </Input>\r\n                    </Col>\r\n                    <Col span=\"5\" :offset=\"1\">\r\n                      <Input v-model=\"item.environments\" readonly @click.native=\"envShow(item,index)\">\r\n                      </Input>\r\n                    </Col>\r\n                    <Col span=\"2\" :offset=\"1\">\r\n                      <Button @click=\"handleRemove(index)\">删除</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider/>\r\n                </FormItem>\r\n              </Form>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <!-- <Row style=\"background:#d9dee9;padding:5px\"> -->\r\n        <!-- <Col span=\"4\">\r\n          <span class=\"jobsetp-title\">脚本模块</span>\r\n        </Col> -->\r\n        <!-- <Col span=\"20\">\r\n      序号 脚本 脚本参数 环境参数\r\n        </Col> -->\r\n        <!-- <Col span=\"1\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">序号</span>\r\n        </Col>\r\n        <Col span=\"2\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">类型</span>\r\n        </Col>\r\n        <Col span=\"2\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">脚本上传</span>\r\n        </Col>\r\n        <Col span=\"4\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">脚本参数</span>\r\n        </Col>\r\n        <Col span=\"5\" :offset=\"1\">\r\n          <span class=\"jobsetp-title\">环境参数</span>\r\n        </Col>\r\n      </Row>\r\n      <Row> -->\r\n        <!-- <Col span=\"4\">\r\n          <div v-for=\"item in stepTypeList\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n          <div v-for=\"item in stepTypeList2\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n          <div v-for=\"item in stepTypeList3\" :key=\"item.key\" class=\"jobsetp-tag\" >\r\n            <img :src=\"require(`../../../../assets/images/workflow/${item.imgUrl}.png`)\" width=\"80\" @click=\"handleAdd(item.key)\"></img>\r\n          </div>\r\n        </Col> -->\r\n        <!-- <Col span=\"20\"> -->\r\n          <!-- 脚本执行顺序 执行命令 脚本类型 脚本执行路径 脚本执行所需参数\r\n          stepNum operCmd stepType scriptPath parameter environments-->\r\n          <!-- :rules=\"{required: true,message:'数据不能为空',trigger: 'blur'}\" -->\r\n          <!-- <Form ref=\"jobStepDrawerForm\" :model=\"jobStepDrawer.data\" :label-width=\"100\" style=\"margin-top:2%\">\r\n            <FormItem\r\n              v-for=\"(item,index) in jobStepDrawer.data.list\"\r\n              v-if=\"item.status\"\r\n              :key=\"index\"\r\n              :label=\"'序号'+(index+1)\"\r\n              :prop=\"'list.'+index+'.value'\"\r\n              >\r\n              <Row>\r\n                <Col span=\"3\" :offset=\"1\">\r\n                  <span>{{item.operCmd}}</span>\r\n                </Col>\r\n                <Col span=\"2\" :offset=\"1\">\r\n                  <Button icon=\"ios-cloud-upload-outline\" @click=\"uploadStepShow(item,index)\">上传</Button>\r\n                </Col>\r\n                <Col span=\"5\" :offset=\"1\">\r\n                  <Input v-model=\"item.parameter\" readonly @click.native=\"parameterShow(item,index)\">\r\n                  </Input>\r\n                </Col>\r\n                <Col span=\"5\" :offset=\"1\">\r\n                  <Input v-model=\"item.environments\" readonly @click.native=\"envShow(item,index)\">\r\n                  </Input>\r\n                </Col>\r\n                <Col span=\"2\" :offset=\"1\">\r\n                  <Button @click=\"handleRemove(index)\">删除</Button>\r\n                </Col>\r\n              </Row>\r\n              <Divider/>\r\n            </FormItem>\r\n          </Form> -->\r\n        <!-- </Col>\r\n      </Row> -->\r\n      <div slot=\"footer\" class=\"drawer-footer\">\r\n        <Button style=\"margin-right: 8px\" @click=\"jobStepDrawer.show = false\">取消</Button>\r\n        <Button type=\"primary\" @click=\"saveJobStep\">保存</Button>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal id=\"uploadOp\" v-model=\"jobStepDrawer.uploadShow\" title=\"脚本上传\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n      <div>\r\n        <div>\r\n          <Form ref=\"importOpForm\" :label-width=\"100\" >\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"请选择协议:\" >\r\n                    <RadioGroup v-model='radioData' @on-change=\"checkRadio\">\r\n                      <Radio label='local'>本地存储</Radio>\r\n                      <Radio label='nas'>本地共享存储</Radio>\r\n                      <Radio label='aws'>对象存储</Radio>\r\n                      <Radio label='rpc'>rpc</Radio>\r\n                    </RadioGroup>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"脚本部署路径:\" style=\"cursor:pointer;\" >\r\n                  <Input style=\"width:400px;\" v-model='filePath' >\r\n                    <span slot=\"prepend\">{{filePathPre}}</span>\r\n                  </Input>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"16\">\r\n                <FormItem label=\"导入文件名:\" style=\"cursor:pointer;\" >\r\n                  <Upload v-if=\"isShow\" ref=\"importexcel\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n                    <Input style=\"width:400px;\" type=\"textarea\" :format=\"['xlsx','xls']\" :autosize=\"{minRows: 1,maxRows: 5}\" v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n                  </Upload>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <div class=\"spdb-toolbar\">\r\n                  <Button icon=\"md-add\" type=\"primary\" @click=\"importExcel\" :loading=\"loadingStatus\" :disabled=\"loadingStatus\" >{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button>\r\n                  <Button icon=\"md-close\" type=\"primary\" @click=\"jobStepDrawer.uploadShow=false\" > 取消 </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <!-- <Row>\r\n              <FormItem >\r\n                <div><font style='color: red;'>注：填写脚本部署路径时，请勿删除协议名！例如：local:///</font></div>\r\n              </FormItem>\r\n            </Row> -->\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\r\n    <Drawer\r\n      title=\"脚本参数配置\"\r\n      v-model=\"jobStepDrawer.parameterShow\"\r\n      width=\"40%\"\r\n      :closable=\"false\"\r\n      class=\"drawer-calss\"\r\n      >\r\n        <Form ref=\"formDynamic\" :model=\"jobStepDrawer.parameter\" :label-width=\"80\" style=\"width: 300px\">\r\n          <!-- :rules=\"{required: true, message: '参数数据不要为空', trigger: 'blur'}\"> -->\r\n          <FormItem\r\n                  v-for=\"(item, index) in jobStepDrawer.parameter.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"index+1+''\"\r\n                  :prop=\"'list.' + index + '.parameter'\"\r\n                  >\r\n              <Row>\r\n                  <Col span=\"18\">\r\n                      <Input type=\"text\" v-model=\"item.parameter\" :placeholder=\"item.placeholder\"></Input>\r\n                  </Col>\r\n                  <Col span=\"4\" offset=\"1\">\r\n                      <Button @click=\"parameterRemove(index)\">删除</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Row>\r\n                  <Col span=\"12\">\r\n                      <Button type=\"dashed\" long @click=\"parameterAdd\" icon=\"md-add\">添加</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Button type=\"primary\" @click=\"parameterOk\">确定</Button>\r\n              <Button @click=\"jobStepDrawer.parameterShow = false\" style=\"margin-left: 8px\">取消</Button>\r\n          </FormItem>\r\n      </Form>\r\n    </Drawer>\r\n\r\n    <Drawer\r\n      title=\"环境参数配置\"\r\n      v-model=\"jobStepDrawer.envShow\"\r\n      width=\"40%\"\r\n      :closable=\"false\"\r\n      class=\"drawer-calss\"\r\n      >\r\n        <Form ref=\"formDynamic\" :model=\"jobStepDrawer.env\" :label-width=\"80\" style=\"width: 300px\">\r\n          <FormItem\r\n                  v-for=\"(item, index) in jobStepDrawer.env.list\"\r\n                  v-if=\"item.status\"\r\n                  :key=\"index\"\r\n                  :label=\"index+1+''\"\r\n                  :prop=\"'list.' + index + '.environments'\"\r\n                  :rules=\"{required: true, message: '参数数据不要为空', trigger: 'blur'}\">\r\n              <Row>\r\n                  <Col span=\"20\">\r\n                      <Input type=\"text\" v-model=\"item.environments\" :placeholder=\"item.placeholder\"></Input>\r\n                  </Col>\r\n                  <Col span=\"2\" offset=\"1\">\r\n                      <Button @click=\"envRemove(index)\">删除</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Row>\r\n                  <Col span=\"12\">\r\n                      <Button type=\"dashed\" long @click=\"envAdd\" icon=\"md-add\">添加</Button>\r\n                  </Col>\r\n              </Row>\r\n          </FormItem>\r\n          <FormItem>\r\n              <Button type=\"primary\" @click=\"envOk\">确定</Button>\r\n              <Button @click=\"jobStepDrawer.envShow = false\" style=\"margin-left: 8px\">取消</Button>\r\n          </FormItem>\r\n      </Form>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/jobattributes'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    const checkCron = (rule, value, callback) => {\r\n      if (this.disJobFrequency) return callback()\r\n      if (value) {\r\n        let arr = value.trim().split(' ')\r\n        if (!arr || arr.length < 6) {\r\n          callback(new Error('cron表达至少填写到星期（秒 分钟 小时 日 月 星期 年），请添加！'))\r\n        } else {\r\n          let parser = require('cron-parser')\r\n          try {\r\n            parser.parseExpression(value)\r\n            callback()\r\n          } catch (e) {\r\n            callback(new Error('非cron表达式格式，请检查！' + e.message))\r\n          }\r\n        }\r\n      } else {\r\n        callback(new Error('请输入数据'))\r\n      }\r\n    }\r\n    const checkMultiBatch = (rule, value, callback) => {\r\n      if (value || value === 0) {\r\n        if (!this.formBean.job) {\r\n          callback(new Error('请先输入作业名'))\r\n        } else {\r\n          callback()\r\n        }\r\n      } else {\r\n        callback(new Error('请输入数据'))\r\n      }\r\n    }\r\n    return {\r\n      initFlag: 0,\r\n      isShow: true,\r\n      radioData: 'local',\r\n      depColumns: [\r\n        {\r\n          title: '依赖平台',\r\n          key: 'depPlatform',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '依赖应用',\r\n          key: 'depSystem',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '依赖作业',\r\n          key: 'depJob',\r\n          align: 'center',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '批次',\r\n          key: 'depBatch',\r\n          align: 'center',\r\n          minWidth: 80\r\n        },\r\n        {\r\n          title: '操作',\r\n          fixed: 'right',\r\n          width: 80,\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  // icon: 'md-close',\r\n                  // shape: 'circle',\r\n                  type: 'primary'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.removeDepJob(index)\r\n                  }\r\n                }\r\n              }, '删除')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      disJobFrequency: false,\r\n      loadingStatus: false,\r\n      files: [],\r\n      fileError: '',\r\n      file: null,\r\n      depJobDrawer: {\r\n        show: false,\r\n        data: {}\r\n      },\r\n      depJobList: [],\r\n      currentIndex: null,\r\n      jobStepDrawer: {\r\n        show: false,\r\n        uploadShow: false, // 上传脚本\r\n        env: {\r\n          list: [\r\n            {\r\n              environments: 'Password=?;name=?',\r\n              status: 1\r\n            }\r\n          ]\r\n        },\r\n        envShow: false,\r\n        parameterShow: false, // 脚本参数\r\n        parameter: {\r\n          list: [\r\n            {\r\n              parameter: '${platform}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${systems}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${job}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${job_date}',\r\n              status: 1\r\n            },\r\n            {\r\n              parameter: '${batch}',\r\n              status: 1\r\n            }\r\n          ]\r\n        }, // 脚本参数\r\n        data: {\r\n          list: [\r\n            // {\r\n            //   parameter: '',\r\n            //   environments: '',\r\n            //   index: 1,\r\n            //   status: 1\r\n            // }\r\n          ]\r\n        }\r\n      },\r\n      jobStepList: [],\r\n      fileType: '',\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      systemsData: [],\r\n      depSystemsData: [],\r\n      depJobData: [],\r\n      jobTypeData: [],\r\n      streamTypeData: [\r\n        { value: '1', label: '定时触发' },\r\n        { value: '2', label: '信号文件触发' },\r\n        { value: '3', label: 'HTTP请求触发' },\r\n        { value: '4', label: '依赖触发' }\r\n      ],\r\n      priorityData: [\r\n        { value: '100', label: 'L1' },\r\n        { value: '200', label: 'L2' },\r\n        { value: '300', label: 'L3' },\r\n        { value: '400', label: 'M1' },\r\n        { value: '500', label: 'M2' },\r\n        { value: '600', label: 'M3' },\r\n        { value: '700', label: 'H1' },\r\n\t\t    { value: '800', label: 'H2' },\r\n        { value: '900', label: 'H3' }\r\n      ],\r\n      isEdit: false,\r\n      callAgainMaxNumData: [],\r\n      stepTypeData: [\r\n        // 'shell', 'python', 'python3', 'perl', 'http_get', 'http_post', 'java', 'cmd'\r\n        'SQL', 'JAVA', 'HTTP_POST', 'HTTP_GET', 'HTTP_DELETE', 'HTTP_PUT', 'HTTP_HEAD', 'CMD', 'SHELL',\r\n        'PYTHON', 'PYTHON3', 'PERL'\r\n      ],\r\n      stepTypeList: [\r\n        { key: 'SQL', imgUrl: 'SQL' },\r\n        { key: 'JAVA', imgUrl: 'JAVA' },\r\n        { key: 'HTTP_POST', imgUrl: 'POST' }\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' }\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' },\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList2: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        { key: 'HTTP_PUT', imgUrl: 'PUT' }\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' }\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList3: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        { key: 'CMD', imgUrl: 'CMD' },\r\n        { key: 'SHELL', imgUrl: 'SHELL' }\r\n        // { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        // { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        // { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      stepTypeList4: [\r\n        // { key: 'SQL', imgUrl: 'SQL' },\r\n        // { key: 'JAVA', imgUrl: 'JAVA' },\r\n        // { key: 'HTTP_POST', imgUrl: 'POST' },\r\n        // { key: 'HTTP_GET', imgUrl: 'GET' },\r\n        // { key: 'HTTP_DELETE', imgUrl: 'DELETE' },\r\n        // { key: 'HTTP_PUT', imgUrl: 'PUT' },\r\n        // { key: 'HTTP_HEAD', imgUrl: 'HEAD' },\r\n        // { key: 'CMD', imgUrl: 'CMD' },\r\n        // { key: 'SHELL', imgUrl: 'SHELL' },\r\n        { key: 'PYTHON', imgUrl: 'PYTHON2' },\r\n        { key: 'PYTHON3', imgUrl: 'PYTHON3' },\r\n        { key: 'PERL', imgUrl: 'PERL' }\r\n      ],\r\n      lastStatusData: [\r\n        // Ready Done Runing Failed Pending Dispatcher\r\n        { label: 'Ready', value: 'Ready' },\r\n        { label: 'Done', value: 'Done' },\r\n        { label: 'Runing', value: 'Runing' },\r\n        { label: 'Failed', value: 'Failed' },\r\n        { label: 'Pending', value: 'Pending' },\r\n        { label: 'Dispatcher', value: 'Dispatcher' }\r\n      ],\r\n      taskStatusData: [\r\n        // 1->新增；2->变更；3->下线；4->上线完成',\r\n        { label: '新增', value: 1 },\r\n        { label: '变更', value: 2 },\r\n        { label: '下线', value: 3 },\r\n        { label: '上线完成', value: 4 }\r\n      ],\r\n      depJobRuler: {\r\n        depPlatform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depSystem: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depJob: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depBatch: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      formRule: {\r\n        streamType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        platform: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        systems: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        job: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        // jobName: [{\r\n        //   required: true,\r\n        //   message: '请输入数据！'\r\n        // }],\r\n        jobType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        lastStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        taskStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        multiBatch: [{\r\n          validator: checkMultiBatch,\r\n          trigger: 'blur'\r\n        }],\r\n        timeWindow: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        virtualEnable: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        priority: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        callAgainMaxNum: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        callAgainWaitSec: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkFrequency: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkTimeTrigger: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        checkStreamSelf: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        depJob: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobStep: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        jobFrequency: [{\r\n          validator: checkCron,\r\n          trigger: 'blur'\r\n        }],\r\n        offsetDay: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        ignoreError: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      jobStepDrawerRecord: {},\r\n      filePath: '',\r\n      filePathPre: ''\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.initFlag = 1\r\n        this.isEdit = true\r\n        let params = { platform: this.transData.row.platform, systems: this.transData.row.systems, job: this.transData.row.job, version: this.transData.row.version }\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/loadByJobName/',\r\n          params: params\r\n        }\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            this.formBean = Object.assign({}, resp.data)\r\n            let timeWindow = this.formBean.timeWindow\r\n            if (timeWindow) {\r\n              this.formBean.timeWindow = timeWindow.split('-')\r\n              this.formBean.checkFrequency = this.formBean.checkFrequency ? 1 : 0\r\n              this.formBean.checkStreamSelf = this.formBean.checkStreamSelf ? 1 : 0\r\n              this.formBean.checkTimeTrigger = this.formBean.checkTimeTrigger ? 1 : 0\r\n              this.formBean.ignoreError = this.formBean.ignoreError ? 1 : 0\r\n              this.formBean.virtualEnable = this.formBean.virtualEnable ? 1 : 0\r\n            }\r\n            if (this.formBean.depJob) {\r\n              let arr = this.formBean.depJob.split(',')\r\n              arr.forEach(e => {\r\n                let tmp = {\r\n                  depPlatform: e.split('@')[0],\r\n                  depSystem: e.split('@')[1],\r\n                  depJob: e.split('@')[2],\r\n                  depBatch: e.split('@')[3]\r\n                }\r\n                this.depJobList.push(tmp)\r\n              })\r\n            }\r\n            if (this.formBean.jobStep) {\r\n              let arr = this.formBean.jobStep.split(',')\r\n              arr.forEach(e => {\r\n                // 4@python3@null@$AUTO_HOME/APP/BDP/ADM/BDP_ADM_DTR_DAILY_RPT/bin/bdp_adm_dtr_daily_rpt0400.py@1 2\r\n                // stepNum@operCmd@stepType@scriptPath@parameter@environments\r\n                let tmp = {\r\n                  stepNum: e.split('@')[0],\r\n                  operCmd: e.split('@')[1],\r\n                  stepType: e.split('@')[2],\r\n                  scriptPath: e.split('@')[3],\r\n                  parameter: e.split('@')[4],\r\n                  environments: e.split('@')[5]\r\n                }\r\n                this.jobStepList.push(tmp)\r\n              })\r\n            }\r\n          })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.queryCodeType()\r\n      // this.queryNoticeObj()\r\n      this.queryPlatform()\r\n      this.queryJobType()\r\n      this.genCallAgainMaxNumData()\r\n      // this.queryServerityType()\r\n      // this.queryAlarmType()\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n        this.$set(this.formBean, 'lastStatus', 'Done')\r\n        this.$set(this.formBean, 'taskStatus', 1)\r\n        this.$set(this.formBean, 'callAgainMaxNum', 0)\r\n        this.$set(this.formBean, 'timeWindow', ['00:00', '23:59'])\r\n        this.$set(this.formBean, 'offsetDay', 0)\r\n        this.$set(this.formBean, 'callAgainWaitSec', 120)\r\n        this.$set(this.formBean, 'streamType', '4')\r\n        this.$set(this.formBean, 'virtualEnable', 0)\r\n        this.$set(this.formBean, 'multiBatch', 0)\r\n        this.$set(this.formBean, 'checkStreamSelf', 0)\r\n        this.$set(this.formBean, 'ignoreError', 0)\r\n        this.$set(this.formBean, 'jobDate', new Date())\r\n        this.$set(this.formBean, 'priority', '500')\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    querySystem () {\r\n      this.systemsData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemsData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryDepSystem () {\r\n      this.depSystemsData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.depJobDrawer.data.depPlatform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.depJobDrawer.data.depPlatform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.depSystemsData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryDepJob () {\r\n      this.depJobData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.depJobDrawer.data.depPlatform && this.depJobDrawer.data.depSystem) {\r\n        let params = {}\r\n        params.platform = this.depJobDrawer.data.depPlatform\r\n        params.systems = this.depJobDrawer.data.depSystem\r\n        let loadConfig = {\r\n          method: 'GET',\r\n          url: '/udsJob/selectJobList',\r\n          params: params\r\n        }\r\n\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              resp.data.forEach(e => {\r\n                let tmp = {}\r\n                tmp.value = e.job\r\n                tmp.label = e.job\r\n                this.depJobData.push(tmp)\r\n              })\r\n            }\r\n          })\r\n      }\r\n    },\r\n    uploadStepShow (item, index) {\r\n      this.jobStepDrawerRecord = item\r\n      let path = this.jobStepDrawerRecord.scriptPath\r\n      if (path) {\r\n        let index = path.lastIndexOf(':////')\r\n        this.filePathPre = path.substring(0, index + 4)\r\n        this.filePath = path.substring(index + 4, path.length)\r\n        if (path.indexOf('local:///') != -1) {\r\n          this.radioData = 'local'\r\n        } else if (path.indexOf('nas:///') != -1) {\r\n          this.radioData = 'nas'\r\n        } else if (path.indexOf('aws:///') != -1) {\r\n          this.radioData = 'aws'\r\n        } else if (path.indexOf('spdb:///') != -1) {\r\n          this.radioData = 'rpc'\r\n        }\r\n      } else {\r\n        this.filePathPre = 'local:///'\r\n        this.radioData = 'local'\r\n      }\r\n      this.jobStepDrawer.uploadShow = true\r\n    },\r\n    changeStreamType () {\r\n      if (this.formBean.streamType === '2') {\r\n        this.$set(this.formBean, 'checkStreamSelf', 1)\r\n      } else {\r\n        this.$set(this.formBean, 'checkStreamSelf', 0)\r\n      }\r\n      // 作业出发类型如果是信号出发，是否启用stream file触发默认为采用，否则为不采用，这个不可选\r\n      // 检测是否采用时间触发在定时作业时默认为采用，否则为不采用，不可选\r\n    },\r\n    changeJobType () {\r\n      if (this.formBean.jobType === 'C') {\r\n        this.$set(this.formBean, 'checkTimeTrigger', 1)\r\n      } else {\r\n        this.$set(this.formBean, 'checkTimeTrigger', 0)\r\n      }\r\n    },\r\n    jobStepConfig () {\r\n      if (this.transData.row && this.transData.row.id) {\r\n        this.depJobDrawer.data.depBatch = 0\r\n        this.jobStepDrawer.data.list = []\r\n        this.jobStepList.sort(utils.compare('index')).map(item => {\r\n          this.jobStepDrawer.data.list.push(Object.assign(item, { status: 1 }))\r\n        })\r\n      }\r\n      this.jobStepDrawer.show = true\r\n    },\r\n    handleAdd (fileType) {\r\n      if (this.jobStepDrawer.data.list && this.jobStepDrawer.data.list.length > 8) {\r\n        return this.$Message.warning('当前作业脚本配置数量已达最大值')\r\n      }\r\n      this.jobStepDrawer.data.list.push({\r\n        operCmd: fileType,\r\n        parameter: '',\r\n        environments: '',\r\n        status: 1\r\n      })\r\n      this.fileType = fileType\r\n    },\r\n    saveJobStep () {\r\n      let list = this.jobStepDrawer.data.list\r\n      this.jobStepList = []\r\n      if (list && list.length > 0) {\r\n        list.forEach((e, index) => {\r\n          let tmp = {\r\n            operCmd: e.operCmd,\r\n            stepNum: index + 1,\r\n            stepType: e.stepType,\r\n            environments: e.environments,\r\n            parameter: e.parameter,\r\n            scriptPath: e.scriptPath\r\n          }\r\n          this.jobStepList.push(tmp)\r\n        })\r\n      }\r\n      let tmparr = []\r\n      if (this.jobStepList && this.jobStepList.length > 0) {\r\n        this.jobStepList.forEach(e => {\r\n        // 平台@应用@作业@批次\r\n          tmparr.push(e.stepNum + '@' + e.operCmd + '@' + e.stepType + '@' + e.scriptPath + '@' + e.parameter + '@' + e.environments)\r\n        })\r\n        this.formBean.jobStep = tmparr.join(',')\r\n      }\r\n      this.jobStepDrawer.show = false\r\n    },\r\n    handleRemove (index) {\r\n      this.jobStepDrawer.data.list[index].status = 0\r\n      this.jobStepDrawer.data.list.splice(index, 1)\r\n    },\r\n    parameterShow (item, index) {\r\n      if (item.parameter && item.parameter.length > 0) {\r\n        this.jobStepDrawer.parameter.list = []\r\n        item.parameter.split(' ').forEach(e => {\r\n          let tmp = {\r\n            parameter: e,\r\n            status: 1,\r\n            placeholder: '${参数}'\r\n          }\r\n          this.jobStepDrawer.parameter.list.push(tmp)\r\n        })\r\n      }\r\n      this.currentIndex = index\r\n      this.jobStepDrawer.parameterShow = true\r\n    },\r\n    parameterOk () {\r\n      let list = this.jobStepDrawer.parameter.list\r\n      let str = ''\r\n      if (list && list.length > 0) {\r\n        list.forEach(e => {\r\n          str = str + ' ' + e.parameter\r\n        })\r\n      }\r\n      this.jobStepDrawer.data.list[this.currentIndex].parameter = str.trim()\r\n      this.jobStepDrawer.parameterShow = false\r\n    },\r\n    parameterAdd () {\r\n      this.jobStepDrawer.parameter.list.push({\r\n        placeholder: '${参数}',\r\n        parameter: '',\r\n        status: 1\r\n      })\r\n    },\r\n    parameterRemove (index) {\r\n      this.jobStepDrawer.parameter.list[index].status = 0\r\n      this.jobStepDrawer.parameter.list.splice(index, 1)\r\n    },\r\n    envShow (item, index) {\r\n      item.environments = 'Password=?;name=?'\r\n      if (item.environments) {\r\n        this.jobStepDrawer.env.list = []\r\n        item.environments.split(';').forEach(e => {\r\n          let tmp = {\r\n            environments: e,\r\n            status: 1,\r\n            placeholder: '${参数}'\r\n          }\r\n          this.jobStepDrawer.env.list.push(tmp)\r\n        })\r\n      }\r\n      this.currentIndex = index\r\n      this.jobStepDrawer.envShow = true\r\n    },\r\n    envOk () {\r\n      let list = this.jobStepDrawer.env.list\r\n      let str = ''\r\n      if (list && list.length > 0) {\r\n        list.forEach(e => {\r\n          str = str + ';' + e.environments\r\n        })\r\n      }\r\n      this.jobStepDrawer.data.list[this.currentIndex].environments = str.trim().replace(/^;/, '')\r\n      this.jobStepDrawer.envShow = false\r\n    },\r\n    envAdd () {\r\n      this.jobStepDrawer.env.list.push({\r\n        environments: '',\r\n        placeholder: 'key=value;key=value',\r\n        status: 1\r\n      })\r\n    },\r\n    envRemove (index) {\r\n      this.jobStepDrawer.env.list[index].status = 0\r\n      this.jobStepDrawer.env.list.splice(index, 1)\r\n    },\r\n    depJobConfig () {\r\n      this.$set(this.depJobDrawer.data, 'depBatch', 0)\r\n      this.depJobDrawer.show = true\r\n    },\r\n    addDepJob () {\r\n      this.$refs.depJobDrawerForm.validate(valid => {\r\n        if (!valid) return\r\n        let tmp = Object.assign({}, this.depJobDrawer.data)\r\n        let params = { platform: tmp.depPlatform, systems: tmp.depSystem, job: tmp.depJob }\r\n        if (this.depJobList && this.depJobList.length > 0) {\r\n          try {\r\n            this.depJobList.forEach(e => {\r\n              if (JSON.stringify(e) === JSON.stringify(tmp)) {\r\n                this.$Message.warning('请勿重复添加！')\r\n                throw new Error('repeatAddError')\r\n              }\r\n            })\r\n            this.jobSearch(params, tmp)\r\n          } catch (e) {\r\n            if (e.message !== 'repeatAddError') throw e\r\n          }\r\n        } else {\r\n          this.jobSearch(params, tmp)\r\n        }\r\n      })\r\n    },\r\n    jobSearch (params, tmp) {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/jobSearch',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (resp.data && resp.data.length > 0) {\r\n              this.depJobList.push(tmp)\r\n            } else {\r\n              this.$Message.warning('当前作业不存！')\r\n            }\r\n          }\r\n        })\r\n    },\r\n    removeDepJob (index) {\r\n      this.depJobList.splice(index, 1)\r\n    },\r\n    saveDepJob () {\r\n      // this.depJobList = []\r\n      let tmparr = []\r\n      if (this.depJobList && this.depJobList.length > 0) {\r\n        this.depJobList.forEach(e => {\r\n        // 平台@应用@作业@批次\r\n          tmparr.push(e.depPlatform + '@' + e.depSystem + '@' + e.depJob + '@' + e.depBatch)\r\n        })\r\n        this.formBean.depJob = tmparr.join(',')\r\n      }\r\n      this.depJobDrawer.show = false\r\n    },\r\n    addjobDep () {\r\n\r\n    },\r\n    handleUpload: function (file) {\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    importExcel () {\r\n      var formData = new FormData()\r\n      formData.append('fileType', this.fileType)\r\n      formData.append('platform', this.formBean.platform)\r\n      formData.append('systems', this.formBean.systems)\r\n      formData.append('job', this.formBean.job)\r\n      formData.append('version', this.transData.row.version)\r\n      this.jobStepDrawerRecord.scriptPath = this.filePathPre + this.filePath\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入Excel')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        // formData.authps = systems\r\n        // String fileType, String platform, String systems, String job\r\n        // return\r\n        this.loadingStatus = true\r\n        this.$ajax.post('/jobattributes/upload', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            this.files = []\r\n            this.jobStepDrawer.uploadShow = false\r\n          })\r\n      }\r\n      // })\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmConfigForm.validate(valid => {\r\n        if (!valid) return\r\n        let params = {}\r\n        let tmpObj = Object.assign(this.formBean)\r\n        if (tmpObj.timeWindow) {\r\n          tmpObj.timeWindow = tmpObj.timeWindow.join('-')\r\n        }\r\n        if (tmpObj.jobDate) {\r\n          tmpObj.jobDate = utils.fmtDate(this.formBean.jobDate, 'yyyy-MM-dd')\r\n        }\r\n        debugger\r\n        params.dyJobAttributes = JSON.stringify(tmpObj)\r\n        params.jobStepList = JSON.stringify(this.jobStepList)\r\n        params.depJobList = JSON.stringify(this.depJobList)\r\n        // let dyJobAttributes = {\r\n        //   callAgainMaxNum: 3,\r\n        //   callAgainWaitSec: 2,\r\n        //   checkFrequency: 0,\r\n        //   checkStreamSelf: 1,\r\n        //   checkTimeTrigger: 1,\r\n        //   ignoreError: 1,\r\n        //   job: 'BDP_ADM_DTR_DAILY_RPT',\r\n        //   jobDate: '2022-04-28',\r\n        //   jobFrequency: '1',\r\n        //   jobName: 'test',\r\n        //   jobType: 'D',\r\n        //   offsetDay: 1,\r\n        //   platform: 'BDP',\r\n        //   priority: '1',\r\n        //   sysytems: 'ADM',\r\n        //   stakStatus: 1,\r\n        //   timeWindow: '00:00-23:59',\r\n        //   virtualEnable: 1\r\n\r\n        // }\r\n        // let depJobList = [\r\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 2 },\r\n        //   { depPlatform: 'A', depSystems: 'A', depJob: 'A_A_A', depBatch: 1 }\r\n        // ]\r\n        // let jobStepList = [\r\n        //   {\r\n        //     environments: 'Password=?;name=?',\r\n        //     parameter: ' ${platform} ${systems} ${job} ${job_date} ${batch}',\r\n        //     stepNum: '1',\r\n        //     stepType: 'shell'\r\n        //   }\r\n        // ]\r\n        // params.dyJobAttributes = JSON.stringify(dyJobAttributes)\r\n        // params.jobStepList = JSON.stringify(jobStepList)\r\n        // params.depJobList = JSON.stringify(depJobList)\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n        httpConfig.contentType = 'json'\r\n        if (this.transData.row.id) {\r\n          httpConfig.method = 'PUT'\r\n          httpConfig.data.id = tmpObj.id\r\n          httpConfig.url = RESOURCE_PATH + '/update'\r\n        } else {\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/add'\r\n        }\r\n        // return\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    genCallAgainMaxNumData () {\r\n      this.callAgainMaxNumData = []\r\n      for (let i = 0; i < 11; i++) {\r\n        let tmp = { label: i, value: i }\r\n        this.callAgainMaxNumData.push(tmp)\r\n      }\r\n    },\r\n    queryJobType () {\r\n      this.jobTypeData = [\r\n        { value: 'D', label: '每天执行' },\r\n        { value: 'W', label: '每周执行' },\r\n        { value: 'M', label: '每月执行' },\r\n        { value: 'C', label: '定时执行' }\r\n      ]\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      if (!this.transData.id) {\r\n        this.$router.push({ path: '/workflow/workflowmanage' })\r\n      } else {\r\n        let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n        this.$emit('switch', Object.assign({}, queryCache))\r\n      }\r\n    },\r\n\r\n    checkRadio () {\r\n      this.isShow = true\r\n      if (this.radioData === 'local') {\r\n        this.filePathPre = 'local:///'\r\n      } else if (this.radioData === 'nas') {\r\n        this.filePathPre = 'nas:///'\r\n      } else if (this.radioData === 'aws') {\r\n        this.filePathPre = 'aws:///'\r\n      } else if (this.radioData === 'rpc') {\r\n        this.filePathPre = 'spdb:///'\r\n      } else if (this.radioData === 'scp') {\r\n        this.filePathPre = 'scp:///'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  watch: {\r\n    'formBean.jobType': function (e) {\r\n      this.disJobFrequency = false\r\n      if (this.formBean.jobType === 'D') {\r\n        this.disJobFrequency = true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n  .drawer-calss .ivu-drawer-wrap  {\r\n      z-index: 3000 !important\r\n  }\r\n  .drawer-calss .ivu-drawer-mask {\r\n      z-index: 3000 !important\r\n  }\r\n  .drawer-footer{\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    text-align: right;\r\n    background: #fff;\r\n  }\r\n  .jobsetp-title{\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    color: #495060;\r\n    text-align: center;\r\n  }\r\n  .jobsetp-tag .ivu-tag{\r\n    font-size: 14px;\r\n    margin-top: 10%;\r\n    margin-left: 10%;\r\n    /* align-items: center; */\r\n  }\r\n  .work-flow .ivu-form-item-error-tip {\r\n    white-space: nowrap;\r\n  }\r\n</style>\r\n"]}]}