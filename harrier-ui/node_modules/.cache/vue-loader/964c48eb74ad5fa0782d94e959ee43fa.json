{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\alarmsendqueue\\Form.vue","mtime":1681468306502},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nconst RESOURCE_PATH = '/alarm/send'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      alarmTypeData: [],\r\n      codeTypeData: [],\r\n      serverityTypeData: [],\r\n      jobTypeData: [],\r\n      noticeObjData: [],\r\n      model1: [],\r\n      isEdit: false,\r\n      noticeTypeData: [{ label: '邮件', value: 'email' }],\r\n\r\n      formRule: {\r\n        alarmId: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        groupName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendParams: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        title: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        content: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        filePath: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n       \r\n        expcetion: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        remark: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      console.log('11',this.transData.row)\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.formBean = Object.assign({}, this.transData.row)\r\n        // this.isEdit = true\r\n        // let loadConfig = {\r\n        //   method: 'GET',\r\n        //   url: RESOURCE_PATH + '/' + this.transData.id\r\n        // }\r\n        // this.$ajax(loadConfig)\r\n        //   .then(resp => {\r\n        //     this.formBean = resp.data\r\n        //     this.model1 = this.formBean.noticeObj.split(',')\r\n        //   })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.queryCodeType()\r\n      this.queryPlatform()\r\n      // this.queryNoticeObj()\r\n      // this.queryJobType()\r\n      // this.queryServerityType()\r\n      // this.queryAlarmType()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 格式化时间\r\n     **/\r\n    dateFormat (fmt, date) {\r\n      let ret\r\n      const opt = {\r\n        'Y+': date.getFullYear().toString(), // 年\r\n        'm+': (date.getMonth() + 1).toString(), // 月\r\n        'd+': date.getDate().toString(), // 日\r\n        'H+': date.getHours().toString(), // 时\r\n        'M+': date.getMinutes().toString(), // 分\r\n        'S+': date.getSeconds().toString() // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n      }\r\n      for (let k in opt) {\r\n        ret = new RegExp('(' + k + ')').exec(fmt)\r\n        if (ret) {\r\n          fmt = fmt.replace(\r\n            ret[1],\r\n            ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, '0')\r\n          )\r\n        }\r\n      }\r\n      return fmt\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmUserGroupForm.validate(valid => {\r\n        if (!valid) return\r\n        let str = this.model1\r\n        // if(''==this.model1){\r\n        // this.$Message.error('未填写通知对象');\r\n        // return;\r\n        // }\r\n        this.formBean.noticeObj = str.join()\r\n        let params = {}\r\n        //params.authps = this.formBean.code + '*'\r\n        this.formBean.sendTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.sendTime)\r\n        //this.formBean.createTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.createTime)\r\n        Object.assign(params, this.formBean)\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n          console.log('httpConfig',httpConfig)\r\n        if (this.transData.row) {\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/update' \r\n        } else {\r\n          httpConfig.url = RESOURCE_PATH + '/add' \r\n          httpConfig.method = 'PUT'\r\n        }\r\n        console.log('httpConfig111',httpConfig)\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n        // params: { systems: '*' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // resp.data.forEach(data => {\r\n          //   let tmp = {}\r\n          //   tmp.value = data\r\n          //   tmp.label = data\r\n          //   this.platformData.push(tmp)\r\n          // })\r\n          console.log(resp)\r\n          // this.platformData = resp.data\r\n        })\r\n    },\r\n    queryAlarmType () {\r\n      this.alarmTypeData = []\r\n      let params = { dictcode: 'm_alarm_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.alarmTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryServerityType () {\r\n      this.serverityTypeData = []\r\n      let params = { dictcode: 'm_alarm_level' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.serverityTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryJobType () {\r\n      this.jobTypeData = []\r\n      let params = { dictcode: 'm_alarm_bus_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.jobTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryNoticeObj () {\r\n      this.noticeObjData = []\r\n      let params = { dictcode: 'm_alarm_not' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.noticeObjData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryCodeType () {\r\n      this.codeTypeData = []\r\n      let params = { dictcode: 'm_alarm_code' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.codeTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n      } else if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n\r\n      let backParam = { id: this.transData.id, statusName: 'emailTable', prevTab: prevTab, curTab: 'emailForm' }\r\n\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";AAufile":"Form.vue","sourceRoot":"src/view/app/alarm/alarmsendqueue","sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"alarmUserGroupForm\" :model=\"formBean\" :label-width=\"100\" :rules=\"formRule\">\r\n    \r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"alarmId\" label=\"告警码\">\r\n            <Input v-model=\"formBean.alarmId\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"groupName\" label=\"联系组\">\r\n            <Input v-model=\"formBean.groupName\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendStatus\" label=\"发送状态\">\r\n            <Input v-model=\"formBean.sendStatus\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendType\" label=\"发送类型\">\r\n            <Input v-model=\"formBean.sendType\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendParams\" label=\"发送参数\">\r\n            <Input v-model=\"formBean.sendParams\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n \r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"title\" label=\"标题\">\r\n            <Input v-model=\"formBean.title\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"content\" label=\"发送内容\">\r\n            <Input v-model=\"formBean.content\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"filePath\" label=\"附件路径\">\r\n            <Input v-model=\"formBean.filePath\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"sendTime\" label=\"发送时间\">\r\n         \r\n              <DatePicker v-model=\"formBean.sendTime\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择发送时间\" style=\"width: 200px\"></DatePicker>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n       <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"expcetion\" label=\"发送异常\">\r\n            <Input v-model=\"formBean.expcetion\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <FormItem prop=\"remark\" label=\"备注\">\r\n            <Input v-model=\"formBean.remark\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n \r\n    </Form>\r\n\r\n    <div>\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst RESOURCE_PATH = '/alarm/send'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      platformData: [],\r\n      alarmTypeData: [],\r\n      codeTypeData: [],\r\n      serverityTypeData: [],\r\n      jobTypeData: [],\r\n      noticeObjData: [],\r\n      model1: [],\r\n      isEdit: false,\r\n      noticeTypeData: [{ label: '邮件', value: 'email' }],\r\n\r\n      formRule: {\r\n        alarmId: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        groupName: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        sendParams: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        title: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        content: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        filePath: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n       \r\n        expcetion: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        remark: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      console.log('11',this.transData.row)\r\n      if (this.transData.row) { // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        this.formBean = Object.assign({}, this.transData.row)\r\n        // this.isEdit = true\r\n        // let loadConfig = {\r\n        //   method: 'GET',\r\n        //   url: RESOURCE_PATH + '/' + this.transData.id\r\n        // }\r\n        // this.$ajax(loadConfig)\r\n        //   .then(resp => {\r\n        //     this.formBean = resp.data\r\n        //     this.model1 = this.formBean.noticeObj.split(',')\r\n        //   })\r\n      } else {\r\n        this.bindData()\r\n      }\r\n      // this.queryCodeType()\r\n      this.queryPlatform()\r\n      // this.queryNoticeObj()\r\n      // this.queryJobType()\r\n      // this.queryServerityType()\r\n      // this.queryAlarmType()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 格式化时间\r\n     **/\r\n    dateFormat (fmt, date) {\r\n      let ret\r\n      const opt = {\r\n        'Y+': date.getFullYear().toString(), // 年\r\n        'm+': (date.getMonth() + 1).toString(), // 月\r\n        'd+': date.getDate().toString(), // 日\r\n        'H+': date.getHours().toString(), // 时\r\n        'M+': date.getMinutes().toString(), // 分\r\n        'S+': date.getSeconds().toString() // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n      }\r\n      for (let k in opt) {\r\n        ret = new RegExp('(' + k + ')').exec(fmt)\r\n        if (ret) {\r\n          fmt = fmt.replace(\r\n            ret[1],\r\n            ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, '0')\r\n          )\r\n        }\r\n      }\r\n      return fmt\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save () {\r\n      this.$refs.alarmUserGroupForm.validate(valid => {\r\n        if (!valid) return\r\n        let str = this.model1\r\n        // if(''==this.model1){\r\n        // this.$Message.error('未填写通知对象');\r\n        // return;\r\n        // }\r\n        this.formBean.noticeObj = str.join()\r\n        let params = {}\r\n        //params.authps = this.formBean.code + '*'\r\n        this.formBean.sendTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.sendTime)\r\n        //this.formBean.createTime = this.dateFormat('YYYY-mm-dd HH:MM:SS', this.formBean.createTime)\r\n        Object.assign(params, this.formBean)\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        }\r\n          console.log('httpConfig',httpConfig)\r\n        if (this.transData.row) {\r\n          httpConfig.method = 'POST'\r\n          httpConfig.url = RESOURCE_PATH + '/update' \r\n        } else {\r\n          httpConfig.url = RESOURCE_PATH + '/add' \r\n          httpConfig.method = 'PUT'\r\n        }\r\n        console.log('httpConfig111',httpConfig)\r\n        this.loading = true\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n        // params: { systems: '*' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // resp.data.forEach(data => {\r\n          //   let tmp = {}\r\n          //   tmp.value = data\r\n          //   tmp.label = data\r\n          //   this.platformData.push(tmp)\r\n          // })\r\n          console.log(resp)\r\n          // this.platformData = resp.data\r\n        })\r\n    },\r\n    queryAlarmType () {\r\n      this.alarmTypeData = []\r\n      let params = { dictcode: 'm_alarm_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.alarmTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryServerityType () {\r\n      this.serverityTypeData = []\r\n      let params = { dictcode: 'm_alarm_level' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.serverityTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryJobType () {\r\n      this.jobTypeData = []\r\n      let params = { dictcode: 'm_alarm_bus_type' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.jobTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryNoticeObj () {\r\n      this.noticeObjData = []\r\n      let params = { dictcode: 'm_alarm_not' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.noticeObjData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    queryCodeType () {\r\n      this.codeTypeData = []\r\n      let params = { dictcode: 'm_alarm_code' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'file/loadList',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicName\r\n              temp.value = data1.dicValue\r\n              temp.label = data1.dicName\r\n              this.codeTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n      } else if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n\r\n      let backParam = { id: this.transData.id, statusName: 'emailTable', prevTab: prevTab, curTab: 'emailForm' }\r\n\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}