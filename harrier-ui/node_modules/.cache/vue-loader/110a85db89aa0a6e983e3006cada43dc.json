{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\s-tree-table\\table-body.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\components\\s-tree-table\\table-body.vue","mtime":1681468306479},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n// todo :key=\"row\"\r\nimport TableTr from \"./table-tr.vue\";\r\nimport Cell from \"./cell.vue\";\r\nimport Expand from \"./expand.js\";\r\nimport Mixin from \"./mixin\";\r\n\r\nexport default {\r\n  name: \"TableBody\",\r\n  mixins: [Mixin],\r\n  components: { Cell, Expand, TableTr },\r\n  props: {\r\n    prefixCls: String,\r\n    styleObject: Object,\r\n    columns: Array,\r\n    data: Array, // rebuildData\r\n    objData: Object,\r\n    columnsWidth: Object,\r\n    fixed: {\r\n      type: [Boolean, String],\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    expandRender() {\r\n      let render = function() {\r\n        return \"\";\r\n      };\r\n      for (let i = 0; i < this.columns.length; i++) {\r\n        const column = this.columns[i];\r\n        if (column.type && column.type === \"expand\") {\r\n          if (column.render) render = column.render;\r\n        }\r\n      }\r\n      return render;\r\n    },\r\n  },\r\n  methods: {\r\n    rowParentLevel(_index) {\r\n      let i = 0;\r\n      let row = this.objData[_index];\r\n      while (row.hasOwnProperty(\"parent\")) {\r\n        i++;\r\n        row = row.parent;\r\n      }\r\n      return i;\r\n    },\r\n    rowChecked(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isChecked;\r\n    },\r\n    rowDisabled(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isDisabled;\r\n    },\r\n    rowExpanded(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isExpanded;\r\n    },\r\n    rowFolded(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isFolded;\r\n    },\r\n    handleMouseIn(_index) {\r\n      this.$parent.handleMouseIn(_index);\r\n    },\r\n    handleMouseOut(_index) {\r\n      this.$parent.handleMouseOut(_index);\r\n    },\r\n    clickCurrentRow(_index) {\r\n      this.$parent.clickCurrentRow(_index);\r\n    },\r\n    dblclickCurrentRow(_index) {\r\n      this.$parent.dblclickCurrentRow(_index);\r\n    },\r\n    childrenShow(_index) {\r\n      // debugger\r\n      this.data;\r\n      let row = this.objData[_index];\r\n      if (row.hasOwnProperty(\"parent\")) {\r\n        return !row.parent._isFolded;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    // 判断显示子级\r\n    addShow(_index){\r\n      let row = this.objData[_index];\r\n      // debugger\r\n      if(row.hasOwnProperty('children')){\r\n        return row.children.length == 0?false:true;\r\n      }else{\r\n        return false;\r\n      }      \r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["table-body.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"table-body.vue","sourceRoot":"src/components/s-tree-table","sourcesContent":["<template>\r\n    <table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" :style=\"styleObject\">\r\n        <colgroup>\r\n            <col v-for=\"(column, index) in columns\" :width=\"setCellWidth(column, index, false)\">\r\n        </colgroup>\r\n        <tbody :class=\"[prefixCls + '-tbody']\">\r\n            <template v-for=\"(row, index) in data\">\r\n                <table-tr v-if=\"childrenShow(row._index)\"\r\n                    :row=\"row\"\r\n                    :key=\"row._rowKey\"\r\n                    :prefix-cls=\"prefixCls\"\r\n                    @mouseenter.native.stop=\"handleMouseIn(row._index)\"\r\n                    @mouseleave.native.stop=\"handleMouseOut(row._index)\"\r\n                    @click.native=\"clickCurrentRow(row._index)\"\r\n                    @dblclick.native.stop=\"dblclickCurrentRow(row._index)\">\r\n                    <td v-for=\"column in columns\" :class=\"alignCls(column, row)\">\r\n                        <Cell\r\n                            :fixed=\"fixed\"\r\n                            :prefix-cls=\"prefixCls\"\r\n                            :row=\"row\"\r\n                            :key=\"column._columnKey\"\r\n                            :column=\"column\"\r\n                            :natural-index=\"index\"\r\n                            :index=\"row._index\"\r\n                            :checked=\"rowChecked(row._index)\"\r\n                            :disabled=\"rowDisabled(row._index)\"\r\n                            :expanded=\"rowExpanded(row._index)\"\r\n                            :folded=\"rowFolded(row._index)\"\r\n                            :parentlevel=\"rowParentLevel(row._index)\"\r\n                            :add-show=\"addShow(row._index)\"\r\n                        ></Cell>\r\n                    </td>\r\n                </table-tr>\r\n                <tr v-if=\"rowExpanded(row._index)\" :class=\"{[prefixCls + '-expanded-hidden']: fixed}\">\r\n                    <td :colspan=\"columns.length\" :class=\"prefixCls + '-expanded-cell'\">\r\n                        <Expand :key=\"row._rowKey\" :row=\"row\" :render=\"expandRender\" :index=\"row._index\"></Expand>\r\n                    </td>\r\n                </tr>\r\n            </template>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n<script>\r\n// todo :key=\"row\"\r\nimport TableTr from \"./table-tr.vue\";\r\nimport Cell from \"./cell.vue\";\r\nimport Expand from \"./expand.js\";\r\nimport Mixin from \"./mixin\";\r\n\r\nexport default {\r\n  name: \"TableBody\",\r\n  mixins: [Mixin],\r\n  components: { Cell, Expand, TableTr },\r\n  props: {\r\n    prefixCls: String,\r\n    styleObject: Object,\r\n    columns: Array,\r\n    data: Array, // rebuildData\r\n    objData: Object,\r\n    columnsWidth: Object,\r\n    fixed: {\r\n      type: [Boolean, String],\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    expandRender() {\r\n      let render = function() {\r\n        return \"\";\r\n      };\r\n      for (let i = 0; i < this.columns.length; i++) {\r\n        const column = this.columns[i];\r\n        if (column.type && column.type === \"expand\") {\r\n          if (column.render) render = column.render;\r\n        }\r\n      }\r\n      return render;\r\n    },\r\n  },\r\n  methods: {\r\n    rowParentLevel(_index) {\r\n      let i = 0;\r\n      let row = this.objData[_index];\r\n      while (row.hasOwnProperty(\"parent\")) {\r\n        i++;\r\n        row = row.parent;\r\n      }\r\n      return i;\r\n    },\r\n    rowChecked(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isChecked;\r\n    },\r\n    rowDisabled(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isDisabled;\r\n    },\r\n    rowExpanded(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isExpanded;\r\n    },\r\n    rowFolded(_index) {\r\n      return this.objData[_index] && this.objData[_index]._isFolded;\r\n    },\r\n    handleMouseIn(_index) {\r\n      this.$parent.handleMouseIn(_index);\r\n    },\r\n    handleMouseOut(_index) {\r\n      this.$parent.handleMouseOut(_index);\r\n    },\r\n    clickCurrentRow(_index) {\r\n      this.$parent.clickCurrentRow(_index);\r\n    },\r\n    dblclickCurrentRow(_index) {\r\n      this.$parent.dblclickCurrentRow(_index);\r\n    },\r\n    childrenShow(_index) {\r\n      // debugger\r\n      this.data;\r\n      let row = this.objData[_index];\r\n      if (row.hasOwnProperty(\"parent\")) {\r\n        return !row.parent._isFolded;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    // 判断显示子级\r\n    addShow(_index){\r\n      let row = this.objData[_index];\r\n      // debugger\r\n      if(row.hasOwnProperty('children')){\r\n        return row.children.length == 0?false:true;\r\n      }else{\r\n        return false;\r\n      }      \r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}