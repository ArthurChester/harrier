{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\jobimgs\\jobRate.vue?vue&type=style&index=0&id=4fed9c42&scoped=true&lang=css&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\jobimgs\\jobRate.vue","mtime":1681468306540},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.container {\n  color : rgb(3, 58, 240)\n}\n",{"version":3,"sources":["jobRate.vue"],"names":[],"mappings":";AAwNA;AACA;AACA","file":"jobRate.vue","sourceRoot":"src/view/spdb/job/jobList/jobimgs","sourcesContent":["<template>\r\n  <div id=\"JobRate\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      graph: '',\r\n      // option: {\r\n      //   title: {\r\n      //     text: '最近1月完成时间分布（次数）',\r\n      //     textStyle: {\r\n      //       fontSize: 18\r\n      //     },\r\n      //     x: 'center',\r\n      //     y: 'top',\r\n      //     textAlign: 'left'\r\n      //   },\r\n      //   grid: {\r\n      //     bottom: 20\r\n      //   },\r\n      //   tooltip: {\r\n      //     trigger: 'axis',\r\n      //     axisPointer: {\r\n      //       type: 'shadow'\r\n      //     }\r\n      //   },\r\n      //   lineStyle: {\r\n      //     width: 4\r\n      //   },\r\n      //   xAxis: {\r\n      //     data: ['0-6时', '6-8时', '8-10时', '10-12时', '12时后']\r\n      //     // data:MonthCompleteTimeArray\r\n      //   },\r\n      //   yAxis: {\r\n      //     splitLine: { show: false }\r\n      //   },\r\n      //   series: [\r\n      //     {\r\n      //       name: '完成次数',\r\n      //       type: 'bar',\r\n      //       barWidth: 20,\r\n      //       itemStyle: {\r\n      //         normal: {\r\n      //           barBorderRadius: 5,\r\n      //           color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n      //             { offset: 0, color: '#00b4ff' },\r\n      //             { offset: 1, color: '#000073' }\r\n      //             // { offset: 0, color: 'rgba(1, 10, 255, 0.4)' },\r\n      //             // { offset: 1, color: 'rgba(1, 10, 255, 0.7)' }\r\n      //           ])\r\n      //         }\r\n      //       },\r\n      //       data: [4, 5, 6, 7, 8, 9]\r\n      //       // data: MonthCompleteTimeValue,\r\n      //     }\r\n      //   ]\r\n      // },\r\n      jobstat: []\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      // this.graph = this.$echarts.init(document.getElementById('JobRate'))\r\n      // this.graph.setOption(this.option)\r\n    },\r\n\r\n    getData () {\r\n      let params = {}\r\n      let job = this.transData.job\r\n      let system = this.transData.system\r\n      let platform = this.transData.platform\r\n      params.job=job\r\n      params.platform=platform\r\n      params.system=system\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/jobimg/getRate',\r\n        params: params\r\n      }\r\n      let rateList = {}\r\n      this.$ajax(httpConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          rateList=resp.data\r\n          this.getRada(rateList)\r\n        }\r\n      })\r\n    },\r\n    getRada (rateList) {\r\n      this.$nextTick(function () {\r\n        // let distvalue = this.alarmDist\r\n        let arr=rateList\r\n        let distvalue = []//[7,6,8,10,1]\r\n        let indicator = [\r\n          { name: '血缘', max: 10 ,value: rateList.relation},\r\n          { name: '时效', max: 10 ,value: rateList.timeliness},\r\n          { name: '稳运', max: 10 ,value: rateList.steady},\r\n          { name: '效能', max: 10 ,value: rateList.efficiency},\r\n          { name: '影响', max: 10 ,value: rateList.influence},\r\n        ]\r\n        indicator.forEach(element => {\r\n          if(element.value){\r\n            distvalue.push(element.value)\r\n          }else{\r\n            distvalue.push(0)\r\n          }\r\n        })  \r\n        let i = 0\r\n        indicator.forEach(element => {\r\n          if (distvalue[i] > 10) {\r\n            indicator[i].max = distvalue[i]\r\n          }\r\n          i = i + 1\r\n        })\r\n        const right1 = {\r\n          tooltip: {\r\n            show: true,\r\n            trigger: 'item'\r\n          },\r\n          title: {\r\n            // text: '作业评分统计',\r\n            textAlign: 'auto',\r\n            x: 'center',\r\n            textStyle: {\r\n              color: '#516b91'\r\n              // fontSize:'20',\r\n            }\r\n          },\r\n          radar: {\r\n            center: ['50%', '50%'], // 偏移位置\r\n            radius: '65%',\r\n            startAngle: 90, // 起始角度\r\n            splitNumber: 4,\r\n            // shape: 'circle',\r\n            splitArea: {\r\n              areaStyle: {\r\n                // color: \"transparent\"\r\n              }\r\n            },\r\n            axisLabel: {\r\n              show: false,\r\n              fontSize: 10,\r\n              color: '#000',\r\n              fontStyle: 'normal',\r\n              fontWeight: 'normal'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#516b91'// #516b91 \"rgba(255, 255, 255, 1)\"\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                // color: 'rgba(84, 112, 200, 0.5)'515a6e\r\n                // color: 'rgba(255, 255, 255, 0.5)'\r\n              }\r\n            },\r\n            indicator: indicator\r\n          },\r\n          series: [\r\n            {\r\n              type: 'radar',\r\n              areaStyle: {\r\n                normal: {\r\n                  // color: 'rgba(245,166,35,0.4)'\r\n                  // color: 'rgba(84, 112, 200, 0.9)'\r\n                  color: 'rgba(129, 170, 232, 0.9)'\r\n                }\r\n              },\r\n              data: [\r\n                {\r\n                  value: distvalue,\r\n                  itemStyle: {\r\n                    normal: {\r\n                      color: '#5470c8',\r\n                      lineStyle: {\r\n                        // color: '#fff'\r\n                      }\r\n                    }\r\n                  },\r\n                  name: '作业评分分布'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n\r\n        let graph = this.$echarts.init(document.getElementById('JobRate'))\r\n        graph.setOption(right1)\r\n      })\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.init()\r\n    this.getData()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  .container {\r\n    color : rgb(3, 58, 240)\r\n  }\r\n</style>\r\n"]}]}