{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\jobWeight\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\jobWeight\\Table.vue","mtime":1681468306546},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\nimport common from '@/mixins/common'\r\nimport store from '@/store/index'\r\nimport SAuthButton from '_c/s-auth-button'\r\nconst RESOURCE_PATH = '/udsJobWeight'\r\n\r\nexport default {\r\n  components: {\r\n    SAuthButton\r\n  },\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      // JobData:[],\r\n      delLoding: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \talign: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center',\r\n          fixed: 'left'\r\n        },\r\n        {\r\n          title: '平台',\r\n          width: 100,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用',\r\n          width: 100,\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '类型',\r\n          width: 120,\r\n          key: 'limitType',\r\n          render: (h, params) => {\r\n            let limitType = params.row.limitType\r\n            let str = ''\r\n            this.limitTypeData.forEach(data1 => {\r\n              if (data1.value == limitType) {\r\n                str = data1.key\r\n              }\r\n            })\r\n            if (str == '') {\r\n              str = params.row.limitType\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        },\r\n        {\r\n          title: '配置的全值',\r\n          width: 120,\r\n          key: 'confValue'\r\n        },\r\n        {\r\n          title: '描述',\r\n          minWidth: 200,\r\n          key: 'desc'\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.id\r\n                    // this.$emit('switch', {id: id}) //提交form事件，在parent中显示form\r\n                    let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                    this.$emit('switch', Object.assign({}, { id: id }, queryCache)) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      importOp: {\r\n        show: false\r\n      },\r\n      files: [],\r\n      loading: false,\r\n      loadingStatus: false,\r\n      limitTypeData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.queryLimitType()\r\n      // this.queryPlatform()\r\n      // if (this.transData.statusName===\"weightTable\") {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    queryLimitType () {\r\n      this.limitTypeData = []\r\n      let params = { dicCode: 'limitType' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicValue\r\n              temp.value = parseInt(data1.dicKey)\r\n              temp.label = data1.dicValue\r\n              this.limitTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (params.job) {\r\n        params.job = '%' + params.job.trim().toUpperCase() + '%'\r\n      } else {\r\n        delete params.job\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          // this.gridData = resp.data.rows\r\n          // this.page.total = resp.data.total\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    getPlatformList () {\r\n      this.platformData = []\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    queryJob () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getJobList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // resp.data.forEach(data1 => {\r\n          // let tmp = {}\r\n          // tmp.value = data1\r\n          // tmp.label = data1\r\n          // this.JobData.push(tmp)\r\n          // })\r\n        })\r\n    },\r\n    excelDownload () {\r\n      let params = {}\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/template', params)\r\n    },\r\n    importOpen () {\r\n      this.importOp.show = true\r\n    },\r\n    closeImportOp () {\r\n      this.files = []\r\n      this.importOp.show = false\r\n      this.loadingStatus = false\r\n    },\r\n    handleRemove: function (file) {\r\n      this.files.splice(this.files.findIndex(e => e.name === file.name), 1)\r\n    },\r\n    handleUpload: function (file) {\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    \timportExcel () {\r\n      let systems = ''\r\n      let authSystems = store.getters.getSystems\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        for (let j = 0; j < authSystems.length; j++) {\r\n          if (authSystems[j].indexOf('*') != -1) {\r\n            systems = authSystems[j]\r\n          }\r\n        }\r\n      }\r\n      var formData = new FormData()\r\n      for (const key in this.formBean) {\r\n        formData.append(key, this.formBean[key])\r\n      }\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入Excel')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        formData.authps = systems\r\n        this.loadingStatus = true\r\n        this.$ajax.post(RESOURCE_PATH + '/import', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            // this.$Message.warning(resp.data.msg)\r\n            this.files = []\r\n            // this.$Message.info(\"成功\")\r\n            this.importOp.show = false\r\n            this.search()\r\n            this.queryPlatform()\r\n            // alert(resp.data.msg)\r\n          })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch', null)\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      this.delLoding = true\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/udsJobWeight/${ids}/delete`,\r\n        data: {}\r\n      }\r\n      this.$ajax(deleteConfig)\r\n        .then(resp => {\r\n          this.delLoding = false\r\n          this.search()\r\n        })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n    this.getPlatformList()\r\n    this.queryLimitType()\r\n  }\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappingsfile":"Table.vue","sourceRoot":"src/view/spdb/systemsetting/jobWeight","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div class=\"spdb-form\">\r\n\t\t\t<Form ref=\"udsjobweightForm\" :model=\"formBean\" :label-width=\"90\" :rules='ruleValidate'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem prop=\"platform\" label=\"平台名\">\r\n\t\t\t\t\t\t\t<Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n\t\t\t\t\t\t\t<Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"请先选平台\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"作业名\">\r\n\t\t\t\t\t\t\t <!-- <AutoComplete\r\n\t\t\t\t\t\t\t\tv-model=\"formBean.job\"\r\n\t\t\t\t\t\t\t\t@on-search=\"queryJob\"\r\n\t\t\t\t\t\t\t\t:transfer=true\r\n\t\t\t\t\t\t\t\tplaceholder=\"支持模糊查询\">\r\n\t\t\t\t\t\t\t </AutoComplete>\r\n\t\t\t\t\t\t\t <Option v-for=\"item in JobData\" :value=\"item\" :key=\"item\">{{ item }}</Option> -->\r\n\t\t\t\t\t\t\t<Input v-model=\"formBean.job\" placeholder=\"支持模糊查询\" clearable/>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"类型\">\r\n\t\t\t\t\t\t\t<Select v-model=\"formBean.limitType\" filterable  clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in limitTypeData\" :value=\"item.value\" :key=\"item.key\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<!-- <Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"配置的全值\">\r\n\t\t\t\t\t\t\t<Input v-model=\"formBean.confValue\" placeholder=\"请输入\" clearable/>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col> -->\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t\t<Modal id=\"importOp\" v-model=\"importOp.show\" title=\"选择文件\" width=\"50%\" :mask-closable=\"false\" :closable=\"false\" >\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<Form ref=\"importOpForm\" :label-width=\"100\" >\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span=\"16\">\r\n\t\t\t\t\t\t<FormItem label=\"导入文件名:\" style=\"cursor:pointer;\" >\r\n\t\t\t\t\t\t<Upload ref=\"importExcel\" name=\"files\" :before-upload=\"handleUpload\" action=\"\" >\r\n\t\t\t\t\t\t\t<Input style=\"width:400px;\" type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\"v-model=\"files.length === 0? '' : files[0].name\" placeholder=\"请选择文件\"/>\r\n\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t\t\t\t<Button icon=\"md-add\" type=\"primary\" @click=\"importExcel\" :loading=\"loadingStatus\" :disabled=\"loadingStatus\" >{{ loadingStatus ? \"Uploading\" : \"导入\" }}</Button>\r\n\t\t\t\t\t\t<Button icon=\"md-close\" type=\"primary\" @click=\"closeImportOp\" > 取消 </Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"demand\">查询</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add\">新增</Button>\r\n      <Button type=\"primary\" :loading=\"delLoding\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del\">删除</Button>\r\n\t\t\t<!-- <s-auth-button type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</s-auth-button>\r\n\t\t\t<s-auth-button type=\"primary\" icon=\"ios-trash-outline\" :loading=\"delLoding\" @click=\"del\" :requestConfig=request.delReq>删除</s-auth-button> -->\r\n\t\t\t<!-- <Button type=\"primary\" icon=\"md-download\" @click=\"download\">下载</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-cloud-download\" @click=\"excelDownload\">excel模板下载</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-cloud-upload\" @click=\"importOpen\">Excel导入</Button> -->\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table :loading=\"loading\" :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\">\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport common from '@/mixins/common'\r\nimport store from '@/store/index'\r\nimport SAuthButton from '_c/s-auth-button'\r\nconst RESOURCE_PATH = '/udsJobWeight'\r\n\r\nexport default {\r\n  components: {\r\n    SAuthButton\r\n  },\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      // JobData:[],\r\n      delLoding: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \talign: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center',\r\n          fixed: 'left'\r\n        },\r\n        {\r\n          title: '平台',\r\n          width: 100,\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用',\r\n          width: 100,\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '类型',\r\n          width: 120,\r\n          key: 'limitType',\r\n          render: (h, params) => {\r\n            let limitType = params.row.limitType\r\n            let str = ''\r\n            this.limitTypeData.forEach(data1 => {\r\n              if (data1.value == limitType) {\r\n                str = data1.key\r\n              }\r\n            })\r\n            if (str == '') {\r\n              str = params.row.limitType\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        },\r\n        {\r\n          title: '配置的全值',\r\n          width: 120,\r\n          key: 'confValue'\r\n        },\r\n        {\r\n          title: '描述',\r\n          minWidth: 200,\r\n          key: 'desc'\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 100,\r\n          fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.id\r\n                    // this.$emit('switch', {id: id}) //提交form事件，在parent中显示form\r\n                    let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                    this.$emit('switch', Object.assign({}, { id: id }, queryCache)) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      importOp: {\r\n        show: false\r\n      },\r\n      files: [],\r\n      loading: false,\r\n      loadingStatus: false,\r\n      limitTypeData: [],\r\n      selection: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      // this.queryLimitType()\r\n      // this.queryPlatform()\r\n      // if (this.transData.statusName===\"weightTable\") {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n         * 如果传过来的有初始数据则进行数据绑定\r\n         **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    queryLimitType () {\r\n      this.limitTypeData = []\r\n      let params = { dicCode: 'limitType' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicValue\r\n              temp.value = parseInt(data1.dicKey)\r\n              temp.label = data1.dicValue\r\n              this.limitTypeData.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      if (params.job) {\r\n        params.job = '%' + params.job.trim().toUpperCase() + '%'\r\n      } else {\r\n        delete params.job\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          // this.gridData = resp.data.rows\r\n          // this.page.total = resp.data.total\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n        })\r\n    },\r\n    getPlatformList () {\r\n      this.platformData = []\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    getSystemList () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.formBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    queryJob () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getJobList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          // resp.data.forEach(data1 => {\r\n          // let tmp = {}\r\n          // tmp.value = data1\r\n          // tmp.label = data1\r\n          // this.JobData.push(tmp)\r\n          // })\r\n        })\r\n    },\r\n    excelDownload () {\r\n      let params = {}\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/template', params)\r\n    },\r\n    importOpen () {\r\n      this.importOp.show = true\r\n    },\r\n    closeImportOp () {\r\n      this.files = []\r\n      this.importOp.show = false\r\n      this.loadingStatus = false\r\n    },\r\n    handleRemove: function (file) {\r\n      this.files.splice(this.files.findIndex(e => e.name === file.name), 1)\r\n    },\r\n    handleUpload: function (file) {\r\n      if (!this.multiple) {\r\n        if (this.files.length > 0) {\r\n          this.fileError = `不能选择多个的文件`\r\n          return false\r\n        }\r\n      }\r\n      if (this.files.find(e => e.name == file.name)) {\r\n        this.fileError = `${file.name}已存在上传列表，已自动过滤掉！`\r\n        return false\r\n      }\r\n      this.files.push(file)\r\n      return false\r\n    },\r\n    \timportExcel () {\r\n      let systems = ''\r\n      let authSystems = store.getters.getSystems\r\n      if (authSystems.indexOf('ROLE_ADMIN') == -1) {\r\n        for (let j = 0; j < authSystems.length; j++) {\r\n          if (authSystems[j].indexOf('*') != -1) {\r\n            systems = authSystems[j]\r\n          }\r\n        }\r\n      }\r\n      var formData = new FormData()\r\n      for (const key in this.formBean) {\r\n        formData.append(key, this.formBean[key])\r\n      }\r\n      if (this.files.length == 0 || this.files == null) {\r\n        this.$Message.warning('请选择导入Excel')\r\n      } else {\r\n        for (const ele of this.files) {\r\n          formData.append('file', ele)\r\n        }\r\n        formData.authps = systems\r\n        this.loadingStatus = true\r\n        this.$ajax.post(RESOURCE_PATH + '/import', formData)\r\n          .then(resp => {\r\n            this.loadingStatus = false\r\n            // this.$Message.warning(resp.data.msg)\r\n            this.files = []\r\n            // this.$Message.info(\"成功\")\r\n            this.importOp.show = false\r\n            this.search()\r\n            this.queryPlatform()\r\n            // alert(resp.data.msg)\r\n          })\r\n      }\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch', null)\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      this.delLoding = true\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/udsJobWeight/${ids}/delete`,\r\n        data: {}\r\n      }\r\n      this.$ajax(deleteConfig)\r\n        .then(resp => {\r\n          this.delLoding = false\r\n          this.search()\r\n        })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n    this.getPlatformList()\r\n    this.queryLimitType()\r\n  }\r\n}\r\n</script>\r\n"]}]}