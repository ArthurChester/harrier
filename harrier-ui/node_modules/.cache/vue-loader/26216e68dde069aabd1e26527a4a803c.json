{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Log.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\job\\jobList\\Log.vue","mtime":1681468306538},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobStepRecord'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  \t},\r\n  data () {\r\n    return {\r\n      jobDateList: [],\r\n      jobDate: [],\r\n      formBean: {},\r\n      gridData: [],\r\n      gridColumns: [\r\n        {\r\n          title: '执行次数',\r\n          width: 110,\r\n          key: 'numTimes'\r\n        },\r\n        {\r\n          title: 'log',\r\n          // key: 'logName',\r\n          key: 'logName',\r\n          minWidth: 150,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                // href: row.logDir,\r\n                on: {\r\n                  click: () => {\r\n                    // let id = row.job\r\n                    // this.formBean.logPath = row.logPath\r\n                    // this.formBean.logDir = row.logDir\r\n                    // this.formBean.job = row.job\r\n                    // this.formBean.serverName = row.serverName\r\n                    this.downloadLogfile(row)\r\n                  }\r\n                }\r\n              }, row.logName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'script',\r\n          // key: 'scriptName',\r\n          key: 'scriptName',\r\n          minWidth: 140,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                // href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    // let id = row.job\r\n                    // this.formBean.scriptPath = row.scriptPath\r\n                    // this.formBean.job = row.job\r\n                    // this.formBean.platform = row.platform\r\n                    // this.formBean.system = row.system\r\n                    // this.formBean.scriptDir = row.scriptDir\r\n                    // this.formBean.serverName = row.serverName\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, row.scriptName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : row.address)\r\n            ])\r\n          }\r\n        },\r\n        /* {\r\n\t\t\t\t\ttitle: '所有脚本',\r\n\t\t\t\t\tkey: '',\r\n\t\t\t\t\twidth: 90,\r\n\t\t\t\t\trender: (h, {column,index, row}) => {\r\n\t\t\t\t\t\treturn h('div', [\r\n\t\t\t\t\t\t\th('a', {\r\n\t\t\t\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t\t\t\tsize: 'small',\r\n\t\t\t\t\t\t\t\t\ttype: 'info',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t//marginRight: '5px'\r\n\t\t\t\t\t\t\t\t\t//color: \"green\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\t\t\tclick :() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.showJobScriptOp(row);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, \"查看\")\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, */\r\n        {\r\n          title: '开始时间',\r\n          width: 175,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          width: 175,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (endTimeStr == '2099') {\r\n              endTimeStr = ''\r\n            } else {\r\n              endTimeStr = params.row.endTime\r\n            }\r\n            // alert(endTimeStr);\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, endTimeStr)\r\n          }\r\n        },\r\n        {\r\n          title: '耗时',\r\n          width: 120,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let etime = null\r\n            let startTime = null\r\n            let elapsed = ''\r\n            let str = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (str == '2099') {\r\n              elapsed = ''\r\n            } else {\r\n              etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss')\r\n              startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss')\r\n              let e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6))\r\n\t\t        \tlet s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6))\r\n              // let ss=\r\n              let second = parseInt((e.getTime() -  s.getTime())) / 1000\r\n              let hourTime = 0\r\n              let minuteTime = 0\r\n              let secondTime = 0\r\n              if (second > 60) {\r\n                minuteTime = Math.floor(second / 60)\r\n                secondTime = Math.floor(second % 60)\r\n                if (minuteTime >= 60) {\r\n                  hourTime = Math.floor(minuteTime / 60)\r\n                  minuteTime = Math.floor(minuteTime % 60)\r\n                } else {\r\n                  hourTime = 0\r\n                }\r\n              } else {\r\n                hourTime = 0\r\n                minuteTime = 0\r\n                if (second == 60) {\r\n                  minuteTime = 1\r\n                  secondTime = 0\r\n                } else {\r\n                  secondTime = second\r\n                }\r\n              }\r\n              elapsed = this.addZero(hourTime) + ':' + this.addZero(minuteTime) + ':' + this.addZero(secondTime)\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, elapsed)\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          width: 120,\r\n          key: 'jobDate',\r\n          render: (h, params) => {\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, this.transData.jobData.jobDate)\r\n          }\r\n        },\r\n        // {\r\n        // \ttitle: 'returnCode',\r\n        // \twidth: 110,\r\n        // \tkey: 'returnCode',\r\n        // },\r\n        {\r\n          title: '运行状态',\r\n          width: 110,\r\n          key: 'returnCode',\r\n          render: (h, params) => {\r\n            let str = ''\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (params.row.returnCode == 0) {\r\n              str = 'Done'\r\n            } else {\r\n              str = 'Failed'\r\n            }\r\n            if (endTimeStr == '2099') {\r\n              str = 'Running'\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        }\r\n\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      },\r\n      scriptGridData: [],\r\n      scriptGridColumns: [\r\n\t\t\t\t /* {\r\n\t\t\t\t \ttype: 'index',\r\n\t\t\t\t \ttitle: ' ',\r\n\t\t\t\t \twidth: 80,\r\n\t\t\t\t \t//align: 'center',\r\n\t\t\t\t \tfixed: 'left'\r\n\t\t\t\t }, */\r\n        {\r\n          title: '脚本名',\r\n          key: 'scriptName'\r\n        },\r\n        {\r\n          title: '执行参数',\r\n          minWidth: 150,\r\n          key: 'parameter'\r\n        },\r\n        {\r\n          title: '执行步数',\r\n          width: 100,\r\n          key: 'stepNum'\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 90,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'primary'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    // this.formBean.scriptName = row.fileName\r\n                    // this.formBean.job = this.transData.jobData.job\r\n                    // this.formBean.platform = this.transData.jobData.platform\r\n                    // this.formBean.system = this.transData.jobData.system\r\n                    // this.formBean.scriptDir = row.path\r\n                    // this.formBean.serverName = this.transData.jobData.serverName\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, '下载')\r\n            ])\r\n          }\r\n        }\r\n\r\n      ],\r\n      jobScriptOp: {\r\n        show: false,\r\n        jobScriptParam: {}\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 如果传过来的有初始数据则进行数据绑定\r\n\t\t **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    hisDownload () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.job = this.transData.id\r\n      let startTime = new Date(this.formBean.startTime)\r\n      params.jobDate = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      if (this.formBean.startTime == '') {\r\n        params.jobDate = null\r\n      }\r\n      params.type = 'excel'\r\n      // utils.download(RESOURCE_PATH + '/downLoad', params);\r\n      utils.download(RESOURCE_PATH + '/logHisDownLoad', params)\r\n    },\r\n    downloadLogfile (row) {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.filename = row.logName\r\n      params.uri = row.logPath\r\n      utils.download('/file/loadFile', params)\r\n    },\r\n    downloadScriptfile (row) {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.filename = row.scriptName\r\n      params.uri = row.scriptPath\r\n      utils.download('/file/loadFile', params)\r\n    },\r\n    downloadAllScriptfile (param) {\r\n      let params = {}\r\n      if (!this.scriptGridData) {\r\n        this.$Message.error({\r\n          content: '无脚本可下载!',\r\n          duration: 10,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      Object.assign(params, this.jobScriptOp.jobScriptParam)\r\n      // params.scriptName = scriptName\r\n      utils.download(RESOURCE_PATH + '/downloadAllScriptfile', params)\r\n    },\r\n    showJobScriptOp () {\r\n      this.jobScriptOp.show = true\r\n      this.jobScriptOp.jobScriptParam = this.transData.jobData\r\n      this.getAllScript(this.transData.jobData)\r\n    },\r\n    getAllScript (param) {\r\n      let params = {}\r\n      Object.assign(params, param)\r\n      // params.currentPage = this.page.current;\r\n      // params.pageSize = this.page.size;\r\n      // params.job = this.transData.id;\r\n      if (!this.transData.formBean) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/udsJobStep/selectJobStepList',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          // this.jobScriptOp.path = resp.data.path\r\n          resp.data.records.forEach(data => {\r\n            if (data.scriptPath) {\r\n              data.scriptName = data.scriptPath.substring(data.scriptPath.lastIndexOf('/') + 1)\r\n            }\r\n          })\r\n          this.scriptGridData = resp.data.records\r\n        })\r\n    },\r\n    getStartTime (startTime) {\r\n\r\n      // this.formBean.startTime= startTime;\r\n      // let etime=new Date(startTime);\r\n      // let num= parseInt((etime.getTime() -  startTime.getTime())/1000/60/60/24);\r\n      // if(num<0||num>30){\r\n      // \tthis.$Message.error('查询时间应在30天之内');\r\n      // \treturn\r\n      // }\r\n      // search();\r\n    },\r\n    addZero (time) {\r\n      let str = time\r\n      if (time < 10) {\r\n        str = '0' + time\r\n      }\r\n      return str\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.currentPage = this.page.current\r\n      params.pageSize = this.page.size\r\n      params.job_record_id = this.transData.id\r\n      // let startTime = new Date(this.formBean.startTime)\r\n      // let etime = new Date()\r\n      // let num = parseInt(((etime.getTime() -  startTime.getTime())) / 1000 / 60 / 60 / 24)\r\n      // if (num < 0 || num > 60) {\r\n      //   this.$Message.error('查询时间应在60天之内')\r\n      //   return\r\n      // }\r\n      // if (this.formBean.startTime == null || this.formBean.startTime == '') {\r\n      //   params.jobDate = null\r\n      // } else {\r\n      //   let str = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      //   params.jobDate = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      // }\r\n      // alert(params.jobDate);\r\n      if (!this.transData.formBean) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectJobStepRecord',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            if (data.scriptPath) {\r\n              data.scriptName = data.scriptPath.substring(data.scriptPath.lastIndexOf('/') + 1)\r\n            }\r\n            if (data.logPath) {\r\n              data.logName = data.logPath.substring(data.logPath.lastIndexOf('/') + 1)\r\n            }\r\n          })\r\n          this.gridData = resp.data\r\n          this.page.total = resp.data.length\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      if (this.transData.prequeryCache) {\r\n        queryCache.prequeryCache = this.transData.prequeryCache\r\n      }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      // syncJobDetailForm\r\n      if (this.transData.jobStatus) {\r\n        queryCache.jobStatus = this.transData.jobStatus\r\n      }\r\n      if (this.transData.curTab) {\r\n        backParam.statusName = this.transData.curTab\r\n      }\r\n      if (this.transData.parentData) {\r\n        backParam.parentData = this.transData.parentData\r\n      }\r\n      if (this.transData.row) {\r\n        backParam.row = this.transData.row\r\n      }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["Log.vue"],"names":[],"mappings":";AAgfile":"Log.vue","sourceRoot":"src/view/spdb/job/jobList","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<Row>\r\n\t\t\t<Col span=\"24\">\r\n\t\t\t\t<div style=\"font-size:14px;font-weight: bold; color: #464c5b;margin-left:5px;\">\r\n\t\t\t\t作业日志列表\r\n\t\t\t\t&nbsp;&nbsp;平台名:{{this.transData.jobData.platform}}\r\n\t\t\t\t&nbsp;&nbsp;应用名:{{this.transData.jobData.systems}}\r\n\t\t\t\t&nbsp;&nbsp;作业名:{{this.transData.jobData.job}}\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row>\r\n\t\t<Form :label-width=\"80\">\r\n\t\t\t<Col span=\"13\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"4\">\r\n\t\t\t&nbsp;\r\n\t\t\t\t<!-- <FormItem  label=\"TXDate\" >\r\n\t\t\t\t\t<DatePicker :transfer=\"true\" v-model=\"formBean.startTime\" type=\"datetime\"  @on-change=\"getStartTime\" format=\"yyyyMMdd\" placeholder=\"请选择\" ></DatePicker>\r\n\t\t\t\t</FormItem> -->\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"1\">\r\n\t\t\t&nbsp;\r\n\t\t\t</Col>\r\n\t\t\t<Col span=\"6\">\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">&nbsp;&nbsp;查询</Button>\r\n\t\t\t\t<Button type=\"primary\" @click=\"showJobScriptOp\" style=\"\">所有脚本</Button>\r\n        <!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"hisDownload\" style=\"\">下载</Button> -->\r\n\t\t\t\t<Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"cancel\" style=\"\">返回</Button>\r\n\t\t\t</Col>\r\n\t\t</Form>\r\n\t\t</Row>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<Table border :columns=\"gridColumns\" :data=\"gridData\" stripe >\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t\t<Modal id=\"jobScript\"\r\n\t\t\tv-model=\"jobScriptOp.show\"\r\n\t\t\ttitle=\"所有脚本\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n      <!--\r\n\t\t\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t\t\t<Button type=\"primary\" icon=\"md-cloud-download\" @click=\"downloadAllScriptfile\">下载所有脚本</Button>\r\n\t\t\t\t</div>-->\r\n\t\t\t\t<div class=\"spdb-table\" >\r\n\t\t\t\t\t<Table border :columns=\"scriptGridColumns\" :data=\"scriptGridData\" stripe>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\">\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nconst RESOURCE_PATH = '/udsJobStepRecord'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  \t},\r\n  data () {\r\n    return {\r\n      jobDateList: [],\r\n      jobDate: [],\r\n      formBean: {},\r\n      gridData: [],\r\n      gridColumns: [\r\n        {\r\n          title: '执行次数',\r\n          width: 110,\r\n          key: 'numTimes'\r\n        },\r\n        {\r\n          title: 'log',\r\n          // key: 'logName',\r\n          key: 'logName',\r\n          minWidth: 150,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                // href: row.logDir,\r\n                on: {\r\n                  click: () => {\r\n                    // let id = row.job\r\n                    // this.formBean.logPath = row.logPath\r\n                    // this.formBean.logDir = row.logDir\r\n                    // this.formBean.job = row.job\r\n                    // this.formBean.serverName = row.serverName\r\n                    this.downloadLogfile(row)\r\n                  }\r\n                }\r\n              }, row.logName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'script',\r\n          // key: 'scriptName',\r\n          key: 'scriptName',\r\n          minWidth: 140,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                // href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    // let id = row.job\r\n                    // this.formBean.scriptPath = row.scriptPath\r\n                    // this.formBean.job = row.job\r\n                    // this.formBean.platform = row.platform\r\n                    // this.formBean.system = row.system\r\n                    // this.formBean.scriptDir = row.scriptDir\r\n                    // this.formBean.serverName = row.serverName\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, row.scriptName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : row.address)\r\n            ])\r\n          }\r\n        },\r\n        /* {\r\n\t\t\t\t\ttitle: '所有脚本',\r\n\t\t\t\t\tkey: '',\r\n\t\t\t\t\twidth: 90,\r\n\t\t\t\t\trender: (h, {column,index, row}) => {\r\n\t\t\t\t\t\treturn h('div', [\r\n\t\t\t\t\t\t\th('a', {\r\n\t\t\t\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t\t\t\tsize: 'small',\r\n\t\t\t\t\t\t\t\t\ttype: 'info',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t//marginRight: '5px'\r\n\t\t\t\t\t\t\t\t\t//color: \"green\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\t\t\tclick :() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.showJobScriptOp(row);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, \"查看\")\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, */\r\n        {\r\n          title: '开始时间',\r\n          width: 175,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          width: 175,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (endTimeStr == '2099') {\r\n              endTimeStr = ''\r\n            } else {\r\n              endTimeStr = params.row.endTime\r\n            }\r\n            // alert(endTimeStr);\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, endTimeStr)\r\n          }\r\n        },\r\n        {\r\n          title: '耗时',\r\n          width: 120,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let etime = null\r\n            let startTime = null\r\n            let elapsed = ''\r\n            let str = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (str == '2099') {\r\n              elapsed = ''\r\n            } else {\r\n              etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss')\r\n              startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss')\r\n              let e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6))\r\n\t\t        \tlet s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6))\r\n              // let ss=\r\n              let second = parseInt((e.getTime() -  s.getTime())) / 1000\r\n              let hourTime = 0\r\n              let minuteTime = 0\r\n              let secondTime = 0\r\n              if (second > 60) {\r\n                minuteTime = Math.floor(second / 60)\r\n                secondTime = Math.floor(second % 60)\r\n                if (minuteTime >= 60) {\r\n                  hourTime = Math.floor(minuteTime / 60)\r\n                  minuteTime = Math.floor(minuteTime % 60)\r\n                } else {\r\n                  hourTime = 0\r\n                }\r\n              } else {\r\n                hourTime = 0\r\n                minuteTime = 0\r\n                if (second == 60) {\r\n                  minuteTime = 1\r\n                  secondTime = 0\r\n                } else {\r\n                  secondTime = second\r\n                }\r\n              }\r\n              elapsed = this.addZero(hourTime) + ':' + this.addZero(minuteTime) + ':' + this.addZero(secondTime)\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, elapsed)\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          width: 120,\r\n          key: 'jobDate',\r\n          render: (h, params) => {\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, this.transData.jobData.jobDate)\r\n          }\r\n        },\r\n        // {\r\n        // \ttitle: 'returnCode',\r\n        // \twidth: 110,\r\n        // \tkey: 'returnCode',\r\n        // },\r\n        {\r\n          title: '运行状态',\r\n          width: 110,\r\n          key: 'returnCode',\r\n          render: (h, params) => {\r\n            let str = ''\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (params.row.returnCode == 0) {\r\n              str = 'Done'\r\n            } else {\r\n              str = 'Failed'\r\n            }\r\n            if (endTimeStr == '2099') {\r\n              str = 'Running'\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        }\r\n\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      },\r\n      scriptGridData: [],\r\n      scriptGridColumns: [\r\n\t\t\t\t /* {\r\n\t\t\t\t \ttype: 'index',\r\n\t\t\t\t \ttitle: ' ',\r\n\t\t\t\t \twidth: 80,\r\n\t\t\t\t \t//align: 'center',\r\n\t\t\t\t \tfixed: 'left'\r\n\t\t\t\t }, */\r\n        {\r\n          title: '脚本名',\r\n          key: 'scriptName'\r\n        },\r\n        {\r\n          title: '执行参数',\r\n          minWidth: 150,\r\n          key: 'parameter'\r\n        },\r\n        {\r\n          title: '执行步数',\r\n          width: 100,\r\n          key: 'stepNum'\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 90,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'primary'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    // this.formBean.scriptName = row.fileName\r\n                    // this.formBean.job = this.transData.jobData.job\r\n                    // this.formBean.platform = this.transData.jobData.platform\r\n                    // this.formBean.system = this.transData.jobData.system\r\n                    // this.formBean.scriptDir = row.path\r\n                    // this.formBean.serverName = this.transData.jobData.serverName\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, '下载')\r\n            ])\r\n          }\r\n        }\r\n\r\n      ],\r\n      jobScriptOp: {\r\n        show: false,\r\n        jobScriptParam: {}\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 如果传过来的有初始数据则进行数据绑定\r\n\t\t **/\r\n    bindData () {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    hisDownload () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.job = this.transData.id\r\n      let startTime = new Date(this.formBean.startTime)\r\n      params.jobDate = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      if (this.formBean.startTime == '') {\r\n        params.jobDate = null\r\n      }\r\n      params.type = 'excel'\r\n      // utils.download(RESOURCE_PATH + '/downLoad', params);\r\n      utils.download(RESOURCE_PATH + '/logHisDownLoad', params)\r\n    },\r\n    downloadLogfile (row) {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.filename = row.logName\r\n      params.uri = row.logPath\r\n      utils.download('/file/loadFile', params)\r\n    },\r\n    downloadScriptfile (row) {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.filename = row.scriptName\r\n      params.uri = row.scriptPath\r\n      utils.download('/file/loadFile', params)\r\n    },\r\n    downloadAllScriptfile (param) {\r\n      let params = {}\r\n      if (!this.scriptGridData) {\r\n        this.$Message.error({\r\n          content: '无脚本可下载!',\r\n          duration: 10,\r\n          closable: true\r\n        })\r\n        return\r\n      }\r\n      Object.assign(params, this.jobScriptOp.jobScriptParam)\r\n      // params.scriptName = scriptName\r\n      utils.download(RESOURCE_PATH + '/downloadAllScriptfile', params)\r\n    },\r\n    showJobScriptOp () {\r\n      this.jobScriptOp.show = true\r\n      this.jobScriptOp.jobScriptParam = this.transData.jobData\r\n      this.getAllScript(this.transData.jobData)\r\n    },\r\n    getAllScript (param) {\r\n      let params = {}\r\n      Object.assign(params, param)\r\n      // params.currentPage = this.page.current;\r\n      // params.pageSize = this.page.size;\r\n      // params.job = this.transData.id;\r\n      if (!this.transData.formBean) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/udsJobStep/selectJobStepList',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          // this.jobScriptOp.path = resp.data.path\r\n          resp.data.records.forEach(data => {\r\n            if (data.scriptPath) {\r\n              data.scriptName = data.scriptPath.substring(data.scriptPath.lastIndexOf('/') + 1)\r\n            }\r\n          })\r\n          this.scriptGridData = resp.data.records\r\n        })\r\n    },\r\n    getStartTime (startTime) {\r\n\r\n      // this.formBean.startTime= startTime;\r\n      // let etime=new Date(startTime);\r\n      // let num= parseInt((etime.getTime() -  startTime.getTime())/1000/60/60/24);\r\n      // if(num<0||num>30){\r\n      // \tthis.$Message.error('查询时间应在30天之内');\r\n      // \treturn\r\n      // }\r\n      // search();\r\n    },\r\n    addZero (time) {\r\n      let str = time\r\n      if (time < 10) {\r\n        str = '0' + time\r\n      }\r\n      return str\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      // Object.assign(params, this.formBean)\r\n      params.currentPage = this.page.current\r\n      params.pageSize = this.page.size\r\n      params.job_record_id = this.transData.id\r\n      // let startTime = new Date(this.formBean.startTime)\r\n      // let etime = new Date()\r\n      // let num = parseInt(((etime.getTime() -  startTime.getTime())) / 1000 / 60 / 60 / 24)\r\n      // if (num < 0 || num > 60) {\r\n      //   this.$Message.error('查询时间应在60天之内')\r\n      //   return\r\n      // }\r\n      // if (this.formBean.startTime == null || this.formBean.startTime == '') {\r\n      //   params.jobDate = null\r\n      // } else {\r\n      //   let str = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      //   params.jobDate = utils.fmtDate(this.formBean.startTime, 'yyyyMMdd')\r\n      // }\r\n      // alert(params.jobDate);\r\n      if (!this.transData.formBean) {\r\n        params.currentPage = 1\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectJobStepRecord',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            if (data.scriptPath) {\r\n              data.scriptName = data.scriptPath.substring(data.scriptPath.lastIndexOf('/') + 1)\r\n            }\r\n            if (data.logPath) {\r\n              data.logName = data.logPath.substring(data.logPath.lastIndexOf('/') + 1)\r\n            }\r\n          })\r\n          this.gridData = resp.data\r\n          this.page.total = resp.data.length\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      let sort, order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      this.formBean.order = order\r\n      this.formBean.sort = column.key\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 返回到数据视图\r\n\t\t **/\r\n    cancel () {\r\n      let prevTab = ''\r\n      if (this.transData.tabObj) {\r\n        prevTab = this.transData.tabObj.prevTab\r\n        // prevTab = 'joblist'\r\n      }\r\n      if (this.transData.prevTab) {\r\n        prevTab = this.transData.prevTab\r\n      }\r\n      let queryCache = { formBean: this.transData.formBean, currentPage: this.transData.currentPage, pageSize: this.transData.pageSize }\r\n      if (this.transData.prequeryCache) {\r\n        queryCache.prequeryCache = this.transData.prequeryCache\r\n      }\r\n      let backParam = { statusName: 'table', prevTab: prevTab, type: 'back' }\r\n      // syncJobDetailForm\r\n      if (this.transData.jobStatus) {\r\n        queryCache.jobStatus = this.transData.jobStatus\r\n      }\r\n      if (this.transData.curTab) {\r\n        backParam.statusName = this.transData.curTab\r\n      }\r\n      if (this.transData.parentData) {\r\n        backParam.parentData = this.transData.parentData\r\n      }\r\n      if (this.transData.row) {\r\n        backParam.row = this.transData.row\r\n      }\r\n      this.$emit('switch', Object.assign({}, queryCache, backParam))\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}