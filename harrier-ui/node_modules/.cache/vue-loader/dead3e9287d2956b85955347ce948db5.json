{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\serverManage\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\serverManage\\Table.vue","mtime":1681468306550},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/udsServer'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      // statusList: [\r\n      //  {\r\n      //    value: '1',\r\n      //    label: 'node-1'\r\n      //  },\r\n      //  {\r\n      //    value: '0',\r\n      //    label: 'node-0'\r\n      //  }\r\n      // ],\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        // \ttype: 'selection',\r\n        // \twidth: 60,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        //   title: '对外服务名',\r\n        //   key: 'serverRoleName'\r\n        // },\r\n        {\r\n          title: '服务组名',\r\n          key: 'serverRoleNameGroup',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '集群名',\r\n          key: 'nodeClusterType',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '服务器名',\r\n          key: 'serverName',\r\n          minWidth: 160\r\n        },\r\n        {\r\n          title: '服务器iP',\r\n          key: 'ip',\r\n          minWidth: 140\r\n        },\r\n        {\r\n          title: '上次启动时间',\r\n          key: 'lastStart',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '关闭时间',\r\n          key: 'lastEnd',\r\n          minWidth: 180\r\n        },\r\n        // {\r\n        //   title: '最大并发数',\r\n        //   key: 'maxJobNum',\r\n        //   minWidth: 110\r\n        // },\r\n        {\r\n          title: '是否启用',\r\n          key: 'isEnable',\r\n          minWidth: 100,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [h('Span', {}, row.isEnable ? '是' : '否')])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '节点标签',\r\n        //   key: 'tags',\r\n        //   minWidth: 100\r\n        // },\r\n        // {\r\n        //   title: '逻辑集群',\r\n        //   key: 'dbControl',\r\n        //   minWidth: 100,\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [h('Span', {}, this.dbControlName[row.dbControl])])\r\n        //   }\r\n        // },\r\n        // {\r\n        //   title: '节点归属地',\r\n        //   key: 'location',\r\n        //   minWidth: 110,\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [h('Span', {}, this.locationName[row.location])])\r\n        //   }\r\n        // },\r\n        {\r\n        \ttitle: '描述',\r\n        \tkey: 'des',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 150,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              // h(\r\n              //   'Button',\r\n              //   {\r\n              //     props: {\r\n              //       size: 'small',\r\n              //       type: 'info'\r\n              //     },\r\n              //     style: {\r\n              //       marginRight: '5px'\r\n              //     },\r\n              //     on: {\r\n              //       click: () => {\r\n              //         let id = row.serverName\r\n              //         let queryCache = {\r\n              //           formBean: this.formBean,\r\n              //           currentPage: this.page.current,\r\n              //           pageSize: this.page.size\r\n              //         }\r\n              //         this.$emit(\r\n              //           'switch',\r\n              //           Object.assign(\r\n              //             { id: id, statusName: 'form' },\r\n              //             queryCache\r\n              //           )\r\n              //         ) // 提交form事件，在parent中显示form\r\n              //       }\r\n              //     }\r\n              //   },\r\n              //   '编辑'\r\n              // ),\r\n              h(\r\n                'Button',\r\n                {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.$Modal.confirm({\r\n                        title: '提示',\r\n                        onOk: () => {\r\n                          let params = {}\r\n                          params.serverName = row.serverName\r\n                          params.isEnable = !row.isEnable\r\n                          let httpConfig = {\r\n                            method: 'POST',\r\n                            url: RESOURCE_PATH + '/setEnable',\r\n                            data: params\r\n                          }\r\n                          this.$ajax(httpConfig)\r\n                            .then(resp => {\r\n                              if (resp.status && resp.status === 200) {\r\n                                this.search()\r\n                              }\r\n                            })\r\n                        },\r\n                        content: row.isEnable ? '是否确定禁用该节点！' : '是否确定启用该节点！'\r\n                      })\r\n                      // let id = row.serverName\r\n                      // let queryCache = {\r\n                      //   formBean: this.formBean,\r\n                      //   currentPage: this.page.current,\r\n                      //   pageSize: this.page.size\r\n                      // }\r\n                      // this.$emit(\r\n                      //   'switch',\r\n                      //   Object.assign(\r\n                      //     { id: id, statusName: 'form' },\r\n                      //     queryCache\r\n                      //   )\r\n                      // ) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                },\r\n                row.isEnable ? '禁用' : '启用'\r\n              ),\r\n              h(\r\n                'Button',\r\n                {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let queryCache = {\r\n                        formBean: this.formBean,\r\n                        currentPage: this.page.current,\r\n                        pageSize: this.page.size\r\n                      }\r\n                      this.$emit(\r\n                        'switch',\r\n                        Object.assign(\r\n                          { info: row, statusName: 'loglist' },\r\n                          queryCache\r\n                        )\r\n                      ) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                },\r\n                '查看日志'\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      locationName: {},\r\n      dbControlName: {},\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {}\r\n    }\r\n  },\r\n  methods: {\r\n    /*\r\n     *paramChange () {\r\n     *  if (this.formBean.param == 0) {\r\n     *    this.$emit('switch', {ntable: 'true'})\r\n     *  }\r\n     *}\r\n     */\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) {\r\n          // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else {\r\n          // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      if (params.servername && params.servername !== '') {\r\n        params.servername = '%' + params.servername + '%'\r\n      } else {\r\n        delete params.servername\r\n      }\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig).then(resp => {\r\n        this.gridData = resp.data.rows\r\n        this.page.total = resp.data.total\r\n      })\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.serverName)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq).then(resp => {\r\n          this.search()\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    queryLocationName () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          this.locationName[parseInt(data.dicValue)] = data.dicName\r\n        })\r\n        // this.search()\r\n      })\r\n    },\r\n    queryDbControlName () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'db_control' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          this.dbControlName[parseInt(data.dicValue)] = data.dicName\r\n        })\r\n        this.search()\r\n      })\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n    // this.queryLocationName()\r\n    // this.queryDbControlName()\r\n  }\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";AAkfile":"Table.vue","sourceRoot":"src/view/spdb/systemsetting/serverManage","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"spdb-form\">\r\n      <Form ref=\"serverForm\" :model=\"formBean\" :label-width=\"80\" :rules=\"ruleValidate\"></Form>\r\n    </div>\r\n    <Form ref=\"serverForm\" :model=\"formBean\" :label-width=\"70\" :rules=\"ruleValidate\">\r\n      <Row>\r\n        <Col span=\"3\">\r\n          <Form-Item prop=\"servername\" label=\"节点名称\">\r\n            <Input v-model=\"formBean.servername\" placeholder=\"支持模糊查询\" />\r\n          </Form-Item>\r\n        </Col>\r\n        <Col span=\"1\">&nbsp;</Col>\r\n        <Col span=\"4\">\r\n          <div class=\"spdb-toolbar\">\r\n            <Button type=\"primary\" icon=\"ios-search\" @click=\"demand\">查询</Button>\r\n            <Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <!--\r\n\t\t\t<S-AuthButton type=\"primary\" icon=\"md-add\" @click=\"add\" :requestConfig=request.addReq>新增</S-AuthButton>\r\n\t\t\t<S-AuthButton type=\"primary\" icon=\"ios-trash-outline\" @click=\"del\" :requestConfig=request.delReq>删除</S-AuthButton>\r\n\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"download\">下载</Button>\r\n    -->\r\n\r\n    <div class=\"spdb-table\">\r\n      <Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\"></Table>\r\n    </div>\r\n\r\n    <div class=\"spdb-page\">\r\n      <Page\r\n        placement=\"top\"\r\n        :total=\"page.total\"\r\n        :current=\"page.current\"\r\n        :page-size=\"page.size\"\r\n        :page-size-opts=\"page.opt\"\r\n        show-total\r\n        show-sizer\r\n        show-elevat\r\n        @on-change=\"changePage\"\r\n        @on-page-size-change=\"changePageSize\"\r\n      ></Page>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\n\r\nconst RESOURCE_PATH = '/udsServer'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      // statusList: [\r\n      //  {\r\n      //    value: '1',\r\n      //    label: 'node-1'\r\n      //  },\r\n      //  {\r\n      //    value: '0',\r\n      //    label: 'node-0'\r\n      //  }\r\n      // ],\r\n      gridColumns: [\r\n        // {\r\n        // \ttype: 'index',\r\n        // \ttitle: ' ',\r\n        // \twidth: 80,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        // \ttype: 'selection',\r\n        // \twidth: 60,\r\n        // \t//align: 'center',\r\n        // \tfixed: 'left'\r\n        // },\r\n        // {\r\n        //   title: '对外服务名',\r\n        //   key: 'serverRoleName'\r\n        // },\r\n        {\r\n          title: '服务组名',\r\n          key: 'serverRoleNameGroup',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '集群名',\r\n          key: 'nodeClusterType',\r\n          minWidth: 120\r\n        },\r\n        {\r\n          title: '服务器名',\r\n          key: 'serverName',\r\n          minWidth: 160\r\n        },\r\n        {\r\n          title: '服务器iP',\r\n          key: 'ip',\r\n          minWidth: 140\r\n        },\r\n        {\r\n          title: '上次启动时间',\r\n          key: 'lastStart',\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: '关闭时间',\r\n          key: 'lastEnd',\r\n          minWidth: 180\r\n        },\r\n        // {\r\n        //   title: '最大并发数',\r\n        //   key: 'maxJobNum',\r\n        //   minWidth: 110\r\n        // },\r\n        {\r\n          title: '是否启用',\r\n          key: 'isEnable',\r\n          minWidth: 100,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [h('Span', {}, row.isEnable ? '是' : '否')])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '节点标签',\r\n        //   key: 'tags',\r\n        //   minWidth: 100\r\n        // },\r\n        // {\r\n        //   title: '逻辑集群',\r\n        //   key: 'dbControl',\r\n        //   minWidth: 100,\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [h('Span', {}, this.dbControlName[row.dbControl])])\r\n        //   }\r\n        // },\r\n        // {\r\n        //   title: '节点归属地',\r\n        //   key: 'location',\r\n        //   minWidth: 110,\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [h('Span', {}, this.locationName[row.location])])\r\n        //   }\r\n        // },\r\n        {\r\n        \ttitle: '描述',\r\n        \tkey: 'des',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '操作',\r\n          width: 150,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              // h(\r\n              //   'Button',\r\n              //   {\r\n              //     props: {\r\n              //       size: 'small',\r\n              //       type: 'info'\r\n              //     },\r\n              //     style: {\r\n              //       marginRight: '5px'\r\n              //     },\r\n              //     on: {\r\n              //       click: () => {\r\n              //         let id = row.serverName\r\n              //         let queryCache = {\r\n              //           formBean: this.formBean,\r\n              //           currentPage: this.page.current,\r\n              //           pageSize: this.page.size\r\n              //         }\r\n              //         this.$emit(\r\n              //           'switch',\r\n              //           Object.assign(\r\n              //             { id: id, statusName: 'form' },\r\n              //             queryCache\r\n              //           )\r\n              //         ) // 提交form事件，在parent中显示form\r\n              //       }\r\n              //     }\r\n              //   },\r\n              //   '编辑'\r\n              // ),\r\n              h(\r\n                'Button',\r\n                {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.$Modal.confirm({\r\n                        title: '提示',\r\n                        onOk: () => {\r\n                          let params = {}\r\n                          params.serverName = row.serverName\r\n                          params.isEnable = !row.isEnable\r\n                          let httpConfig = {\r\n                            method: 'POST',\r\n                            url: RESOURCE_PATH + '/setEnable',\r\n                            data: params\r\n                          }\r\n                          this.$ajax(httpConfig)\r\n                            .then(resp => {\r\n                              if (resp.status && resp.status === 200) {\r\n                                this.search()\r\n                              }\r\n                            })\r\n                        },\r\n                        content: row.isEnable ? '是否确定禁用该节点！' : '是否确定启用该节点！'\r\n                      })\r\n                      // let id = row.serverName\r\n                      // let queryCache = {\r\n                      //   formBean: this.formBean,\r\n                      //   currentPage: this.page.current,\r\n                      //   pageSize: this.page.size\r\n                      // }\r\n                      // this.$emit(\r\n                      //   'switch',\r\n                      //   Object.assign(\r\n                      //     { id: id, statusName: 'form' },\r\n                      //     queryCache\r\n                      //   )\r\n                      // ) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                },\r\n                row.isEnable ? '禁用' : '启用'\r\n              ),\r\n              h(\r\n                'Button',\r\n                {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    marginRight: '5px'\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      let queryCache = {\r\n                        formBean: this.formBean,\r\n                        currentPage: this.page.current,\r\n                        pageSize: this.page.size\r\n                      }\r\n                      this.$emit(\r\n                        'switch',\r\n                        Object.assign(\r\n                          { info: row, statusName: 'loglist' },\r\n                          queryCache\r\n                        )\r\n                      ) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                },\r\n                '查看日志'\r\n              )\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      selection: [],\r\n      locationName: {},\r\n      dbControlName: {},\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {}\r\n    }\r\n  },\r\n  methods: {\r\n    /*\r\n     *paramChange () {\r\n     *  if (this.formBean.param == 0) {\r\n     *    this.$emit('switch', {ntable: 'true'})\r\n     *  }\r\n     *}\r\n     */\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      this.search()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) {\r\n          // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else {\r\n          // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n     * 下载\r\n     **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    /**\r\n     * 查询\r\n     **/\r\n    search () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      if (params.servername && params.servername !== '') {\r\n        params.servername = '%' + params.servername + '%'\r\n      } else {\r\n        delete params.servername\r\n      }\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n\r\n      this.$ajax(httpConfig).then(resp => {\r\n        this.gridData = resp.data.rows\r\n        this.page.total = resp.data.total\r\n      })\r\n    },\r\n    /**\r\n     * 清空\r\n     **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n     * 新增\r\n     **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.serverName)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq).then(resp => {\r\n          this.search()\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 数据复选事件\r\n     **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n     * 改变页码事件\r\n     **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n     * 改变分页大小事件\r\n     **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    queryLocationName () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          this.locationName[parseInt(data.dicValue)] = data.dicName\r\n        })\r\n        // this.search()\r\n      })\r\n    },\r\n    queryDbControlName () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'db_control' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          this.dbControlName[parseInt(data.dicValue)] = data.dicName\r\n        })\r\n        this.search()\r\n      })\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted () {\r\n    this.init()\r\n    // this.queryLocationName()\r\n    // this.queryDbControlName()\r\n  }\r\n}\r\n</script>\r\n"]}]}