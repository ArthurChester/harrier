{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\serverManage\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\serverManage\\Form.vue","mtime":1681468306549},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nconst RESOURCE_PATH = \"/server\";\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function() {\r\n        return {};\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      locationList: [],\r\n      dbControlList:[],\r\n      formRule: {},\r\n      dirList: []\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init() {\r\n      if (this.transData.id) {\r\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        let loadConfig = {\r\n          method: \"GET\",\r\n          url: RESOURCE_PATH + \"/\" + this.transData.id\r\n        };\r\n        this.$ajax(loadConfig).then(resp => {\r\n          this.formBean = resp.data;\r\n          if (resp.data.isEnable == 1) {\r\n            this.formBean.nodeEnable = true;\r\n          } else {\r\n            this.formBean.nodeEnable = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.bindData();\r\n      }\r\n      this.querylocationList();\r\n      this.queryDbControlList();\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData() {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save() {\r\n      this.$refs.serverForm.validate(valid => {\r\n        if (!valid) return;\r\n        let params = {};\r\n        this.formBean.isEnable = this.formBean.nodeEnable == true ? 1 : 0;\r\n        Object.assign(params, this.formBean);\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        };\r\n        if (this.transData.id) {\r\n          httpConfig.method = \"PUT\";\r\n          httpConfig.url = RESOURCE_PATH + \"/\" + this.transData.id;\r\n        } else {\r\n          httpConfig.method = \"POST\";\r\n        }\r\n        this.loading = true;\r\n        this.$ajax(httpConfig).then(resp => {\r\n          this.loading = false;\r\n          let str = resp.data;\r\n          //alert(str);\r\n          // this.$dialog.confirm(\" xxx\").then(function(){\r\n\r\n          // }).catch(function(){\r\n\r\n          // });\r\n          //console.log(str);\r\n          this.cancel();\r\n          this.init();\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel() {\r\n      let queryCache = {\r\n        formBean: this.transData.formBean,\r\n        currentPage: this.transData.currentPage,\r\n        pageSize: this.transData.pageSize\r\n      };\r\n      this.$emit(\"switch\", Object.assign({ statusName: \"table\" }, queryCache));\r\n    },\r\n    \r\n    queryDbControlList() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"db_control\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.dbControlList = [];\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = parseInt(data.dicValue);\r\n          tmp.label = data.dicName;\r\n          this.dbControlList.push(tmp);\r\n        });\r\n      });\r\n    },\r\n    querylocationList() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"location\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = [];\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = parseInt(data.dicValue);\r\n          tmp.label = data.dicName;\r\n          this.locationList.push(tmp);\r\n        });\r\n      });\r\n    },\r\n    loadTags() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"nodeTag\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = data.dicValue;\r\n          tmp.label = data.dicName;\r\n          this.dirList.push(tmp);\r\n        });\r\n      });\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted() {\r\n    this.init();\r\n    this.loadTags();\r\n  }\r\n};\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";AAifile":"Form.vue","sourceRoot":"src/view/spdb/systemsetting/serverManage","sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"serverForm\" :model=\"formBean\" :label-width=\"120\" :rules=\"formRule\">\r\n      <Row>\r\n        <Col span=\"6\">\r\n          <FormItem prop=\"serverName\" label=\"执行节点名称\">\r\n            <Input v-model=\"formBean.serverName\" readonly />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"6\">\r\n          <FormItem prop=\"ip\" label=\"执行节点iP\">\r\n            <Input v-model=\"formBean.ip\" readonly />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <!-- <Col span=\"6\">\r\n          <FormItem prop=\"performanceRatio\" label=\"性能比值(千分比)\">\r\n            <input\r\n              type=\"number\"\r\n              style=\"border-radius:5px; width: 70px\"\r\n              v-model=\"formBean.performanceRatio\"\r\n              oninput=\"if(value>1000)value=100;if(value<0)value=0\"\r\n            />\r\n          </FormItem>\r\n        </Col> -->\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"8\">\r\n          <!--\r\n\t\t\t\t\t<FormItem prop=\"maxJobNum\" label=\"最大并发数\">\r\n\t\t\t\t\t\t<Input v-model=\"formBean.maxJobNum\"/>\r\n          </FormItem>-->\r\n          <FormItem prop=\"maxJobNum\" label=\"最大并发数\" :label-width=\"120\">\r\n            <input\r\n              type=\"number\"\r\n              style=\"border-radius:5px; width: 70px\"\r\n              v-model=\"formBean.maxJobNum\"\r\n              oninput=\"if(value>300)value=300;if(value<0)value=0\"\r\n            />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span>\r\n          <FormItem prop=\"nodeEnable\" label=\"是否启用\">\r\n            <Checkbox v-model=\"formBean.nodeEnable\">启用</Checkbox>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"4\">\r\n          <Form-Item prop=\"tags\" label=\"节点标签\">\r\n            <Select filterable placeholder=\"请选择\" v-model=\"formBean.tags\" clearable>\r\n              <Option v-for=\"item in dirList\" :value=\"item.value\" :key=\"item.key\">{{ item.value }}</Option>\r\n            </Select>\r\n          </Form-Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"6\">\r\n          <FormItem prop=\"location\" label=\"逻辑集群\">\r\n            <Select v-model=\"formBean.dbControl\" :disabled=\"true\">\r\n              <Option\r\n                v-for=\"item in dbControlList\"\r\n                :value=\"item.value\"\r\n                :key=\"item.value\"\r\n              >{{ item.label }}</Option>\r\n            </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"6\">\r\n          <FormItem prop=\"location\" label=\"节点归属地\">\r\n            <Select v-model=\"formBean.location\" :disabled=\"true\">\r\n              <Option\r\n                v-for=\"item in locationList\"\r\n                :value=\"item.value\"\r\n                :key=\"item.value\"\r\n              >{{ item.label }}</Option>\r\n            </Select>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <div>\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"cancel\">取消</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst RESOURCE_PATH = \"/server\";\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function() {\r\n        return {};\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      locationList: [],\r\n      dbControlList:[],\r\n      formRule: {},\r\n      dirList: []\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * 初始化\r\n     **/\r\n    init() {\r\n      if (this.transData.id) {\r\n        // 如果传过来的存在ID则说明是编辑功能跳转过来\r\n        let loadConfig = {\r\n          method: \"GET\",\r\n          url: RESOURCE_PATH + \"/\" + this.transData.id\r\n        };\r\n        this.$ajax(loadConfig).then(resp => {\r\n          this.formBean = resp.data;\r\n          if (resp.data.isEnable == 1) {\r\n            this.formBean.nodeEnable = true;\r\n          } else {\r\n            this.formBean.nodeEnable = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.bindData();\r\n      }\r\n      this.querylocationList();\r\n      this.queryDbControlList();\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData() {\r\n      try {\r\n        this.formBean = Object.assign({}, this.transData.initFormBean);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    /**\r\n     * 保存表单\r\n     **/\r\n    save() {\r\n      this.$refs.serverForm.validate(valid => {\r\n        if (!valid) return;\r\n        let params = {};\r\n        this.formBean.isEnable = this.formBean.nodeEnable == true ? 1 : 0;\r\n        Object.assign(params, this.formBean);\r\n        let httpConfig = {\r\n          url: RESOURCE_PATH,\r\n          data: params\r\n        };\r\n        if (this.transData.id) {\r\n          httpConfig.method = \"PUT\";\r\n          httpConfig.url = RESOURCE_PATH + \"/\" + this.transData.id;\r\n        } else {\r\n          httpConfig.method = \"POST\";\r\n        }\r\n        this.loading = true;\r\n        this.$ajax(httpConfig).then(resp => {\r\n          this.loading = false;\r\n          let str = resp.data;\r\n          //alert(str);\r\n          // this.$dialog.confirm(\" xxx\").then(function(){\r\n\r\n          // }).catch(function(){\r\n\r\n          // });\r\n          //console.log(str);\r\n          this.cancel();\r\n          this.init();\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 返回到数据视图\r\n     **/\r\n    cancel() {\r\n      let queryCache = {\r\n        formBean: this.transData.formBean,\r\n        currentPage: this.transData.currentPage,\r\n        pageSize: this.transData.pageSize\r\n      };\r\n      this.$emit(\"switch\", Object.assign({ statusName: \"table\" }, queryCache));\r\n    },\r\n    \r\n    queryDbControlList() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"db_control\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.dbControlList = [];\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = parseInt(data.dicValue);\r\n          tmp.label = data.dicName;\r\n          this.dbControlList.push(tmp);\r\n        });\r\n      });\r\n    },\r\n    querylocationList() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"location\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = [];\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = parseInt(data.dicValue);\r\n          tmp.label = data.dicName;\r\n          this.locationList.push(tmp);\r\n        });\r\n      });\r\n    },\r\n    loadTags() {\r\n      let loadConfig = {\r\n        method: \"GET\",\r\n        url: \"/dictionary\",\r\n        params: { dicCode: \"nodeTag\" }\r\n      };\r\n      this.$ajax(loadConfig).then(resp => {\r\n        resp.data.rows.forEach(data => {\r\n          let tmp = {};\r\n          tmp.value = data.dicValue;\r\n          tmp.label = data.dicName;\r\n          this.dirList.push(tmp);\r\n        });\r\n      });\r\n    }\r\n  },\r\n  /**\r\n   * 视图挂载\r\n   **/\r\n  mounted() {\r\n    this.init();\r\n    this.loadTags();\r\n  }\r\n};\r\n</script>\r\n"]}]}