{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\menu\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\authority\\menu\\Form.vue","mtime":1681468306529},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default {\r\n  props: {\r\n    transData: Object\r\n  },\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      iconStyles: {\r\n        width: '20px',\r\n        height: '20px',\r\n        margin: '10px',\r\n        padding: '0px',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n      },\r\n      formRule: {\r\n        menuName: [\r\n          {\r\n            required: true,\r\n            message: '请输入菜单名！'\r\n          }\r\n        ],\r\n        menuUrl: [\r\n          {\r\n            required: false,\r\n            message: '非根菜单请输入菜单URL！'\r\n          }\r\n        ],\r\n        menuNo: [\r\n          {\r\n            required: true,\r\n            message: '请输入菜单排序值！'\r\n          }\r\n        ]\r\n      },\r\n      iconDlgShow: false,\r\n      currentIcon: '',\r\n      icons: [],\r\n      isNoPath: this.transData.isNoPath\r\n    }\r\n  },\r\n  methods: {\r\n    init: function () {\r\n      if (this.transData.id) {\r\n        const getMenu = {\r\n          method: 'GET',\r\n          url: `menu/${this.transData.id}`\r\n        }\r\n        this.$ajax(getMenu)\r\n          .then(resp => {\r\n            this.formBean = resp.data\r\n          })\r\n      }\r\n      if (this.transData.parentId) { // 子菜单赋值parentid\r\n        this.formBean.parentMenuId = this.transData.parentId\r\n      }\r\n    },\r\n    save: function () {\r\n      this.$refs.menuForm.validate(valid => {\r\n        if (!valid) return\r\n        let config = {}\r\n        let data = Object.assign({}, this.formBean)\r\n        if (data.menuUrl) {\r\n          data.menuUrl = data.menuUrl.replace(/\\/+/g, '/')\r\n        }\r\n        config.data = data\r\n        delete config.data.createTime\r\n        delete config.data.updateTime\r\n        if (this.formBean.menuId) {\r\n          config.method = 'PUT'\r\n          config.url = `/menu/${this.formBean.menuId}/update`\r\n        } else {\r\n          if (config.data.menuName) {\r\n            // config.data.createUser = 'test'\r\n            // config.data.updateUser = 'test'\r\n            if (!config.data.parentMenuId) {\r\n              config.data.parentMenuId = 0\r\n              config.data.menuFlag = 0\r\n            } else {\r\n              config.data.menuFlag = 1\r\n            }\r\n            config.data.isEnable = true\r\n          }\r\n          config.method = 'POST'\r\n          config.url = '/menu/add'\r\n        }\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      this.$emit('switch')\r\n    },\r\n    showIconDlg: function () {\r\n      this.iconDlgShow = true\r\n      let icons = []\r\n      for (const sheet of document.styleSheets) {\r\n        let rules\r\n        if (sheet.cssRules) {\r\n          rules = sheet.cssRules\r\n        } else {\r\n          rules = sheet.rules\r\n        }\r\n        for (const rule of rules) {\r\n          const cssName = rule.selectorText // .icon-biaoji::before\r\n          if (cssName && cssName.startsWith('.icon-')) {\r\n            // console.log(cssName)\r\n            // const icon = cssName.replace('.icon', 'spdb').replace('::before', '')\r\n            const icon = cssName.replace('.icon', 'iconfont icon').replace('::before', '')\r\n            // console.log(icon)\r\n            icons.push({ value: icon, label: icon })\r\n          }\r\n        }\r\n      }\r\n      this.icons = icons\r\n    },\r\n    selectIcon: function (e) {\r\n      if (e.target.nodeName === 'I') {\r\n        this.currentIcon = e.target.className.replace('iconfont icon', 'spdb')\r\n        this.formBean.menuIconUrl = this.currentIcon\r\n        this.$refs.iconDlgShow.close()\r\n      }\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.init()\r\n  }\r\n}\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";AAwfile":"Form.vue","sourceRoot":"src/view/spdb/authority/menu","sourcesContent":["<template>\r\n  <div>\r\n    <Form ref=\"menuForm\" :label-width=\"100\" :model=\"formBean\" :rules=\"formRule\">\r\n      <Row>\r\n        <Col span=\"10\">\r\n          <FormItem prop=\"menuName\" label=\"菜单名\">\r\n            <Input v-model=\"formBean.menuName\"/>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span=\"10\">\r\n          <FormItem prop=\"menuUrl\" label=\"菜单URL\">\r\n            <Input :disabled=\"isNoPath\" v-model=\"formBean.menuUrl\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"10\">\r\n          <FormItem label=\"菜单描述\">\r\n            <Input v-model=\"formBean.remark\"/>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span=\"10\">\r\n          <FormItem prop=\"menuNo\" label=\"菜单排序值\">\r\n            <Input v-model=\"formBean.menuNo\"/>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"10\">\r\n          <FormItem label=\"菜单图标\">\r\n            <Icon :style=\"iconStyles\" size=\"20\" :type=\"formBean.menuIconUrl\"></Icon>\r\n            <Button type=\"success\" @click=\"showIconDlg()\">选择</Button>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n\r\n    <div>\r\n      <Button type=\"primary\" :loading=\"loading\" icon=\"md-add\" @click=\"save()\">保存</Button>\r\n      <Button type=\"primary\" icon=\"ios-redo-outline\" @click=\"cancel()\">取消</Button>\r\n    </div>\r\n\r\n    <Modal\r\n    v-model=\"iconDlgShow\"\r\n    ref=\"iconDlgShow\"\r\n    width=\"700\"\r\n    :footerHide=\"true\"\r\n    title=\"选择图标\">\r\n      <div @click=\"selectIcon\" style=\"text-align:center\">\r\n        <Icon :style=\"iconStyles\" size=\"24\" v-for=\"icon in icons\" :class=\"icon.value\" :key=\"icon.value\" :type=\"icon.value\"></Icon>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    transData: Object\r\n  },\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      loading: false,\r\n      iconStyles: {\r\n        width: '20px',\r\n        height: '20px',\r\n        margin: '10px',\r\n        padding: '0px',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n      },\r\n      formRule: {\r\n        menuName: [\r\n          {\r\n            required: true,\r\n            message: '请输入菜单名！'\r\n          }\r\n        ],\r\n        menuUrl: [\r\n          {\r\n            required: false,\r\n            message: '非根菜单请输入菜单URL！'\r\n          }\r\n        ],\r\n        menuNo: [\r\n          {\r\n            required: true,\r\n            message: '请输入菜单排序值！'\r\n          }\r\n        ]\r\n      },\r\n      iconDlgShow: false,\r\n      currentIcon: '',\r\n      icons: [],\r\n      isNoPath: this.transData.isNoPath\r\n    }\r\n  },\r\n  methods: {\r\n    init: function () {\r\n      if (this.transData.id) {\r\n        const getMenu = {\r\n          method: 'GET',\r\n          url: `menu/${this.transData.id}`\r\n        }\r\n        this.$ajax(getMenu)\r\n          .then(resp => {\r\n            this.formBean = resp.data\r\n          })\r\n      }\r\n      if (this.transData.parentId) { // 子菜单赋值parentid\r\n        this.formBean.parentMenuId = this.transData.parentId\r\n      }\r\n    },\r\n    save: function () {\r\n      this.$refs.menuForm.validate(valid => {\r\n        if (!valid) return\r\n        let config = {}\r\n        let data = Object.assign({}, this.formBean)\r\n        if (data.menuUrl) {\r\n          data.menuUrl = data.menuUrl.replace(/\\/+/g, '/')\r\n        }\r\n        config.data = data\r\n        delete config.data.createTime\r\n        delete config.data.updateTime\r\n        if (this.formBean.menuId) {\r\n          config.method = 'PUT'\r\n          config.url = `/menu/${this.formBean.menuId}/update`\r\n        } else {\r\n          if (config.data.menuName) {\r\n            // config.data.createUser = 'test'\r\n            // config.data.updateUser = 'test'\r\n            if (!config.data.parentMenuId) {\r\n              config.data.parentMenuId = 0\r\n              config.data.menuFlag = 0\r\n            } else {\r\n              config.data.menuFlag = 1\r\n            }\r\n            config.data.isEnable = true\r\n          }\r\n          config.method = 'POST'\r\n          config.url = '/menu/add'\r\n        }\r\n        this.loading = true\r\n        this.$ajax(config)\r\n          .then(resp => {\r\n            this.cancel()\r\n          })\r\n      })\r\n    },\r\n    cancel: function () {\r\n      this.$emit('switch')\r\n    },\r\n    showIconDlg: function () {\r\n      this.iconDlgShow = true\r\n      let icons = []\r\n      for (const sheet of document.styleSheets) {\r\n        let rules\r\n        if (sheet.cssRules) {\r\n          rules = sheet.cssRules\r\n        } else {\r\n          rules = sheet.rules\r\n        }\r\n        for (const rule of rules) {\r\n          const cssName = rule.selectorText // .icon-biaoji::before\r\n          if (cssName && cssName.startsWith('.icon-')) {\r\n            // console.log(cssName)\r\n            // const icon = cssName.replace('.icon', 'spdb').replace('::before', '')\r\n            const icon = cssName.replace('.icon', 'iconfont icon').replace('::before', '')\r\n            // console.log(icon)\r\n            icons.push({ value: icon, label: icon })\r\n          }\r\n        }\r\n      }\r\n      this.icons = icons\r\n    },\r\n    selectIcon: function (e) {\r\n      if (e.target.nodeName === 'I') {\r\n        this.currentIcon = e.target.className.replace('iconfont icon', 'spdb')\r\n        this.formBean.menuIconUrl = this.currentIcon\r\n        this.$refs.iconDlgShow.close()\r\n      }\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.init()\r\n  }\r\n}\r\n</script>\r\n<style>\r\n/* .ivu-modal-body\r\n{\r\n    width:700px;\r\n    height:auto;\r\n    word-wrap: break-word;\r\n    padding: 16px;\r\n    font-size: 10px;\r\n    line-height: 1.5;\r\n} */\r\n</style>\r\n"]}]}