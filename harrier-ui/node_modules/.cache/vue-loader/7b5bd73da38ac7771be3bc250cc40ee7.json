{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\platformConfig\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\spdb\\systemsetting\\platformConfig\\Table.vue","mtime":1681468306548},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport utils from '@/common/utils'\r\nimport common from '@/mixins/common'\r\n\r\nconst RESOURCE_PATH = '/udsSystem'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      formBean3: {},\r\n      formBean2: {},\r\n      dbControlList: [],\r\n      dbControlName: {},\r\n      allStop: {\r\n        show: false\r\n      },\r\n      allStart: {\r\n        show: false\r\n      },\r\n      loadingStatus: false,\r\n      loadingStatus2: false,\r\n      loadingdel: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      statusList: [\r\n        {\r\n          value: '1',\r\n          label: '执行节点并发配置'\r\n        },\r\n        {\r\n          value: '0',\r\n          label: '调度系统并发配置'\r\n        }\r\n\r\n      ],\r\n      strategyList: [],\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '逻辑集群',\r\n          key: 'serverRoleNameGroup',\r\n          minWidth: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('Span', {}, this.dbControlName[row.serverRoleNameGroup])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '脚本信号文件保存天数',\r\n        // \tkey: 'dataKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '脚本日志保存天数',\r\n        // \tkey: 'logKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '记录保存天数',\r\n        // \tkey: 'recordKeepDay',\r\n        // },\r\n\r\n        // {\r\n        //   title: '该平台最大运行作业数',\r\n        //   key: 'sumMax',\r\n        //   width: 160,\r\n        //   align: 'center'\r\n        // },\r\n        {\r\n          title: '最大运行作业数',\r\n          key: 'maxRunJob',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '分发策略',\r\n          key: 'select',\r\n          align: 'center',\r\n          minWidth: 150,\r\n          render: (h, params) => {\r\n            let strategy = params.row.select\r\n            let str = ''\r\n            this.strategyList.forEach(data1 => {\r\n              if (data1.value == strategy) {\r\n                str = data1.label\r\n              }\r\n            })\r\n            if (str == '') {\r\n              str = strategy\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        },\r\n        {\r\n          title: '策略参数',\r\n          key: 'selectPro',\r\n          // width: 200,\r\n          minWidth: 200,\r\n          // 超出长度省略符号\r\n          render: (h, params) => {\r\n            let str = params.row.selectPro\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1 // params.row.strategyPro,\r\n\r\n                },\r\n                on: {\r\n                  click: (e) => {\r\n                    e.stopPropagation()\r\n                  }\r\n                }\r\n              }, params.row.selectPro)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '是否启用平台数据',\r\n          key: 'usePlatformMsg',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '描述',\r\n          key: 'des',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 100,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let platform = row.platform\r\n                    let sys = row.systems\r\n                    let dbControl = row.serverRoleNameGroup\r\n                    let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                    this.$emit('switch', Object.assign({ platform: platform, sys: sys, dbControl: dbControl, data: row }, queryCache)) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      platformData2: [],\r\n      platformData3: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    paramChange () {\r\n      if (this.formBean.param == 1) {\r\n        this.$emit('switch', { mtable: 'true' })\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //\tthis.formBean.system = \"\";\r\n      //\tthis.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      // this.queryDbControlList()\r\n      this.search()\r\n      this.getPlatformList()\r\n      // this.queryPlatform()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    queryDbControlList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'db_control' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.dbControlList = []\r\n        resp.data.rows.forEach(data => {\r\n          this.dbControlName[parseInt(data.dicValue)] = data.dicName\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.dbControlList.push(tmp)\r\n        })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      this.selection = []\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.currentPage = this.page.current\r\n      // params.pageSize = this.page.size\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          resp.data.rows.forEach(data1 => {\r\n            if (data1.usePlatform) {\r\n              data1.usePlatform = '1'\r\n              data1.usePlatformMsg = '启用'\r\n            } else {\r\n              data1.usePlatform = '0'\r\n              data1.usePlatformMsg = '禁用'\r\n            }\r\n            // if (data1.strategy == 0) {\r\n            //   data1.strategy = '普通策略'\r\n            // } else {\r\n            //   // alert(data1.strategy);\r\n            //   data1.strategy = '指定机器分发机器'\r\n            // }\r\n\r\n            data1.strategy = data1.select + ''\r\n          })\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    allStartOpen () {\r\n      this.allStart.show = true\r\n    },\r\n    allStopOpen () {\r\n      this.allStop.show = true\r\n    },\r\n    allstop () {\r\n      // this.$refs.allStopForm.validate(valid => {\r\n      // if(!valid) return;\r\n      if (!this.formBean3.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean3)\r\n      params.authps = this.formBean3.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean3.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStop'\r\n      }\r\n      this.loadingStatus2 = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus2 = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStop.show = false\r\n            this.search()\r\n          }\r\n        })\r\n      // });\r\n    },\r\n    allstart () {\r\n      // if(!this.formBean2.maxRunJob){\r\n      // \tthis.$Message.warning(\"请输入默认值\");\r\n      // \treturn ;\r\n      // }\r\n      if (!this.formBean2.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean2)\r\n      params.authps = this.formBean2.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean2.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStart'\r\n      }\r\n      this.loadingStatus = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStart.show = false\r\n            this.search()\r\n          }\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch', null)\r\n    },\r\n\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    // harrier getPlatformList\r\n    getPlatformList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          let platformList = []\r\n          resp.data.forEach(data => {\r\n            platformList.push(data.platform)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          platformList = Array.from(new Set(platformList))\r\n          this.platformData = []\r\n          this.platformData2 = []\r\n          this.platformData3 = []\r\n          platformList.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          this.search()\r\n        })\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              if (this.formBean.platform === data.platform && data.systems !== '*') {\r\n                let tmp = {}\r\n                tmp.value = data.systems\r\n                tmp.label = data.systems\r\n                this.systemData.push(tmp)\r\n              }\r\n            })\r\n          })\r\n      }\r\n    },\r\n    // harrier test end\r\n    querySelectType () {\r\n      this.strategyList = []\r\n      let params = { dicCode: 'selectType' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicValue\r\n              temp.value = parseInt(data1.dicKey)\r\n              temp.label = data1.dicValue\r\n              this.strategyList.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del: function () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/udsSystem/${ids}/delete`,\r\n        data: {}\r\n      }\r\n      this.loadingdel = true\r\n      this.$ajax(deleteConfig)\r\n        .then(resp => {\r\n          this.loadingdel = false\r\n          this.search()\r\n        })\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.querySelectType()\r\n    // this.init()\r\n  }\r\n}\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappingsfile":"Table.vue","sourceRoot":"src/view/spdb/systemsetting/platformConfig","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div class=\"spdb-form\">\r\n\t\t\t<Form ref=\"systemForm\" :model=\"formBean\" :label-width=\"75\" :rules='ruleValidate'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<!--\r\n\t\t\t\t\t<Col span=\"6\">\r\n\t\t\t\t\t\t<Form-Item prop=\"param\" label=\"配置选择\">\r\n\t\t\t\t\t\t\t<Select filterable placeholder=\"请选择执行节点或者调度系统\" v-model=\"formBean.param\" style=\"width:190px\" @on-change=\"paramChange()\">\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in statusList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<Form-Item label=\"调度系统并发配置\" label-width=\"110\">\r\n\t\t\t\t\t\t</Form-Item>\r\n\t\t\t\t\t</Col>-->\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem prop=\"platform\" label=\"平台名\">\r\n\t\t\t\t\t\t<Select filterable v-model=\"formBean.platform\" @on-change=\"getSystemList\" clearable>\r\n\t\t\t\t\t\t\t<Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n              <Select ref=\"refsystem\" filterable v-model=\"formBean.systems\" placeholder=\"先选平台\" clearable>\r\n\t\t\t\t\t\t\t  <Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t  </Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n          <Col span=\"4\">\r\n            <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n          </Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"是否启用\" >\r\n            \t<Select filterable v-model=\"formBean.usePlatform\" clearable>\r\n                <Option value=\"1\">启用</Option>\r\n                <Option value=\"0\">禁用</Option>\r\n\t\t\t\t\t\t  </Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t\t<Modal id=\"allStart\"\r\n\t\t\tv-model=\"allStart.show\"\r\n\t\t\ttitle=\"全平台恢复并发\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form  ref=\"allStartForm\" :label-width=\"150\"  inline>\r\n\t\t\t\t\t<!--\t<Row>\r\n\t\t\t\t\t\t\t<FormItem prop=\"maxRunJob\" label=\"最大运行作业数默认值\">\r\n\t\t\t\t\t\t\t<input type=\"number\" style=\"border-radius:5px\" v-model=\"formBean2.maxRunJob\"  oninput=\"if(value<0)value=0\" />\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>-->\r\n\t\t\t\t\t\t<Row>\r\n              <Col span=\"9\">\r\n                <FormItem style='width:100%'  label=\"恢复并发平台\">\r\n                  <Select filterable v-model=\"formBean2.platform\" clearable>\r\n                    <Option v-for=\"item in platformData2\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"9\">\r\n                    <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean2.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n                </Col>\r\n\t\t\t\t\t\t\t<Button style='width:10%' type=\"primary\" @click=\"allstart\" :loading=\"loadingStatus\">\r\n\t\t\t\t\t\t\t\t{{ loadingStatus ? 'Loading' : '恢复' }}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<Modal id=\"allStop\"\r\n\t\t\tv-model=\"allStop.show\"\r\n\t\t\ttitle=\"全平台停止并发\"\r\n\t\t\twidth='50%'\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form  ref=\"allStopForm\" :label-width=\"150\"  inline>\r\n\t\t\t\t\t\t<Row>\r\n             <Col span=\"9\">\r\n                <FormItem style='width:100%'  label=\"停止并发平台:\">\r\n                  <Select filterable v-model=\"formBean3.platform\" clearable>\r\n                    <Option v-for=\"item in platformData3\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span=\"9\">\r\n                    <FormItem prop=\"dbControl\" label=\"逻辑集群\" >\r\n                        <Select\r\n                            :transfer=\"true\"\r\n                            filterable\r\n                            v-model=\"formBean3.dbControl\"\r\n                            clearable\r\n                        >\r\n                            <Option\r\n                                v-for=\"item in dbControlList\"\r\n                                :value=\"item.value\"\r\n                                :key=\"item.value\"\r\n                                >{{ item.label }}</Option\r\n                            >\r\n                        </Select>\r\n                    </FormItem>\r\n                </Col>\r\n\t\t\t\t\t\t\t\t<Button style='width:10%' type=\"primary\" @click=\"allstop\" :loading=\"loadingStatus2\">\r\n\t\t\t\t\t\t\t\t\t{{ loadingStatus2 ? 'Loading' : '停止' }}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"demand\">查询</Button>\r\n\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除查询</Button>\r\n      <Button type=\"primary\" icon=\"md-add\" @click=\"add\">新增</Button>\r\n      <Button type=\"primary\" :loading=\"loadingdel\" :disabled=\"ctrlDisable\" icon=\"ios-trash-outline\" @click=\"del()\">删除</Button>\r\n\t\t\t<!-- <Button type=\"primary\" icon=\"md-cloud-download\" @click=\"download\">下载</Button>\r\n\t\t\t<Button type=\"primary\"  @click=\"allStartOpen\" :requestConfig=request.delReq>全平台恢复并发 </Button>\r\n\t\t\t<Button type=\"primary\"  @click=\"allStopOpen\" :requestConfig=request.delReq>全平台停止并发</Button> -->\r\n\t\t</div>\r\n\t\t<div class=\"spdb-table\">\r\n\t\t\t<!-- <Table :columns=\"gridColumns\" :data=\"gridData\" stripe @on-selection-change=\"select\"></Table> -->\r\n      <Table :loading=\"loading\" :columns=\"gridColumns\" :data=\"gridData\" @on-selection-change=\"select\"></Table>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"spdb-page\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport utils from '@/common/utils'\r\nimport common from '@/mixins/common'\r\n\r\nconst RESOURCE_PATH = '/udsSystem'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n    \t\t\treturn {}\r\n      }\r\n    }\r\n  },\r\n  mixins: [ common ],\r\n  data: function () {\r\n    return {\r\n      formBean: {},\r\n      formBean3: {},\r\n      formBean2: {},\r\n      dbControlList: [],\r\n      dbControlName: {},\r\n      allStop: {\r\n        show: false\r\n      },\r\n      allStart: {\r\n        show: false\r\n      },\r\n      loadingStatus: false,\r\n      loadingStatus2: false,\r\n      loadingdel: false,\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      statusList: [\r\n        {\r\n          value: '1',\r\n          label: '执行节点并发配置'\r\n        },\r\n        {\r\n          value: '0',\r\n          label: '调度系统并发配置'\r\n        }\r\n\r\n      ],\r\n      strategyList: [],\r\n      gridColumns: [\r\n        {\r\n          type: 'selection',\r\n          width: 60,\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'systems',\r\n          minWidth: 100\r\n        },\r\n        {\r\n          title: '逻辑集群',\r\n          key: 'serverRoleNameGroup',\r\n          minWidth: 100\r\n          // render: (h, { column, index, row }) => {\r\n          //   return h('div', [\r\n          //     h('Span', {}, this.dbControlName[row.serverRoleNameGroup])\r\n          //   ])\r\n          // }\r\n        },\r\n        // {\r\n        // \ttitle: '脚本信号文件保存天数',\r\n        // \tkey: 'dataKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '脚本日志保存天数',\r\n        // \tkey: 'logKeepDay',\r\n        // },\r\n        // {\r\n        // \ttitle: '记录保存天数',\r\n        // \tkey: 'recordKeepDay',\r\n        // },\r\n\r\n        // {\r\n        //   title: '该平台最大运行作业数',\r\n        //   key: 'sumMax',\r\n        //   width: 160,\r\n        //   align: 'center'\r\n        // },\r\n        {\r\n          title: '最大运行作业数',\r\n          key: 'maxRunJob',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '分发策略',\r\n          key: 'select',\r\n          align: 'center',\r\n          minWidth: 150,\r\n          render: (h, params) => {\r\n            let strategy = params.row.select\r\n            let str = ''\r\n            this.strategyList.forEach(data1 => {\r\n              if (data1.value == strategy) {\r\n                str = data1.label\r\n              }\r\n            })\r\n            if (str == '') {\r\n              str = strategy\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        },\r\n        {\r\n          title: '策略参数',\r\n          key: 'selectPro',\r\n          // width: 200,\r\n          minWidth: 200,\r\n          // 超出长度省略符号\r\n          render: (h, params) => {\r\n            let str = params.row.selectPro\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1 // params.row.strategyPro,\r\n\r\n                },\r\n                on: {\r\n                  click: (e) => {\r\n                    e.stopPropagation()\r\n                  }\r\n                }\r\n              }, params.row.selectPro)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '是否启用平台数据',\r\n          key: 'usePlatformMsg',\r\n          align: 'center',\r\n          minWidth: 110\r\n        },\r\n        {\r\n          title: '描述',\r\n          key: 'des',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '操作',\r\n          align: 'center',\r\n          width: 100,\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let platform = row.platform\r\n                    let sys = row.systems\r\n                    let dbControl = row.serverRoleNameGroup\r\n                    let queryCache = { formBean: this.formBean, currentPage: this.page.current, pageSize: this.page.size }\r\n                    this.$emit('switch', Object.assign({ platform: platform, sys: sys, dbControl: dbControl, data: row }, queryCache)) // 提交form事件，在parent中显示form\r\n                  }\r\n                }\r\n              }, '编辑')\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      gridData: [],\r\n      systemData: [],\r\n      platformData: [],\r\n      platformData2: [],\r\n      platformData3: [],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 10,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      ruleValidate: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    paramChange () {\r\n      if (this.formBean.param == 1) {\r\n        this.$emit('switch', { mtable: 'true' })\r\n      }\r\n    },\r\n    queryPlatform () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getPlatformList'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          resp.data.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n          })\r\n        })\r\n    },\r\n    querySystem () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/msys/getSysList',\r\n        params: { platform: this.formBean.platform }\r\n      }\r\n\r\n      // modify by jcjin 20200529 for systemData返回值调整为key-value\r\n      // this.$ajax(loadConfig)\r\n      // .then(resp => {\r\n      //\tthis.formBean.system = \"\";\r\n      //\tthis.systemData = resp.data;\r\n      //\r\n      // })\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              let tmp = {}\r\n              tmp.value = data\r\n              tmp.label = data\r\n              this.systemData.push(tmp)\r\n            })\r\n          })\r\n      }\r\n    },\r\n    filterMethod (value, option) {\r\n      return option.toUpperCase().indexOf(value.toUpperCase()) !== -1\r\n    },\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      if (this.transData.currentPage) {\r\n        this.formBean = this.transData.formBean\r\n        this.page.current = this.transData.currentPage\r\n        this.page.size = this.transData.pageSize\r\n      }\r\n      // this.queryDbControlList()\r\n      this.search()\r\n      this.getPlatformList()\r\n      // this.queryPlatform()\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    queryDbControlList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'db_control' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.dbControlList = []\r\n        resp.data.rows.forEach(data => {\r\n          this.dbControlName[parseInt(data.dicValue)] = data.dicName\r\n          let tmp = {}\r\n          tmp.value = parseInt(data.dicValue)\r\n          tmp.label = data.dicName\r\n          this.dbControlList.push(tmp)\r\n        })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      this.selection = []\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      // params.currentPage = this.page.current\r\n      // params.pageSize = this.page.size\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/selectAll',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loading = false\r\n          this.gridData = resp.data.rows\r\n          this.page.total = resp.data.total\r\n          resp.data.rows.forEach(data1 => {\r\n            if (data1.usePlatform) {\r\n              data1.usePlatform = '1'\r\n              data1.usePlatformMsg = '启用'\r\n            } else {\r\n              data1.usePlatform = '0'\r\n              data1.usePlatformMsg = '禁用'\r\n            }\r\n            // if (data1.strategy == 0) {\r\n            //   data1.strategy = '普通策略'\r\n            // } else {\r\n            //   // alert(data1.strategy);\r\n            //   data1.strategy = '指定机器分发机器'\r\n            // }\r\n\r\n            data1.strategy = data1.select + ''\r\n          })\r\n        })\r\n    },\r\n    demand () {\r\n      this.page.current = 1\r\n      this.search()\r\n    },\r\n    allStartOpen () {\r\n      this.allStart.show = true\r\n    },\r\n    allStopOpen () {\r\n      this.allStop.show = true\r\n    },\r\n    allstop () {\r\n      // this.$refs.allStopForm.validate(valid => {\r\n      // if(!valid) return;\r\n      if (!this.formBean3.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean3)\r\n      params.authps = this.formBean3.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean3.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStop'\r\n      }\r\n      this.loadingStatus2 = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus2 = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStop.show = false\r\n            this.search()\r\n          }\r\n        })\r\n      // });\r\n    },\r\n    allstart () {\r\n      // if(!this.formBean2.maxRunJob){\r\n      // \tthis.$Message.warning(\"请输入默认值\");\r\n      // \treturn ;\r\n      // }\r\n      if (!this.formBean2.platform) {\r\n        this.$Message.warning('请选择平台')\r\n        return\r\n      }\r\n      let params = {}\r\n      Object.assign(params, this.formBean2)\r\n      params.authps = this.formBean2.platform + '*'\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: params\r\n      }\r\n      if (this.formBean2.platform) {\r\n        httpConfig.method = 'PUT'\r\n        httpConfig.url = RESOURCE_PATH + '/allStart'\r\n      }\r\n      this.loadingStatus = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.loadingStatus = false\r\n          // let str=resp.data;\r\n          if (resp.status && resp.status == 200) {\r\n            this.allStart.show = false\r\n            this.search()\r\n          }\r\n        })\r\n    },\r\n\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.formBean = {}\r\n      this.selection = []\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch', null)\r\n    },\r\n\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    // harrier getPlatformList\r\n    getPlatformList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          let platformList = []\r\n          resp.data.forEach(data => {\r\n            platformList.push(data.platform)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          platformList = Array.from(new Set(platformList))\r\n          this.platformData = []\r\n          this.platformData2 = []\r\n          this.platformData3 = []\r\n          platformList.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data\r\n            tmp.label = data\r\n            this.platformData.push(tmp)\r\n            this.platformData2.push(tmp)\r\n            this.platformData3.push(tmp)\r\n            // this.formBean.platform = \"UDS\";\r\n          })\r\n          this.search()\r\n        })\r\n    },\r\n    // harrier getSystemList\r\n    getSystemList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/udsSystem/listQuery'\r\n      }\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.formBean.platform) {\r\n        this.$ajax(loadConfig)\r\n          .then(resp => {\r\n            resp.data.forEach(data => {\r\n              if (this.formBean.platform === data.platform && data.systems !== '*') {\r\n                let tmp = {}\r\n                tmp.value = data.systems\r\n                tmp.label = data.systems\r\n                this.systemData.push(tmp)\r\n              }\r\n            })\r\n          })\r\n      }\r\n    },\r\n    // harrier test end\r\n    querySelectType () {\r\n      this.strategyList = []\r\n      let params = { dicCode: 'selectType' }\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mDictionary/selectDicCode',\r\n        params: params\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            resp.data.forEach(data1 => {\r\n              let temp = {}\r\n              temp.key = data1.dicValue\r\n              temp.value = parseInt(data1.dicKey)\r\n              temp.label = data1.dicValue\r\n              this.strategyList.push(temp)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 删除\r\n     **/\r\n    del: function () {\r\n      const ids = Array.from(this.selection, e => e.id)\r\n      let deleteConfig = {\r\n        method: 'DELETE',\r\n        url: `/udsSystem/${ids}/delete`,\r\n        data: {}\r\n      }\r\n      this.loadingdel = true\r\n      this.$ajax(deleteConfig)\r\n        .then(resp => {\r\n          this.loadingdel = false\r\n          this.search()\r\n        })\r\n    }\r\n  },\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    this.querySelectType()\r\n    // this.init()\r\n  }\r\n}\r\n</script>\r\n"]}]}