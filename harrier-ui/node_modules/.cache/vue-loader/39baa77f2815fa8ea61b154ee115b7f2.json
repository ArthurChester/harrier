{"remainingRequest":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\opjobsummary\\Errorlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\src\\view\\app\\alarm\\opjobsummary\\Errorlist.vue","mtime":1681468306505},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\IdeaProjects\\harrier\\harrier-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n// import * as echarts from \"echarts\";\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\n// const platforms = store.getters.getPlatforms\r\nconst RESOURCE_PATH = '/alarm'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const validAlarmStatus = (rule, value, callback) => {\r\n      if (value === '0') {\r\n        return callback(new Error('告警状态不能为未处理'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    return {\r\n      noJobCheckList: [100, 101, 300, 301, 302, 303, 304, 400, 409, 420, 430, 450],\r\n      upJobMsgStyle: 'upJobMsgGreen',\r\n      upJobInfo: {\r\n        message: '',\r\n        messageSp: ''\r\n      },\r\n      strategyList: {\r\n        '0': '普通策略',\r\n        '1': '指定机器分发机器',\r\n        '2': '指定机器序号分发',\r\n        '3': '指定机器标签分发'\r\n      },\r\n      jobtypeList: {},\r\n      locationList: {},\r\n      showDownstreamTable: {\r\n        showFistFloor: true,\r\n        showSecondFloor: false,\r\n        showThirdFloor: false,\r\n        showKeyJob: false\r\n      },\r\n      jobCheck: {\r\n        isShowCheckDepend: false,\r\n        isShowCheckSchedule: false,\r\n        isShowAnalyPlatPer: false,\r\n        isShowAnalyLog: false,\r\n        isShowAnalyKeyLink: false\r\n      },\r\n      menuData: [\r\n        { '100': 'isShowCheckDepend' },\r\n        { '101': 'isShowCheckSchedule' },\r\n        { '102': 'isShowAnalyPlatPer' },\r\n        { '103': 'isShowAnalyLog' },\r\n        { '104': 'isShowAnalyKeyLink' }\r\n      ],\r\n      waitSignalFile: false,\r\n      isInitialize: false,\r\n      defaultPanel: [],\r\n      collapseData: [],\r\n      baselineBean: {},\r\n      keyJobBean: {},\r\n      showSendTypeData: [],\r\n      sendTypeBean: {},\r\n      sendTypeList: [],\r\n      sendTypeDataBean: {},\r\n      timelineItemData: [],\r\n      lineSearchBean: {\r\n        start: '',\r\n        end: ''\r\n      },\r\n      frequencyList: [],\r\n      triggerList: [],\r\n      triggerBean: {},\r\n      frequencyBean: {},\r\n      timeTriggerOp: {\r\n        show: false\r\n      },\r\n      frequencyOp: {\r\n        show: false\r\n      },\r\n      logContent: '',\r\n      configData: {},\r\n      timeTriggerData: {},\r\n      frequencyData: {},\r\n      weightList: [],\r\n      isShowFreOrTime: false,\r\n      isShowTimeTriggerData: false,\r\n      isShowFrequencyData: false,\r\n      isShowWeight: false,\r\n      isShowStrategy: false,\r\n      row: {},\r\n      platformData: [],\r\n      systemData: [],\r\n      loading: false,\r\n      errorHandle: {\r\n        show: false,\r\n        title: '',\r\n        id: ''\r\n      },\r\n      isShowJob: true,\r\n      isShowInflunceSys: false,\r\n      isShowDoneStream: false,\r\n      affectDownStringKeyJobList: [],\r\n      downStreamData: [],\r\n      downStreamColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'system',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '影响数量',\r\n          key: 'affectNum',\r\n          align: 'center'\r\n        }\r\n      ],\r\n      upstreamColumns: [\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 200\r\n        },\r\n        {\r\n          title: 'job_date',\r\n          key: 'jobDate',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          minWidth: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.matchedData(row.job, 'frequency')\r\n                      this.frequencyOp.show = true\r\n                    } else if (row.jobType == 'C') {\r\n                      this.matchedData(row.job, 'trigger')\r\n                      this.timeTriggerOp.show = true\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          key: 'lastStatus',\r\n          minWidth: 120\r\n        }\r\n      ],\r\n      upstreamData: [],\r\n      rootFailData: [],\r\n      depSuccData: [],\r\n      depFailData: [],\r\n      baseBean: {\r\n        job: '',\r\n        jobDate: '',\r\n        pendingTime: '',\r\n        dispatcherTime: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        alarmContent: '',\r\n        mcontactuser: '',\r\n        lastStatus: '',\r\n        alarmCnt: ''\r\n      },\r\n      recordColumns: [\r\n        {\r\n          title: '执行次数',\r\n          width: 100,\r\n          key: 'numTimes'\r\n        },\r\n        {\r\n          title: 'log',\r\n          key: 'logName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.logDir,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadLogfile(row)\r\n                  }\r\n                }\r\n              }, row.logName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'script',\r\n          key: 'scriptName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, row.scriptName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          width: 180,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          width: 180,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (endTimeStr == '2099') {\r\n              endTimeStr = ''\r\n            } else {\r\n              endTimeStr = params.row.endTime\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, endTimeStr)\r\n          }\r\n        },\r\n        {\r\n          title: '耗时',\r\n          width: 100,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let etime = null\r\n            let startTime = null\r\n            let elapsed = ''\r\n            let str = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (str == '2099') {\r\n              elapsed = ''\r\n            } else {\r\n              etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss')\r\n              startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss')\r\n              let e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6))\r\n\t\t        \tlet s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6))\r\n              // let ss=\r\n              let second = parseInt((e.getTime() -  s.getTime())) / 1000\r\n              let hourTime = 0\r\n              let minuteTime = 0\r\n              let secondTime = 0\r\n              if (second > 60) {\r\n                minuteTime = Math.floor(second / 60)\r\n                secondTime = Math.floor(second % 60)\r\n                if (minuteTime >= 60) {\r\n                  hourTime = Math.floor(minuteTime / 60)\r\n                  minuteTime = Math.floor(minuteTime % 60)\r\n                } else {\r\n                  hourTime = 0\r\n                }\r\n              } else {\r\n                hourTime = 0\r\n                minuteTime = 0\r\n                if (second == 60) {\r\n                  minuteTime = 1\r\n                  secondTime = 0\r\n                } else {\r\n                  secondTime = second\r\n                }\r\n              }\r\n              elapsed = this.addZero(hourTime) + ':' + this.addZero(minuteTime) + ':' + this.addZero(secondTime)\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, elapsed)\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          width: 110,\r\n          key: 'jobDate'\r\n        },\r\n        {\r\n          title: '运行状态',\r\n          width: 110,\r\n          key: 'returnCode',\r\n          render: (h, params) => {\r\n            let str = ''\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (params.row.returnCode == 0) {\r\n              str = 'Done'\r\n            } else {\r\n              str = 'Failed'\r\n            }\r\n            if (endTimeStr == '2099') {\r\n              str = 'Running'\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        }\r\n      ],\r\n      recordData: [],\r\n      formRule: {\r\n        operationType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationTime: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationUser: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        alarmStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }, { validator: validAlarmStatus, trigger: 'blur' }]\r\n      },\r\n      alarmFormRule: {\r\n        localDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      alarmTypelist: [],\r\n      userlist: {},\r\n      userMap: {},\r\n      userIds: {},\r\n      cuInfo: {\r\n        show: false\r\n      },\r\n      errorDiagnosis: {\r\n        show: false\r\n      },\r\n      cuInfoFormBean: {},\r\n      operations: [\r\n        {\r\n          label: '置虚跳过',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '再次执行',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '手工触发',\r\n          value: '2'\r\n        },\r\n        {\r\n          label: '置Done',\r\n          value: '3'\r\n        },\r\n        {\r\n          label: '中止执行',\r\n          value: '4'\r\n        },\r\n        {\r\n          label: '自动完成',\r\n          value: '5'\r\n        }\r\n      ],\r\n      operationTypeList: [],\r\n      alarmstatusList: [\r\n        {\r\n          label: '未处理',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '已处理',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '暂停告警',\r\n          value: '2'\r\n        }],\r\n      alarmBean: { alarmTime: utils.fmtDate(new Date(), 'yyyy-MM-dd') },\r\n      formBean: {},\r\n      tabObj: { alarmTab: true, jobdetail: false, showTable: true },\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      gridColumns: [\r\n        // {\r\n        //   width: 90,\r\n        //   title: '序号',\r\n        //   align: 'center',\r\n        //   sortable: true,\r\n        //   key: 'id',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('a', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // fontSize: '32px',\r\n        //           // fontWeight: 'normal',\r\n        //           // color: '#7EC0EE'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             // Object.assign({},{id: id, statusName: \"jobdetail\",alarmTab: false},this.getPageParam())\r\n        //             this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n        //           }\r\n        //         }\r\n        //       }, row.id)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '平台名',\r\n          width: 64,\r\n          sortable: true,\r\n          align: 'center',\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          sortable: true,\r\n          width: 64,\r\n          align: 'center',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          // align: 'center',\r\n          minWidth: 250,\r\n          // maxWidth: 400,\r\n          sortable: true,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // fontSize: '32px',\r\n                  // fontWeight: 'normal',\r\n                  // color: '#7EC0EE'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n\r\n                    // let id = row.job\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n\r\n                    // let id = row.job\r\n                    // this.transData.jobName = row.job\r\n                    // this.switchTab('jobdetail'); //提交form事件，在parent中显示form\r\n                    // this.tabObj.alarmTab = false\r\n                    // // Object.assign({}, {id: id,statusName: \"alarmlog\",jobData: row},this.getPageParam())\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '告警码',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 80,\r\n          key: 'alarmType'\r\n        },\r\n        {\r\n          title: '告警时间',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 160,\r\n          key: 'times'\r\n        },\r\n        {\r\n          title: '告警内容',\r\n          sortable: true,\r\n          // align: 'center',\r\n          minWidth: 150,\r\n          // maxWidth: 450,\r\n          ellipsis: true,\r\n          key: 'content',\r\n          render: (h, { column, index, row }) => {\r\n            let color = 'green'\r\n            let texts = ''\r\n            if (row.alarmStatus === 'WARN') {\r\n              color = 'red'\r\n            } else if (row.alarmStatus === 'DEAL') {\r\n              color = '#FF8E16'\r\n            } else if (row.alarmStatus === 'END') {\r\n              color = 'black'\r\n            }\r\n            texts = row.content\r\n            if (texts != null) {\r\n              if (texts.length > 10) {\r\n                texts = texts.slice(0, 10) + '...'\r\n              } else {\r\n                texts = row.content\r\n              }\r\n            } else {\r\n              return\r\n            }\r\n            let str = row.content\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n            str1 = str1 + str\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1\r\n                }\r\n              }, [\r\n                h('span', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    color: color\r\n                  }\r\n                }, row.content)\r\n              ])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理时间',\r\n          width: 120,\r\n          align: 'center',\r\n          key: 'operationTime'\r\n          // render: (h, {column, index, row}) => {\r\n\r\n          // }\r\n        },\r\n        // {\r\n        //   title: '影响关键应用',\r\n        //   minWidth: 90,\r\n        //   maxWidth: 100,\r\n        //   key: 'influnceSys',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('span', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showCuInfo(row)\r\n        //           }\r\n        //         }\r\n        //       }, row.influnceSys)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '联系组',\r\n          width: 90,\r\n          align: 'center',\r\n          key: 'noticeGroupName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showCuInfo(row)\r\n                  }\r\n                }\r\n              }, this.userMap[row.noticeGroupName] ? this.userMap[row.noticeGroupName] : row.noticeGroupName)\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '报错诊断',\r\n        //   width: 80,\r\n        //   align: 'center',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     let dis = false\r\n        //     let col = '#2d8cf0'\r\n        //     if (row.alarmType) {\r\n        //       if (this.noJobCheckList.includes(parseInt(row.alarmType))) {\r\n        //         dis = true\r\n        //         col = '#bbbec4'\r\n        //       }\r\n        //     }\r\n        //     // this.noJobCheckList\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'text',\r\n        //           disabled: dis\r\n        //         },\r\n        //         style: {\r\n        //           fontSize: '14px',\r\n        //           color: col,\r\n        //           // background: 0 0 ,\r\n        //           backgroundColor: 'rgb(0, 0, 0, 0)',\r\n        //           textDecoration: 'none',\r\n        //           outline: '0',\r\n        //           cursor: 'pointer'\r\n        //           // transition: color .2s ease\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showErrorDiagnosis(row)\r\n        //           }\r\n        //         }\r\n        //       }, '详情')\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '详情',\r\n          width: 50,\r\n          // fixed: 'right',\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理登记',\r\n          align: 'center',\r\n          width: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '10px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showErrorHandle(row, index)\r\n                  }\r\n                }\r\n              }, '登记')\r\n\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      alarmGridData: [],\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 100,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      listData: [],\r\n      showData: [],\r\n      timer: null,\r\n      // graph: null,\r\n      platformconcGraph: null,\r\n      nodeGraph: null\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      this.search()\r\n      this.getsendTypeList()\r\n      // if (this.transData.currentPage) {\r\n      //   this.alarmBean = this.transData.formBean\r\n      //   this.page.current = this.transData.currentPage\r\n      //   this.page.size = this.transData.pageSize\r\n      // }\r\n      // if (!this.alarmBean.platform) {\r\n      //   if (!platforms.includes('ROLE_ADMIN')) {\r\n      //     this.alarmBean.platform = platforms[0]\r\n      //     this.querySystem()\r\n      //   }\r\n      // }\r\n      // this.loaduser()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.querylocationList()\r\n    },\r\n    showCuInfo (row) {\r\n      this.showSendTypeData = []\r\n      this.cuInfoFormBean = {}\r\n      this.cuInfo.show = true\r\n      const config = {\r\n        method: 'GET',\r\n        url: '/alarm/group/getDetailByGroupName',\r\n        params: { groupName: row.noticeGroupName }\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.cuInfoFormBean = resp.data[0]\r\n            console.log(this.cuInfoFormBean.sendParams)\r\n            let oldSendType = JSON.parse(this.cuInfoFormBean.sendParams)\r\n            let sendTypeData = this.sendTypeDataBean[this.cuInfoFormBean.sendType]\r\n            // 循环取出自定义的key和系统中的key\r\n            let oldSendTypeKeys = Object.keys(oldSendType)\r\n            for (let i = 0; i < oldSendTypeKeys.length; i++) {\r\n              let key = oldSendTypeKeys[i]\r\n              let showKey = key\r\n              for (let j = 0; j < sendTypeData.length; j++) {\r\n                if (key === sendTypeData[j][1]) {\r\n                  showKey = sendTypeData[j][0]\r\n                  break\r\n                }\r\n              }\r\n              let param = []\r\n              param.push(showKey)\r\n              param.push(oldSendType[key])\r\n              this.showSendTypeData.push(param)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    showErrorDiagnosis (row) {\r\n      // 初始化数据\r\n      this.$refs.tabs.activeKey = 'checkDepend' // 打开对话框 默认选择作业依赖\r\n      for (let key in this.jobCheck) {\r\n        this.jobCheck[key] = false\r\n      }\r\n      this.keyJobBean = {}\r\n      this.collapseData = []\r\n      this.showDetail(false)\r\n      // 查找后台配置菜单\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getMenuInfo',\r\n        params: {\r\n          platform: row.platform,\r\n          system: row.system,\r\n          job: row.job,\r\n          errorCode: row.alarmType\r\n        }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.menuData.forEach((menu, index) => {\r\n              resp.data.forEach(d => {\r\n                if (Object.keys(menu)[0] == d) {\r\n                  this.jobCheck[menu[d]] = true\r\n                }\r\n              })\r\n            })\r\n            if (row.alarmLogkeyContent) { // 日志分析\r\n              this.jobCheck.isShowAnalyLog = true\r\n              this.logContent = row.alarmLogkeyContent\r\n            }\r\n            //\r\n            this.row = row\r\n            // let sTime = utils.fmtDate(new Date(new Date().getTime() -1*60*60*1000),'yyyy-MM-dd hh:mm:ss')\r\n            // let eTime = utils.fmtDate(new Date(),'yyyy-MM-dd hh:mm:ss')\r\n            this.searchBaseInfo(row) // 基本信息\r\n            this.searchRecordInfoList(row) // 历史运行情况\r\n            this.searchDepend(row) // 作业依赖\r\n            this.errorDiagnosis.show = true0\r\n          } else {\r\n            this.$Message.warning('当前告警码无报错诊断。')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatYesOrNo (data) {\r\n      return data == 1 ? '是' : '否'\r\n    },\r\n    showDetail (item) {\r\n      // jobType strategy checkWeight\r\n      this.isShowFreOrTime = false\r\n      this.isShowTimeTriggerData = false\r\n      this.isShowFrequencyData = false\r\n      this.isShowWeight = false\r\n      this.isShowStrategy = false\r\n      if (item === 'jobType') {\r\n        if (this.configData.jobType == 'M' || this.configData.jobType == 'W') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowFrequencyData = true\r\n        } else if (this.configData.jobType == 'C') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowTimeTriggerData = true\r\n        } else {\r\n          this.$Message.warning('日作业不存在定时或频度信息。')\r\n        }\r\n      } else if (item === 'strategy') {\r\n        if (this.configData.strategy == '0') {\r\n          this.$Message.warning('该分发策略无策略参数。')\r\n        } else if (this.configData.strategy == '1') {\r\n          this.isShowStrategy = true\r\n        } else {\r\n          this.$Message.warning('该分发策略暂不支持查看。')\r\n        }\r\n      } else if (item === 'checkWeight') {\r\n        if (this.configData.checkWeight == 1) {\r\n          this.isShowWeight = true\r\n        } else {\r\n          this.$Message.warning('未启用资源规则。')\r\n        }\r\n      }\r\n    },\r\n    getsendTypeList () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/group/sendType'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.sendTypeList = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let valueData = values[i]\r\n              let sendType = keys[i].split(';')\r\n              this.sendTypeList.push(sendType)\r\n              this.sendTypeDataBean[sendType[0]] = valueData\r\n            }\r\n          }\r\n        })\r\n    },\r\n    getPlatformconcData (data) { // 平台并发\r\n      // let graph = this.$echarts.init(document.getElementById('platformconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '平台作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.platformconcGraph.hideLoading()\r\n      this.platformconcGraph.setOption(option)\r\n    },\r\n    getNodeData (data) { // 节点并发\r\n      // this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '节点作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.nodeGraph.hideLoading()\r\n      this.nodeGraph.setOption(option)\r\n    },\r\n    searchBaseInfo (row) {\r\n      if (!row.job) {\r\n        this.isShowJob = false\r\n      }\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getBaseInfo',\r\n        params: {\r\n          job: row.job,\r\n          alarmId: row.alarmId\r\n        }\r\n      }\r\n      this.baseBean = {}\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          for (let key in resp.data.udsJob) {\r\n            this.baseBean[key] = resp.data.udsJob[key]\r\n          }\r\n          this.baseBean.alarmContent = resp.data.alarmContent\r\n          this.baseBean.mcontactuser = resp.data.mcontactuser\r\n          // 联系人信息\r\n          const config = {\r\n            method: 'GET',\r\n            url: '/alarm/contactUserInfo',\r\n            params: { platform: row.platform, system: row.system, userName: row.mcontactuser }\r\n          }\r\n          this.$ajax(config)\r\n            .then(res => {\r\n              this.baseBean.email = res.data.email\r\n              this.baseBean.phone = res.data.phone\r\n              this.$forceUpdate()\r\n            })\r\n        // alarmCnt: '' // 本月告警次数\r\n        }\r\n      })\r\n    },\r\n    searchRecordInfoList (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = {}\r\n      params.job = row.job\r\n      params.currentPage = 1\r\n      params.pageSize = 3\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getRecordInfoList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.recordData = resp.data.rows\r\n        })\r\n    },\r\n    searchDepend (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getDepInfo',\r\n        params: params\r\n      }\r\n      this.frequencyList = []\r\n      this.triggerList = []\r\n      this.downStreamData = []\r\n      let cNumCount = []\r\n      this.depSuccData = []\r\n      this.depFailData = []\r\n      this.rootFailData = []\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (JSON.stringify(resp.data) == '{}') {\r\n              return\r\n            }\r\n            let upChartData = []\r\n            if (resp.data) {\r\n              // 上游第一层依赖>>依赖满足:\r\n              if (resp.data.depSucc && resp.data.depSucc.length > 0) {\r\n                this.depSuccData = resp.data.depSucc\r\n                if (resp.data.depSuccFre) {\r\n                  for (let key in resp.data.depSuccFre) {\r\n                    this.frequencyList.push(resp.data.depSuccFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depSuccTime) {\r\n                  for (let key in resp.data.depSuccTime) {\r\n                    this.triggerList.push(resp.data.depSuccTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depSucc.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 上游第一层依赖>>依赖不满足:\r\n              if (resp.data.depFail && resp.data.depFail.length > 0) {\r\n                this.depFailData = resp.data.depFail\r\n                if (resp.data.depFailFre) {\r\n                  for (let key in resp.data.depFailFre) {\r\n                    this.frequencyList.push(resp.data.depFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depFailTime) {\r\n                  for (let key in resp.data.depFailTime) {\r\n                    this.triggerList.push(resp.data.depFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 依赖不满足的根源作业>>\r\n              if (resp.data.rootFail && resp.data.rootFail.length > 0) {\r\n                this.rootFailData = resp.data.rootFail\r\n                if (resp.data.rootFailFre) {\r\n                  for (let key in resp.data.rootFailFre) {\r\n                    this.frequencyList.push(resp.data.rootFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.rootFailTime) {\r\n                  for (let key in resp.data.rootFailTime) {\r\n                    this.triggerList.push(resp.data.rootFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.rootFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              this.getUpstreamJob(upChartData, this.depSuccData, this.depFailData, this.rootFailData)\r\n              // 下游影响情况>>\r\n              this.isShowDoneStream = false\r\n              if (resp.data.downList) {\r\n                let downList = resp.data.downList\r\n                if (JSON.stringify(downList[0]) !== '{}') {\r\n                  downList.forEach(d => {\r\n                    let temp = []\r\n                    let cNum = 0\r\n                    for (let key in d) {\r\n                      let obj = {}\r\n                      obj.platform = key.split('_')[0]\r\n                      obj.system = key.split('_')[1]\r\n                      obj.affectNum = d[key]\r\n                      temp.push(obj)\r\n                      cNum += d[key]\r\n                    }\r\n                    cNumCount.push(cNum)\r\n                    this.downStreamData.push(temp)\r\n                  })\r\n                } else {\r\n                  this.isShowDoneStream = true\r\n                }\r\n              } else {\r\n                this.isShowDoneStream = true\r\n              }\r\n              setTimeout(() => {\r\n                this.getDownstreamJob(cNumCount)\r\n              }, 200)\r\n            }\r\n          }\r\n        })\r\n      // 影响下游关键作业>>\r\n      this.affectDownStringKeyJobList = []\r\n      this.isShowInflunceSys = false\r\n      if (row.influnceSys === '无') {\r\n        this.isShowInflunceSys = true\r\n        this.jobCheck.isShowAnalyKeyLink = false\r\n      } else {\r\n        let params2 = { job: row.job }\r\n        let httpConfig2 = {\r\n          method: 'GET',\r\n          url: '/merrordiagnosis/getBaseLineInfo',\r\n          params: params2\r\n        }\r\n        this.$ajax(httpConfig2)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              if (resp.data.length === 0) {\r\n                this.isShowInflunceSys = true\r\n                this.jobCheck.isShowAnalyKeyLink = false\r\n              } else {\r\n                this.affectDownStringKeyJobList = resp.data\r\n                this.jobCheck.isShowAnalyKeyLink = true\r\n                this.jobCheck.isShowCheckDepend = true // 下游信息->影响下游关键作业>>\r\n              }\r\n            }\r\n          })\r\n      }\r\n    },\r\n    getUpstreamJob (data, depSuccData, depFailData, rootFailData) {\r\n      let upstreamGraph = this.$echarts.init(document.getElementById('upstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['上游第一层满足', '上游第一层不满足', '根源不满足']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: data,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#afd582', '#528e95', '#cd4f55']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && upstreamGraph.setOption(option)\r\n      // 默认显示上游第一层依赖不满足\r\n      this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n      this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n      this.upJobMsgStyle = 'upJobMsgRed'\r\n      this.upstreamData = depFailData\r\n      // 点击事件\r\n      upstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      upstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (upstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = upstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = upstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.upstreamData = []\r\n          if (xData === '上游第一层满足') {\r\n            this.upJobMsgStyle = 'upJobMsgGreen'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖满足:')\r\n            this.upstreamData = depSuccData\r\n          } else if (xData === '上游第一层不满足') {\r\n            this.upJobMsgStyle = 'upJobMsgRed'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n            this.upstreamData = depFailData\r\n          } else if (xData === '根源不满足') {\r\n            this.$set(this.upJobInfo, 'message', '依赖不满足的根源作业>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '')\r\n            this.upstreamData = rootFailData\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getDownstreamJob (cNumCount) {\r\n      cNumCount[3] = 0\r\n      if (this.affectDownStringKeyJobList) {\r\n        cNumCount[3] = this.affectDownStringKeyJobList.length\r\n      }\r\n      let downstreamGraph = this.$echarts.init(document.getElementById('downstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['下游第一层', '下游第二层', '下游第三层', '下游关键作业']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: cNumCount,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#7bc1f2', '#7bc1f2', '#7bc1f2', '#e09599']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && downstreamGraph.setOption(option)\r\n      // 点击事件\r\n      downstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      downstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (downstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = downstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = downstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.$set(this.showDownstreamTable, 'showFistFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showSecondFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showThirdFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showKeyJob', false)\r\n          if (xData === '下游第一层') {\r\n            this.$set(this.showDownstreamTable, 'showFistFloor', true)\r\n          } else if (xData === '下游第二层') {\r\n            this.$set(this.showDownstreamTable, 'showSecondFloor', true)\r\n          } else if (xData === '下游第三层') {\r\n            this.$set(this.showDownstreamTable, 'showThirdFloor', true)\r\n          } else if (xData === '下游关键作业') {\r\n            this.$set(this.showDownstreamTable, 'showKeyJob', true)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 匹配定时/频率信息\r\n    matchedData (job, type) {\r\n      this.triggerBean = {}\r\n      this.frequencyBean = {}\r\n      if (type === 'frequency') {\r\n        this.frequencyList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.frequencyBean = d\r\n          }\r\n        })\r\n      }\r\n      if (type === 'trigger') {\r\n        this.triggerList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.triggerBean = d\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 调度配置检测\r\n    searchSchedule (row) {\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getUdsConfigInfo',\r\n        params: params\r\n      }\r\n      this.configData = {}\r\n      this.timeTriggerData = {}\r\n      this.frequencyData = {}\r\n      this.weightList = []\r\n      this.isShowFreOrTime = false\r\n      // this.isShowTimeTriggerData = false\r\n      // this.isShowFrequencyData = false\r\n      // this.isShowWeight = false\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200 && JSON.stringify(resp.data) !== '{}') {\r\n            // 作业配置信息\r\n            for (let key in resp.data.config) {\r\n              this.configData[key] = resp.data.config[key]\r\n            }\r\n            this.configData.strategy = resp.data.system.strategy // 分发策略\r\n            this.configData.strategyPro = resp.data.system.strategyPro\r\n            this.configData.isPlatformServer = resp.data.system.system === '*' ? '是' : '否'\r\n            this.configData.maxRunJob = resp.data.system.maxRunJob\r\n            this.configData.sourceByJob = resp.data.sourceByJob === 1 ? '是' : '否'\r\n            // 调度频率信息\r\n            if (resp.data.timeTrigger) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowTimeTriggerData = true\r\n              for (let key in resp.data.timeTrigger) {\r\n                this.timeTriggerData[key] = resp.data.timeTrigger[key]\r\n              }\r\n            }\r\n            if (resp.data.frequency) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowFrequencyData = true\r\n              for (let key in resp.data.frequency) {\r\n                this.frequencyData[key] = resp.data.frequency[key]\r\n              }\r\n            }\r\n            // 资源规则信息\r\n            if (resp.data.weight) {\r\n              // this.isShowWeight = true\r\n              this.weightList = resp.data.weight\r\n            }\r\n            this.$forceUpdate()\r\n          }\r\n        })\r\n    },\r\n    searchLineGraph () {\r\n      let starttime = this.lineSearchBean.start\r\n      let endtime = this.lineSearchBean.end\r\n      let t = (endtime - starttime) / (1000 * 3600)\r\n      if (starttime === '') {\r\n        this.$Message.warning('请输入开始时间')\r\n      } else if (endtime === '') {\r\n        this.$Message.warning('请输入结束时间')\r\n      } else if (starttime > endtime) {\r\n        this.$Message.warning('开始时间大于结束时间')\r\n      } else if (t > 3) {\r\n        this.$Message.warning('时间差值超过3小时')\r\n      } else {\r\n        starttime = utils.fmtDate(starttime, 'yyyy-MM-dd hh:mm:ss')\r\n        endtime = utils.fmtDate(endtime, 'yyyy-MM-dd hh:mm:ss')\r\n        this.searchPlatformC(this.row, starttime, endtime)\r\n      }\r\n      // this.searchPlatformC(this.row,)\r\n    },\r\n    searchPlatformC (row, start, end) {\r\n      this.platformconcGraph = this.$echarts.init(document.getElementById('platformconc'))\r\n      this.platformconcGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      this.nodeGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      let params = { platform: row.platform, system: row.system, start: start, end: end, node: row.serverName, job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getConcurrentInfo',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (resp.data.platformStatus) {\r\n              this.getPlatformconcData(resp.data.platformStatus)\r\n            }\r\n            if (resp.data.nodeStatus) {\r\n              this.getNodeData(resp.data.nodeStatus)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    searchLog (row) {\r\n      // if(row.alarmLogkeyContent) {\r\n      //   this.jobCheck.isShowAnalyLog = true\r\n      //   this.logContent = row.alarmLogkeyContent\r\n      // }\r\n    },\r\n    searchKeyLink () {\r\n\r\n    },\r\n    searchBaseLine (keyJob) {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mbaselinelines/getKeyLine/' + keyJob\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          this.isInitialize = false\r\n          if (resp.data.length === 0) {\r\n            this.isInitialize = true\r\n            return\r\n          }\r\n          this.collapseData = resp.data\r\n          this.collapseData.forEach((cData, j) => {\r\n            this.collapseData[j].timelineItemData = []\r\n            this.collapseData[j].baselineBean = {}\r\n            let arr = cData.baselines\r\n            // arr[1].todayRunningStatus = 2 // 测试\r\n            // arr[3].estimatedEndTime = '2021-07-08 16:00' // 测试\r\n            // console.log(arr)\r\n            arr.forEach((bData, i) => {\r\n              let temp = {}\r\n              Object.assign(temp, bData)\r\n              temp.lastStatus = cData.jobs[i].lastStatus\r\n              temp.dispatcherTime = cData.jobs[i].dispatcherTime\r\n              temp.startTime = cData.jobs[i].startTime\r\n              temp.endTime = cData.jobs[i].endTime\r\n              temp.jobDate = cData.jobs[i].jobDate\r\n              temp.jobType = cData.jobs[i].jobType\r\n              // cData.jobs[2].lastStatus = 'Dispatcher' // 测试\r\n              //  temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Pending' ? 'gray' : '#ff9900'))\r\n              // temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : '#ff9900')\r\n              temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Failed' ? 'red' : '#ff9900'))\r\n              if (temp.color === '#ff9900') {\r\n                this.waitSignalFile = false\r\n                let size = this.collapseData[j].timelineItemData.length\r\n                for (let a = 0; a < size; a++) {\r\n                  this.collapseData[j].timelineItemData[a].todayRunningStatus = 1\r\n                  this.collapseData[j].timelineItemData[a].isShowEstimatedTime = false\r\n                  this.collapseData[j].timelineItemData[a].isShowWaitSignalFile = false\r\n                  this.collapseData[j].timelineItemData[a].color = 'green'\r\n                }\r\n              }\r\n              temp.isShowEstimatedTime = bData.todayRunningStatus !== 1\r\n              temp.isShowWaitSignalFile = false\r\n              if (bData.todayRunningStatus == 2 && cData.jobs[i].lastStatus == 'Done') { // 是否等待信号文件\r\n                temp.isShowWaitSignalFile = true\r\n                this.waitSignalFile = true\r\n              }\r\n              if (cData.jobs[i].lastStatus == 'Failed') {\r\n                this.waitSignalFile = true //\r\n              }\r\n              this.collapseData[j].timelineItemData.push(temp)\r\n            })\r\n            this.keyJobBean.jobDate = cData.jobdate\r\n            this.collapseData[j].baselineBean.rootJob = cData.originJob\r\n          })\r\n          if (this.waitSignalFile) { // 不显示预计完成时间 等待信号文件/Failed\r\n            for (let i = 0; i < this.collapseData.length; i++) {\r\n              this.collapseData[i].timelineItemData.map(t => {\r\n                t.isShowEstimatedTime = false\r\n              })\r\n            }\r\n          }\r\n          this.keyJobBean.baselineTime = utils.fmtDate(new Date(resp.data[0].alarmTime), 'yyyy-MM-dd hh:mm:ss')\r\n          this.formatBaselineBean(resp.data[0].alarmTime)\r\n          setTimeout(() => {\r\n            this.defaultPanel = ['0']\r\n          }, 200)\r\n        }\r\n      })\r\n      // this.loadOneKeyJob(keyJob)\r\n    },\r\n    formatBaselineBean (alarmTime) {\r\n      this.collapseData.forEach((d, i) => {\r\n        let index = d.baselines.length - 1\r\n        if (d.baselines[index].estimatedEndTime !== null) {\r\n          let stime = new Date(d.baselines[index].estimatedEndTime)\r\n          let etime = new Date(alarmTime)\r\n          let str1 = this.subtracTime(stime, etime)\r\n          if (etime > stime) {\r\n            this.collapseData[i].baselineBean.restTime = str1\r\n            this.collapseData[i].baselineBean.status = '安全'\r\n          } else {\r\n            this.collapseData[i].baselineBean.restTime = '-' + str1\r\n            this.collapseData[i].baselineBean.status = '破线'\r\n          }\r\n          if (!this.waitSignalFile) {\r\n            this.collapseData[i].baselineBean.estimatedCompTime = d.baselines[index].estimatedEndTime\r\n          }\r\n        }\r\n      })\r\n    },\r\n    changeJobTest (name) {\r\n      if (name === 'checkDepend') {\r\n        this.searchDepend(this.row)\r\n      } else if (name === 'checkSchedule') {\r\n        this.searchSchedule(this.row)\r\n      } else if (name === 'analysisPlatPerformance') {\r\n        let start = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime() - 2 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss')\r\n        let end = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime()), 'yyyy-MM-dd hh:mm:ss')\r\n        this.lineSearchBean = { start: start, end: end }\r\n        this.searchPlatformC(this.row, start, end)\r\n      } else if (name === 'analysisLog') {\r\n        this.searchLog(this.row)\r\n      } else if (name === 'analysisKeyLink') {\r\n        // this.searchKeyLink(this.row)\r\n        if (this.affectDownStringKeyJobList) {\r\n          this.searchBaseLine(this.affectDownStringKeyJobList[0])\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      params = Object.assign({}, this.alarmBean)\r\n      if (this.alarmBean.localDate) {\r\n        params.localDate = utils.fmtDate(this.alarmBean.localDate, 'yyyy-MM-dd')\r\n      }\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      for (let key in params) {\r\n        if (key === 'job' && params[key]) {\r\n          params[key] = params[key].trim().toUpperCase()\r\n        }\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loading = false\r\n        })\r\n    },\r\n    subtracTime (stime, etime) {\r\n      let result\r\n      if (etime > stime) {\r\n        result = Math.floor((etime - stime) / 1000)\r\n      } else {\r\n        result = Math.floor((stime - etime) / 1000)\r\n      }\r\n      let h = Math.floor(result / 3600) < 10 ? '0' + Math.floor(result / 3600) : Math.floor(result / 3600)\r\n      let m = Math.floor(result % 3600 / 60) < 10 ? '0' + Math.floor(result % 3600 / 60) : Math.floor(result % 3600 / 60)\r\n      let s = result % 3600 % 60 < 10 ? '0' + result % 3600 % 60 : result % 3600 % 60\r\n      let str = h + ':' + m + ':' + s\r\n      return str\r\n    },\r\n    formatTime (minute) {\r\n      let day = 0\r\n      let hour = 0\r\n      if (minute > 60) {\r\n        hour = parseInt(minute / 60)\r\n        minute = parseInt(minute % 60)\r\n        if (hour > 24) {\r\n          day = parseInt(hour / 24)\r\n          hour = parseInt(hour % 24)\r\n        }\r\n      }\r\n      let result = ''\r\n      if (minute > 0) {\r\n        result = '' + parseInt(minute) + '分钟'\r\n      }\r\n      if (hour > 0) {\r\n        result = '' + parseInt(hour) + '小时' + result\r\n      }\r\n      if (day > 0) {\r\n        result = '' + parseInt(day) + '天' + result\r\n      }\r\n      return result\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.alarmBean = {}\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.databaseId)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    cancel () {\r\n\r\n    },\r\n    switchTab (tabName) {\r\n      for (let key in this.tabObj) {\r\n        this.tabObj[key] = false\r\n      }\r\n      this.tabObj[tabName] = true\r\n    },\r\n    haltAlarm (alarmId, alarmStatus, index, row) {\r\n      if (alarmStatus == '1') {\r\n        this.$Message.info('请选择未处理的告警操作')\r\n        return\r\n      }\r\n      if (alarmStatus == '2') {\r\n        alarmStatus = '0'\r\n      } else if (alarmStatus == '0') {\r\n        alarmStatus = '2'\r\n      }\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: {\talarmStatus: alarmStatus, job: row.job, authps: row.platform + row.system }\r\n      }\r\n      httpConfig.method = 'PUT'\r\n      httpConfig.url = RESOURCE_PATH + '/' + alarmId\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData[index].alarmStatus = alarmStatus\r\n          }\r\n        }).catch(error => {\r\n          console.error('login exception:' + error)\r\n        })\r\n    },\r\n    errorHandleOk () {\r\n      this.$refs.alarmHandleForm.validate(valid => {\r\n        if (!valid) return\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/operater',\r\n          params: { key: this.formBean.operationType, alarmId: this.formBean.id }\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            console.log(resp)\r\n            if (resp.data === true) {\r\n              // this.alarmGridData[this.formBean.index].alarmStatus = this.formBean.alarmStatus\r\n              this.errorHandle.show = false\r\n              this.search()\r\n            }\r\n          })\r\n      })\r\n    },\r\n    errorHandleBack () {\r\n      this.$refs.operationTypeSelect.classes[1]['ivu-form-item-error'] = false\r\n      if (this.$refs.operationTypeSelect.$el.children[1].children[1]) {\r\n        this.$refs.operationTypeSelect.$el.children[1].children[1].remove()\r\n      }\r\n      this.errorHandle.show = false\r\n    },\r\n    showErrorHandle (errorObj, index) {\r\n      const operaterConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getOperater',\r\n        params: {}\r\n      }\r\n      this.$ajax(operaterConfig).then(resp => {\r\n        this.formBean = {}\r\n        this.errorHandle.show = true\r\n        this.formBean.id = errorObj.id\r\n        this.formBean.operationUser = sessionStorage.username\r\n        this.formBean.operationTime = utils.fmtDate(new Date(), 'yyyy-MM-dd hh24:mm:ss')\r\n        this.formBean = Object.assign({}, this.formBean)\r\n        if (resp.data) {\r\n          this.operationTypeList = resp.data\r\n        }\r\n      })\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      // let sort, order\r\n      let order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      this.alarmBean.order = order\r\n      this.alarmBean.sort = column.key\r\n      this.search()\r\n    },\r\n    queryAlarmList () {\r\n      this.search()\r\n    },\r\n    loadErrorCodeList () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/errorCodeList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data.rows) {\r\n          resp.data.rows.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.code\r\n            tmp.label = data.code\r\n            this.alarmTypelist.push(tmp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    loaduser: function () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'user/getUserList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data => {\r\n            this.userlist[data.user_id] = data.userchname\r\n            this.userMap[data.username] = data.userchname\r\n          })\r\n        }\r\n        this.search()\r\n      })\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.alarmBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.alarmBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    tomain () {\r\n      for (let key in this.transData.tabObj) {\r\n        this.transData.tabObj[key] = false\r\n      }\r\n      this.transData.tabObj['alarmTab'] = true\r\n    },\r\n    scrollInter () {\r\n      this.showData.splice(0, 1)\r\n      setTimeout(() => {\r\n        this.listData.push(this.listData[0])\r\n        // this.showData = [];\r\n        // this.showData.splice(0,1);\r\n        this.showData.splice(0, 1, this.listData[0])\r\n        this.listData.shift()\r\n      }, 0)\r\n    },\r\n    enter () {\r\n      clearInterval(this.timer)\r\n    },\r\n    leave () {\r\n      this.timer = setInterval(this.scrollInter, 10000)\r\n    },\r\n    downloadLogfile (row) {\r\n      let params = {}\r\n      params.job = row.job\r\n      params.logDir = row.logDir\r\n      params.logName = row.logName\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadLogfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '日志不存在,请检查作业是否为虚作业!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/merrordiagnosis/downloadLogfile', params)\r\n          }\r\n        })\r\n    },\r\n    downloadScriptfile (row) {\r\n      let params = {}\r\n      params.scriptName = row.scriptName\r\n      params.job = row.job\r\n      params.platform = row.platform\r\n      params.system = row.system\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadScriptfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '脚本不存在,请检查脚本是否存在!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/udsjobsteprecord/downloadScriptfile', params)\r\n          }\r\n        })\r\n    },\r\n    addZero (time) {\r\n      let str = time\r\n      if (time < 10) {\r\n        str = '0' + time\r\n      }\r\n      return str\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    querylocationList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = {}\r\n        resp.data.rows.forEach(data => {\r\n          this.locationList[data.dicValue] = data.dicName\r\n        })\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    // this.loaduser();\r\n    this.alarmBean.localDate = utils.fmtDate(new Date(), 'yyyy-MM-dd')\r\n    // this.loadErrorCodeList()\r\n    this.init()\r\n    // this.listMUdsDutyByChDay()\r\n    this.queryPlatform()\r\n    this.timer = setInterval(this.scrollInter, 10000)\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n",{"version":3,"sources":["Errorlist.vue"],"names":[],"mappings":";AAgqfile":"Errorlist.vue","sourceRoot":"src/view/app/alarm/opjobsummary","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div v-if=\"tabObj.alarmTab\">\r\n\t\t\t<Form ref=\"alarmForm\" :label-width=\"80\" :rules=\"alarmFormRule\" :model=\"alarmBean\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormItem prop=\"localDate\" label=\"告警日期\">\r\n\t\t\t\t\t\t\t<DatePicker :transfer=\"true\" type=\"date\" parse=\"yyyy-MM-dd\" format=\"yyyy-MM-dd\" v-model=\"alarmBean.localDate\"></DatePicker>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem prop=\"platform\" label=\"平台名\">\r\n\t\t\t\t\t\t\t<Select filterable v-model=\"alarmBean.platform\" @on-change=\"querySystem\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in platformData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"应用名\">\r\n\t\t\t\t\t\t\t<Select ref=\"refsystem\" filterable v-model=\"alarmBean.system\" placeholder=\"先选平台\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in systemData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"5\">\r\n\t\t\t\t\t\t<FormItem label=\"作业名\">\r\n\t\t\t\t\t\t\t\t<Input v-model=\"alarmBean.job\" placeholder=\"支持模糊查询\" type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 5}\"/>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<!-- <Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"告警状态码\">\r\n\t\t\t\t\t\t\t<Select filterable  v-model=\"alarmBean.alarmType\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in alarmTypelist\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col> -->\r\n\t\t\t\t\t<Col span=\"3\">\r\n\t\t\t\t\t\t<FormItem label=\"告警状态\">\r\n\t\t\t\t\t\t\t<Select filterable  v-model=\"alarmBean.alarmStatus\" clearable>\r\n\t\t\t\t\t\t\t\t<Option v-for=\"item in alarmstatusList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"1\" >\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\" >\r\n\t\t\t\t\t\t<div class=\"spdb-toolbar\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">查询</Button>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"md-close\" @click=\"clear\">清除</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<!-- <Col span=\"2\" >\r\n\t\t\t\t\t\t<FormItem label=\" \" :label-width=\"50\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-search\" @click=\"search\" style=\"\">查询</Button>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"4\" >\r\n\t\t\t\t\t\t<FormItem label=\" \" :label-width=\"40\">\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"android-close\" @click=\"clear\">清除</Button>\r\n\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</Col> -->\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t\t<div id=\"alarmList\" class=\"spdb-table\" style=\"margin-top:5px;\" v-if=\"transData.tabObj.showTable\">\r\n\t\t\t\t<Table :loading=\"loading\" :columns=\"gridColumns\" :data=\"alarmGridData\" @on-sort-change=\"changeSort\" stripe>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"spdb-page\" v-if=\"transData.tabObj.showTable\">\r\n\t\t\t<Page placement=\"top\" :total=\"page.total\" :current=\"page.current\" :page-size=\"page.size\" :page-size-opts=\"page.opt\" show-total show-sizer show-elevat show-elevator @on-change=\"changePage\" @on-page-size-change=\"changePageSize\"></Page>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<Modal\r\n\t\t\tv-model=\"cuInfo.show\"\r\n\t\t\ttitle=\"联系组详细信息\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :model=\"cuInfoFormBean\" ref=\"cuInfoHandleForm\" :label-width=\"90\" inline>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"platform\" label=\"平台\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.platform\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"systems\" label=\"应用\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.systems\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<FormItem  style='width:75%' prop=\"groupName\" label=\"组名\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.groupName\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row>\r\n\t\t\t\t\t\t\t<FormItem style='width:75%' prop=\"sendType\" label=\"发送类型\">\r\n\t\t\t\t\t\t\t\t<Input readonly v-model=\"cuInfoFormBean.sendType\"/>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n            <Row  v-for=\"(infor, i) in showSendTypeData\" :key=\"`infor-${i}`\">\r\n              <FormItem  style='width:75%'  :label=\"infor[0]\">\r\n                <Input readonly v-model=\"infor[1]\" />\r\n              </FormItem>\r\n            </Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t\t<Modal\r\n\t\t\tv-model=\"errorHandle.show\"\r\n\t\t\ttitle=\"处理告警\"\r\n\t\t\t:mask-closable=\"false\"\r\n\t\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form :model=\"formBean\" ref=\"alarmHandleForm\" :label-width=\"80\" :rules=\"formRule\" inline>\r\n            <Row>\r\n\t\t\t\t\t\t\t<FormItem  style='width:75%' ref=\"operationTypeSelect\" prop=\"operationType\" label=\"处理类型\">\r\n\t\t\t\t\t\t\t\t<Select filterable  v-model=\"formBean.operationType\" >\r\n\t\t\t\t\t\t\t\t\t<Option v-for=\"item in operationTypeList\" :value=\"item[0]\" :key=\"item[0]\">{{ item[1] }}</Option>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"md-add\" @click=\"errorHandleOk\">保存</Button>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"ios-trash-outline\" @click=\"errorHandleBack\">取消</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"footer\"></div>\r\n\t\t</Modal>\r\n    <Modal\r\n      id=\"errorDiagnosisOp\"\r\n      v-model=\"errorDiagnosis.show\"\r\n\t\t\t:title=\"'报错诊断>>'+baseBean.job\"\r\n\t\t\t:mask-closable=\"false\"\r\n      width=\"90%\"\r\n      scrollable\r\n      @on-cancel=\"errorDiagnosis.show = false\">\r\n      <!-- <div style=\"max-height:60vh;overflow-y:auto;overflow-x:hidden\"> -->\r\n      <div>\r\n        <Row>\r\n          <Col span=\"24\" class=\"baseInfo\">\r\n            <Tabs value=\"baseInfo\">\r\n              <TabPane label=\"基本信息\" icon=\"md-menu\" name=\"baseInfo\">\r\n                <Row>\r\n                  <Col style=\"margin-left:2%;line-height: 350%\">\r\n                    <!-- <Row v-if=\"isShowJob\">\r\n                      <Col span=\"24\">作业名:<span class=\"base-message\">{{baseBean.job}}</span></Col>\r\n                    </Row> -->\r\n                    <Row v-if=\"isShowJob\">\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">当前数据日期:</span>\r\n                        <span class=\"base-message\">{{baseBean.jobDate}}</span>\r\n                      </Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">当前作业状态:</span>\r\n                        <span class=\"base-message\">{{baseBean.lastStatus}}</span>\r\n                        </Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">等待时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.pendingTime}}</span></Col>\r\n                    </Row>\r\n                    <Row v-if=\"isShowJob\">\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">分发时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.dispatcherTime}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">开始时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.startTime}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">结束时间:</span>\r\n                        <span class=\"base-message\">{{baseBean.endTime}}</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">联系人:</span>\r\n                        <span class=\"base-message\">{{baseBean.mcontactuser}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">手机号:</span>\r\n                        <span class=\"base-message\">{{baseBean.phone}}</span></Col>\r\n                      <Col span=\"8\">\r\n                        <span class=\"base-title\">邮箱:</span>\r\n                        <span class=\"base-message\">{{baseBean.email}}</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span=\"24\">\r\n                        <span class=\"base-title\">告警内容:</span>\r\n                        <span class=\"base-message\">{{baseBean.alarmContent}}</span></Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane label=\"历史运行情况\" icon=\"md-menu\" name=\"recordInfo\">\r\n                <Row span=\"24\">\r\n                  <Table border size=\"small\" :columns=\"recordColumns\" :data=\"recordData\" stripe ></Table>\r\n                </Row>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n        <Row style=\"margin-top:1%\">\r\n          <Col span=\"24\">\r\n            <Row type=\"flex\" align=\"middle\">\r\n              <Col style=\"margin-left:1%\" span=\"2\">\r\n                <!-- <Icon type=\"android-menu\" style=\"color:#2d8cf0;font-size:16px\"></Icon>\r\n                <span class=\"diag-title\">作业诊断</span> -->\r\n              </Col>\r\n              <!-- <Col span=\"22\">\r\n                <hr style=\"background-color:#eceaea;height:1px;border:none;\"/>\r\n              </Col> -->\r\n            </Row>\r\n            <Row>\r\n              <Tabs value=\"checkDepend\" id=\"tabs\" ref=\"tabs\"  @on-click=\"changeJobTest\" type=\"card\">\r\n                <TabPane v-if=\"jobCheck.isShowCheckDepend\" label=\"依赖检测\" name=\"checkDepend\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Col span=\"14\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\" style=\"height:15%\">\r\n                          <p slot=\"title\">上游信息</p>\r\n                          <div id=\"upstreamJob\" style=\"height:15vh\"></div>\r\n                          <div id=\"upstream\" style=\"text-align:left;margin-top:25px\">\r\n                            <p>{{upJobInfo.message}} <span :class=\"upJobMsgStyle\">{{upJobInfo.messageSp}}</span></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"upstreamData && upstreamData.length>0 ? true : false\" :columns=\"upstreamColumns\" :data=\"upstreamData\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"10\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\" style=\"height:15%\">\r\n                          <p slot=\"title\">下游信息</p>\r\n                          <div id=\"downstreamJob\" style=\"height:15vh\"></div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showFistFloor\">\r\n                            <p>下游第一层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[0] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[0]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showSecondFloor\">\r\n                            <p>下游第二层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[1] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[1]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showThirdFloor\">\r\n                            <p>下游第三层>></p>\r\n                            <Row>\r\n                              <Table size=\"small\" height=\"180\" :show-header=\"downStreamData[2] ? true : false\" :columns=\"downStreamColumns\" :data=\"downStreamData[2]\"></Table>\r\n                            </Row>\r\n                          </div>\r\n                          <div style=\"text-align:left;margin-top:25px\" v-if=\"showDownstreamTable.showKeyJob\">\r\n                            <p>影响下游关键作业>></p>\r\n                            <Card style=\"height:180px;overflow-y:auto\">\r\n                              <div style=\"text-align:left\">\r\n                                <div v-for=\"(item,index) in affectDownStringKeyJobList\" :key=\"index\">\r\n                                  <span style=\"margin-left:5%\">{{item}}</span>\r\n                                </div>\r\n                              </div>\r\n                              <div v-if=\"isShowInflunceSys\">\r\n                                <p style=\"text-align:center\">暂无数据</p>\r\n                              </div>\r\n                            </Card>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowCheckSchedule\" label=\"调度配置检测\" name=\"checkSchedule\" icon=\"checkmark-circled\">\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">作业配置信息</p>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">所属平台名:</span>\r\n                          <span class=\"base-message\">{{configData.platform}}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">所属应用名:</span>\r\n                          <span class=\"base-message\">{{ configData.system }}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">作业名:</span>\r\n                          <span  class=\"base-message\">{{ configData.job }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">作业中文名:</span>\r\n                          <span class=\"base-message\">{{ configData.jobName }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">作业类型:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('jobType')\">{{ jobtypeList[configData.jobType] }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">偏移天数:</span>\r\n                          <span class=\"base-message\">{{configData.offsetDay}}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">单多批次:</span>\r\n                          <span class=\"base-message\">{{ configData.multiBatch }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">时间窗口:</span>\r\n                          <span class=\"base-message\">{{ configData.timewindow }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">是否启用:</span>\r\n                          <span class=\"base-message\">{{ formatYesOrNo(configData.isEnable) }}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">是否置虚:</span>\r\n                          <span class=\"base-message\">{{ formatYesOrNo(configData.virtualEnable) }}</span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">是否启用资源规则:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('checkWeight')\">{{ formatYesOrNo(configData.checkWeight) }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">是否外部信号文件触发:</span>\r\n                          <span class=\"base-message\">{{ configData.sourceByJob }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">优先级(1-1000):</span>\r\n                          <span class=\"base-message\">{{ configData.priority }}</span>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">分发策略:</span>\r\n                          <span class=\"base-message\">\r\n                            <a @click=\"showDetail('strategy')\">{{ strategyList[configData.strategy] }}</a>\r\n                          </span>\r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                          <span class=\"base-title\">是否采用平台并发:</span>\r\n                          <span class=\"base-message\">{{ configData.isPlatformServer }}</span>\r\n                        </Col>\r\n                        <Col span=\"6\">\r\n                          <span class=\"base-title\">并发上限:</span>\r\n                          <span class=\"base-message\">{{ configData.maxRunJob }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <span class=\"base-title\">逻辑集群:</span>\r\n                          <span class=\"base-message\">{{ locationList[configData.dbControl] }}</span>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px\" v-if=\"isShowFreOrTime\">\r\n                    <Card :bordered=\"false\">\r\n                        <p slot=\"title\">调度频率信息</p>\r\n                        <div v-if=\"isShowTimeTriggerData\" style=\"line-height: 300%\">\r\n                          <Row>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">偏移天数:</span>\r\n                                <span class=\"base-message\">{{timeTriggerData.offsetDay}}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">开始时间:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.startTime }}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">结束时间:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.endTime }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">秒:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.second }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">分:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.minute }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">天:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.day }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">月:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.month }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">周:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.week }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">年:</span>\r\n                              <span class=\"base-message\">{{ timeTriggerData.year }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                        <div v-if=\"isShowFrequencyData\" style=\"line-height: 300%\">\r\n                          <Row>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">天:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.day }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">月:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.month }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">周:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.week }}</span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                              <span class=\"base-title\">年:</span>\r\n                              <span class=\"base-message\">{{ frequencyData.year }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\" v-if=\"isShowWeight\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">资源规则信息</p>\r\n                        <div v-for=\"(item,index) in weightList\" :key=\"index\">\r\n                          <Row>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">资源类型:</span>\r\n                              <span class=\"base-message\">{{item.limit_type}}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">资源上限:</span>\r\n                              <span class=\"base-message\">{{ item.conf_value }}</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                              <span class=\"base-title\">占用资源数:</span>\r\n                              <span class=\"base-message\">{{ item.limit_value }}</span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                  <div style=\"background:#eee;padding: 3px;line-height: 300%\" v-if=\"isShowStrategy\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">策略参数</p>\r\n                        <div>\r\n                          <Row>\r\n                            <Col span=\"20\">\r\n                              <span class=\"base-title\">{{strategyList[configData.strategy]}}:</span>\r\n                              <span class=\"base-message\"> {{ configData.strategyPro }} </span>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                    </Card>\r\n                  </div>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyPlatPer\" label=\"平台性能分析\" name=\"analysisPlatPerformance\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Form ref=\"lineSearchForm\" :model=\"lineSearchBean\" :label-width=\"80\">\r\n                      <Row>\r\n                        <Col span=\"5\">\r\n                          <FormItem prop=\"start\" label=\"开始时间\">\r\n                            <DatePicker v-model=\"lineSearchBean.start\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择日期时间\"></DatePicker>\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col span=\"5\">\r\n                          <FormItem prop=\"end\" label=\"结束时间\">\r\n                            <DatePicker v-model=\"lineSearchBean.end\" type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"选择日期时间\"></DatePicker>\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col offset=\"1\" span=\"2\">\r\n                          <div class=\"spdb-toolbar\">\r\n                            <Button type=\"primary\" icon=\"ios-search\" @click=\"searchLineGraph\">查询</Button>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span=\"12\">\r\n                      <div style=\"background:#eee;padding: 5px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">平台作业状态折线图</p>\r\n                            <div id=\"platformconc\" class=\"line_box\"></div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                      <div style=\"background:#eee;padding: 5px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">节点作业状态折线图 {{baseBean.serverName}}</p>\r\n                            <div id=\"nodeconc\" class=\"line_box\"></div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyLog\" label=\"日志分析\" name=\"analysisLog\" icon=\"checkmark-circled\">\r\n                  <div style=\"background:#eee;padding: 3px\">\r\n                    <Card :bordered=\"false\">\r\n                      <p slot=\"title\">日志</p>\r\n                      <div>\r\n                        <p>{{logContent}}</p>\r\n                      </div>\r\n                    </Card>\r\n                  </div>\r\n                </TabPane>\r\n                <TabPane v-if=\"jobCheck.isShowAnalyKeyLink\" label=\"关键链路分析\" name=\"analysisKeyLink\" icon=\"checkmark-circled\">\r\n                  <Row>\r\n                    <Col span=\"6\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\">\r\n                            <p slot=\"title\">关键作业</p>\r\n                            <div style=\"height:37vh;overflow-y:auto\">\r\n                              <div v-for=\"(item,index) in affectDownStringKeyJobList\" :key=\"index\">\r\n                                <a @click=\"searchBaseLine(item)\">{{item}}</a>\r\n                              </div>\r\n                            </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                    <Col span=\"18\">\r\n                      <div style=\"background:#eee;padding: 3px\">\r\n                        <Card :bordered=\"false\">\r\n                          <p slot=\"title\">\r\n                            关键作业链路\r\n                            <span v-if=\"!isInitialize\" style=\"float:right;margin-right:8px;color:#676767\">\r\n                              批量数据日期: {{keyJobBean.jobDate}}&#8195\r\n                              基线承诺时间: {{keyJobBean.baselineTime}}\r\n                            </span>\r\n                          </p>\r\n                          <span v-if=\"isInitialize\">暂无数据，请稍后重试...</span>\r\n                          <div style=\"height:37vh;overflow-y:auto\" v-if=\"!isInitialize\">\r\n                            <!-- <p>\r\n                              批量数据日期: {{keyJobBean.jobDate}}&#8195\r\n                              基线承诺时间: {{keyJobBean.baselineTime}}\r\n                            </p> -->\r\n                            <Collapse v-model=\"defaultPanel\">\r\n                              <Panel v-for=\"(panel,index) in collapseData\" :name=\"index + ''\" :key=\"index\">\r\n                                    <span style=\"font-weight: bold\">关键链路</span>&#8195\r\n                                    根源作业:\r\n                                    {{panel.baselineBean.rootJob}} &#8195\r\n                                    余量时间:\r\n                                    {{panel.baselineBean.restTime}}&#8195\r\n                                    基线状态:\r\n                                    <span :style=\"{'color': panel.baselineBean.status == '安全' ? 'green':'red'}\">{{panel.baselineBean.status}}&#8195</span>\r\n                                    预计完成时间:\r\n                                    {{panel.baselineBean.estimatedCompTime}}\r\n                                <div slot=\"content\">\r\n                                <Timeline>\r\n                                  <TimelineItem v-for=\"(item,index) in panel.timelineItemData\" :key=\"index\" :color=\"item.color\">\r\n                                    <Icon type=\"ios-radio-button-on\" slot=\"dot\"></Icon>\r\n                                    <p style=\"font-size:12px;font-weight: 600\">{{item.job}}</p>\r\n                                    <p style=\"color:#ff9900\" class=\"content\" v-if=\"item.isShowWaitSignalFile\">等待信号文件触发...</p>\r\n                                    <p class=\"content\" v-if=\"item.isShowEstimatedTime\">\r\n                                      预计分发时间：{{item.estimatedDispatcherTime}} |\r\n                                      预计完成时间：{{item.estimatedEndTime}}\r\n                                    </p>\r\n                                    <p class=\"content\">\r\n                                      作业状态：{{item.lastStatus}} |\r\n                                      分发时间：{{item.dispatcherTime}} |\r\n                                      开始时间：{{item.startTime}} |\r\n                                      结束时间：{{item.endTime}} |\r\n                                      作业日期：{{item.jobDate}} |\r\n                                      作业类型：{{item.jobType}}\r\n                                    </p>\r\n                                  </TimelineItem>\r\n                                </Timeline>\r\n                                </div>\r\n                              </Panel>\r\n                            </Collapse>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </Tabs>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n    <Modal\r\n      id=\"timeTriggerOp\"\r\n      v-model=\"timeTriggerOp.show\"\r\n      title=\"定时信息\"\r\n      width=\"25%\"\r\n      >\r\n      <div style=\"margin-left:7%\">\r\n        <Row>\r\n          <Col span=\"24\">\r\n            <span>下次执行时间:   {{triggerBean.startTime}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>秒:    {{triggerBean.second}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>分:   {{triggerBean.minute}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>时:   {{triggerBean.hour}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>日:   {{triggerBean.day}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>月:   {{triggerBean.month}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>周:   {{triggerBean.week}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>年:   {{triggerBean.year}}</span>\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <span>偏移天数:   {{triggerBean.offsetDay}}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n    <Modal\r\n      id=\"frequencyOp\"\r\n      v-model=\"frequencyOp.show\"\r\n      title=\"频率信息\"\r\n      width=\"25%\"\r\n      >\r\n      <div style=\"margin-left:7%\">\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>日:   {{frequencyBean.day}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>月:   {{frequencyBean.month}}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <span>周:   {{frequencyBean.week}}</span>\r\n          </Col>\r\n          <Col span=\"10\">\r\n            <span>年:   {{frequencyBean.year}}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div slot=\"footer\"></div>\r\n    </Modal>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n// import * as echarts from \"echarts\";\r\nimport utils from '@/common/utils'\r\nimport store from '@/store/index'\r\n// const platforms = store.getters.getPlatforms\r\nconst RESOURCE_PATH = '/alarm'\r\n\r\nexport default {\r\n  props: {\r\n    transData: {\r\n      type: Object,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data: function () {\r\n    const validAlarmStatus = (rule, value, callback) => {\r\n      if (value === '0') {\r\n        return callback(new Error('告警状态不能为未处理'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    return {\r\n      noJobCheckList: [100, 101, 300, 301, 302, 303, 304, 400, 409, 420, 430, 450],\r\n      upJobMsgStyle: 'upJobMsgGreen',\r\n      upJobInfo: {\r\n        message: '',\r\n        messageSp: ''\r\n      },\r\n      strategyList: {\r\n        '0': '普通策略',\r\n        '1': '指定机器分发机器',\r\n        '2': '指定机器序号分发',\r\n        '3': '指定机器标签分发'\r\n      },\r\n      jobtypeList: {},\r\n      locationList: {},\r\n      showDownstreamTable: {\r\n        showFistFloor: true,\r\n        showSecondFloor: false,\r\n        showThirdFloor: false,\r\n        showKeyJob: false\r\n      },\r\n      jobCheck: {\r\n        isShowCheckDepend: false,\r\n        isShowCheckSchedule: false,\r\n        isShowAnalyPlatPer: false,\r\n        isShowAnalyLog: false,\r\n        isShowAnalyKeyLink: false\r\n      },\r\n      menuData: [\r\n        { '100': 'isShowCheckDepend' },\r\n        { '101': 'isShowCheckSchedule' },\r\n        { '102': 'isShowAnalyPlatPer' },\r\n        { '103': 'isShowAnalyLog' },\r\n        { '104': 'isShowAnalyKeyLink' }\r\n      ],\r\n      waitSignalFile: false,\r\n      isInitialize: false,\r\n      defaultPanel: [],\r\n      collapseData: [],\r\n      baselineBean: {},\r\n      keyJobBean: {},\r\n      showSendTypeData: [],\r\n      sendTypeBean: {},\r\n      sendTypeList: [],\r\n      sendTypeDataBean: {},\r\n      timelineItemData: [],\r\n      lineSearchBean: {\r\n        start: '',\r\n        end: ''\r\n      },\r\n      frequencyList: [],\r\n      triggerList: [],\r\n      triggerBean: {},\r\n      frequencyBean: {},\r\n      timeTriggerOp: {\r\n        show: false\r\n      },\r\n      frequencyOp: {\r\n        show: false\r\n      },\r\n      logContent: '',\r\n      configData: {},\r\n      timeTriggerData: {},\r\n      frequencyData: {},\r\n      weightList: [],\r\n      isShowFreOrTime: false,\r\n      isShowTimeTriggerData: false,\r\n      isShowFrequencyData: false,\r\n      isShowWeight: false,\r\n      isShowStrategy: false,\r\n      row: {},\r\n      platformData: [],\r\n      systemData: [],\r\n      loading: false,\r\n      errorHandle: {\r\n        show: false,\r\n        title: '',\r\n        id: ''\r\n      },\r\n      isShowJob: true,\r\n      isShowInflunceSys: false,\r\n      isShowDoneStream: false,\r\n      affectDownStringKeyJobList: [],\r\n      downStreamData: [],\r\n      downStreamColumns: [\r\n        {\r\n          title: '平台名',\r\n          key: 'platform',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          key: 'system',\r\n          align: 'center'\r\n        },\r\n        {\r\n          title: '影响数量',\r\n          key: 'affectNum',\r\n          align: 'center'\r\n        }\r\n      ],\r\n      upstreamColumns: [\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          minWidth: 200\r\n        },\r\n        {\r\n          title: 'job_date',\r\n          key: 'jobDate',\r\n          minWidth: 150\r\n        },\r\n        {\r\n          title: '作业类型',\r\n          key: 'jobType',\r\n          minWidth: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '5px',\r\n                  color: '#3399ff'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (row.jobType == 'M' || row.jobType == 'W') {\r\n                      this.matchedData(row.job, 'frequency')\r\n                      this.frequencyOp.show = true\r\n                    } else if (row.jobType == 'C') {\r\n                      this.matchedData(row.job, 'trigger')\r\n                      this.timeTriggerOp.show = true\r\n                    } else {\r\n                      this.$Message.warning('日作业不存在定时或频度信息。')\r\n                    }\r\n                  }\r\n                }\r\n              }, this.jobtypeList[row.jobType])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '状态',\r\n          key: 'lastStatus',\r\n          minWidth: 120\r\n        }\r\n      ],\r\n      upstreamData: [],\r\n      rootFailData: [],\r\n      depSuccData: [],\r\n      depFailData: [],\r\n      baseBean: {\r\n        job: '',\r\n        jobDate: '',\r\n        pendingTime: '',\r\n        dispatcherTime: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        alarmContent: '',\r\n        mcontactuser: '',\r\n        lastStatus: '',\r\n        alarmCnt: ''\r\n      },\r\n      recordColumns: [\r\n        {\r\n          title: '执行次数',\r\n          width: 100,\r\n          key: 'numTimes'\r\n        },\r\n        {\r\n          title: 'log',\r\n          key: 'logName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.logDir,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadLogfile(row)\r\n                  }\r\n                }\r\n              }, row.logName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: 'script',\r\n          key: 'scriptName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                  // color: \"green\"\r\n                },\r\n                href: row.scriptPath,\r\n                on: {\r\n                  click: () => {\r\n                    this.downloadScriptfile(row)\r\n                  }\r\n                }\r\n              }, row.scriptName)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '执行节点',\r\n          ellipsis: false,\r\n          tooltip: true,\r\n          width: 120,\r\n          sortable: true,\r\n          key: 'serverName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('span', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                }\r\n              }, row.serverName ? row.serverName : '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          width: 180,\r\n          key: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          width: 180,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (endTimeStr == '2099') {\r\n              endTimeStr = ''\r\n            } else {\r\n              endTimeStr = params.row.endTime\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, endTimeStr)\r\n          }\r\n        },\r\n        {\r\n          title: '耗时',\r\n          width: 100,\r\n          key: 'endTime',\r\n          render: (h, params) => {\r\n            let etime = null\r\n            let startTime = null\r\n            let elapsed = ''\r\n            let str = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (str == '2099') {\r\n              elapsed = ''\r\n            } else {\r\n              etime = utils.fmtDate(params.row.endTime, 'yyyyMMdd hh:mm:ss')\r\n              startTime = utils.fmtDate(params.row.startTime, 'yyyyMMdd hh:mm:ss')\r\n              let e = new Date(etime.substring(0, 4) + '/' + etime.substring(4, 6) + '/' + etime.substring(6))\r\n\t\t        \tlet s = new Date(startTime.substring(0, 4) + '/' + startTime.substring(4, 6) + '/' + startTime.substring(6))\r\n              // let ss=\r\n              let second = parseInt((e.getTime() -  s.getTime())) / 1000\r\n              let hourTime = 0\r\n              let minuteTime = 0\r\n              let secondTime = 0\r\n              if (second > 60) {\r\n                minuteTime = Math.floor(second / 60)\r\n                secondTime = Math.floor(second % 60)\r\n                if (minuteTime >= 60) {\r\n                  hourTime = Math.floor(minuteTime / 60)\r\n                  minuteTime = Math.floor(minuteTime % 60)\r\n                } else {\r\n                  hourTime = 0\r\n                }\r\n              } else {\r\n                hourTime = 0\r\n                minuteTime = 0\r\n                if (second == 60) {\r\n                  minuteTime = 1\r\n                  secondTime = 0\r\n                } else {\r\n                  secondTime = second\r\n                }\r\n              }\r\n              elapsed = this.addZero(hourTime) + ':' + this.addZero(minuteTime) + ':' + this.addZero(secondTime)\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, elapsed)\r\n          }\r\n        },\r\n        {\r\n          title: 'TXDate',\r\n          width: 110,\r\n          key: 'jobDate'\r\n        },\r\n        {\r\n          title: '运行状态',\r\n          width: 110,\r\n          key: 'returnCode',\r\n          render: (h, params) => {\r\n            let str = ''\r\n            let endTimeStr = ''\r\n            endTimeStr = utils.fmtDate(params.row.endTime, 'yyyy')\r\n            if (params.row.returnCode == 0) {\r\n              str = 'Done'\r\n            } else {\r\n              str = 'Failed'\r\n            }\r\n            if (endTimeStr == '2099') {\r\n              str = 'Running'\r\n            }\r\n            return h('div', {\r\n              props: {\r\n              }\r\n            }, str)\r\n          }\r\n        }\r\n      ],\r\n      recordData: [],\r\n      formRule: {\r\n        operationType: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationTime: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        operationUser: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }],\r\n        alarmStatus: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }, { validator: validAlarmStatus, trigger: 'blur' }]\r\n      },\r\n      alarmFormRule: {\r\n        localDate: [{\r\n          required: true,\r\n          message: '请输入数据！'\r\n        }]\r\n      },\r\n      alarmTypelist: [],\r\n      userlist: {},\r\n      userMap: {},\r\n      userIds: {},\r\n      cuInfo: {\r\n        show: false\r\n      },\r\n      errorDiagnosis: {\r\n        show: false\r\n      },\r\n      cuInfoFormBean: {},\r\n      operations: [\r\n        {\r\n          label: '置虚跳过',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '再次执行',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '手工触发',\r\n          value: '2'\r\n        },\r\n        {\r\n          label: '置Done',\r\n          value: '3'\r\n        },\r\n        {\r\n          label: '中止执行',\r\n          value: '4'\r\n        },\r\n        {\r\n          label: '自动完成',\r\n          value: '5'\r\n        }\r\n      ],\r\n      operationTypeList: [],\r\n      alarmstatusList: [\r\n        {\r\n          label: '未处理',\r\n          value: '0'\r\n        },\r\n        {\r\n          label: '已处理',\r\n          value: '1'\r\n        },\r\n        {\r\n          label: '暂停告警',\r\n          value: '2'\r\n        }],\r\n      alarmBean: { alarmTime: utils.fmtDate(new Date(), 'yyyy-MM-dd') },\r\n      formBean: {},\r\n      tabObj: { alarmTab: true, jobdetail: false, showTable: true },\r\n      request: {\r\n        delReq: {\r\n          method: 'DELETE',\r\n          url: RESOURCE_PATH\r\n        },\r\n        addReq: {\r\n          method: 'POST',\r\n          url: RESOURCE_PATH\r\n        }\r\n      },\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      gridColumns: [\r\n        // {\r\n        //   width: 90,\r\n        //   title: '序号',\r\n        //   align: 'center',\r\n        //   sortable: true,\r\n        //   key: 'id',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('a', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // fontSize: '32px',\r\n        //           // fontWeight: 'normal',\r\n        //           // color: '#7EC0EE'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             // Object.assign({},{id: id, statusName: \"jobdetail\",alarmTab: false},this.getPageParam())\r\n        //             this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n        //           }\r\n        //         }\r\n        //       }, row.id)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '平台名',\r\n          width: 64,\r\n          sortable: true,\r\n          align: 'center',\r\n          key: 'platform'\r\n        },\r\n        {\r\n          title: '应用名',\r\n          sortable: true,\r\n          width: 64,\r\n          align: 'center',\r\n          key: 'systems'\r\n        },\r\n        {\r\n          title: '作业名',\r\n          key: 'job',\r\n          // align: 'center',\r\n          minWidth: 250,\r\n          // maxWidth: 400,\r\n          sortable: true,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // fontSize: '32px',\r\n                  // fontWeight: 'normal',\r\n                  // color: '#7EC0EE'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n\r\n                    // let id = row.job\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail', jobData: row }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n\r\n                    // let id = row.job\r\n                    // this.transData.jobName = row.job\r\n                    // this.switchTab('jobdetail'); //提交form事件，在parent中显示form\r\n                    // this.tabObj.alarmTab = false\r\n                    // // Object.assign({}, {id: id,statusName: \"alarmlog\",jobData: row},this.getPageParam())\r\n                    // this.$emit('switch', Object.assign({}, { id: id, statusName: 'jobdetail' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, row.job)\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '告警码',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 80,\r\n          key: 'alarmType'\r\n        },\r\n        {\r\n          title: '告警时间',\r\n          sortable: true,\r\n          align: 'center',\r\n          width: 160,\r\n          key: 'times'\r\n        },\r\n        {\r\n          title: '告警内容',\r\n          sortable: true,\r\n          // align: 'center',\r\n          minWidth: 150,\r\n          // maxWidth: 450,\r\n          ellipsis: true,\r\n          key: 'content',\r\n          render: (h, { column, index, row }) => {\r\n            let color = 'green'\r\n            let texts = ''\r\n            if (row.alarmStatus === 'WARN') {\r\n              color = 'red'\r\n            } else if (row.alarmStatus === 'DEAL') {\r\n              color = '#FF8E16'\r\n            } else if (row.alarmStatus === 'END') {\r\n              color = 'black'\r\n            }\r\n            texts = row.content\r\n            if (texts != null) {\r\n              if (texts.length > 10) {\r\n                texts = texts.slice(0, 10) + '...'\r\n              } else {\r\n                texts = row.content\r\n              }\r\n            } else {\r\n              return\r\n            }\r\n            let str = row.content\r\n            let str1 = ''\r\n            let str0 = ''\r\n            while (str.length > 30) {\r\n              str0 = str.substring(0, 30) + '\\n'\r\n              str = str.substring(30, str.length)\r\n              str1 = str1 + str0\r\n            }\r\n            str1 = str1 + str\r\n            return h('div', [\r\n              h('span', {\r\n                style: {\r\n                  display: 'inline-block',\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'// 'nowrap'\r\n                },\r\n                // 鼠标悬停 显示完整信息\r\n                domProps: {\r\n                  title: str1\r\n                }\r\n              }, [\r\n                h('span', {\r\n                  props: {\r\n                    size: 'small',\r\n                    type: 'info'\r\n                  },\r\n                  style: {\r\n                    color: color\r\n                  }\r\n                }, row.content)\r\n              ])\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理时间',\r\n          width: 120,\r\n          align: 'center',\r\n          key: 'operationTime'\r\n          // render: (h, {column, index, row}) => {\r\n\r\n          // }\r\n        },\r\n        // {\r\n        //   title: '影响关键应用',\r\n        //   minWidth: 90,\r\n        //   maxWidth: 100,\r\n        //   key: 'influnceSys',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     return h('div', [\r\n        //       h('span', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'info'\r\n        //         },\r\n        //         style: {\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showCuInfo(row)\r\n        //           }\r\n        //         }\r\n        //       }, row.influnceSys)\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '联系组',\r\n          width: 90,\r\n          align: 'center',\r\n          key: 'noticeGroupName',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showCuInfo(row)\r\n                  }\r\n                }\r\n              }, this.userMap[row.noticeGroupName] ? this.userMap[row.noticeGroupName] : row.noticeGroupName)\r\n            ])\r\n          }\r\n        },\r\n        // {\r\n        //   title: '报错诊断',\r\n        //   width: 80,\r\n        //   align: 'center',\r\n        //   render: (h, { column, index, row }) => {\r\n        //     let dis = false\r\n        //     let col = '#2d8cf0'\r\n        //     if (row.alarmType) {\r\n        //       if (this.noJobCheckList.includes(parseInt(row.alarmType))) {\r\n        //         dis = true\r\n        //         col = '#bbbec4'\r\n        //       }\r\n        //     }\r\n        //     // this.noJobCheckList\r\n        //     return h('div', [\r\n        //       h('Button', {\r\n        //         props: {\r\n        //           size: 'small',\r\n        //           type: 'text',\r\n        //           disabled: dis\r\n        //         },\r\n        //         style: {\r\n        //           fontSize: '14px',\r\n        //           color: col,\r\n        //           // background: 0 0 ,\r\n        //           backgroundColor: 'rgb(0, 0, 0, 0)',\r\n        //           textDecoration: 'none',\r\n        //           outline: '0',\r\n        //           cursor: 'pointer'\r\n        //           // transition: color .2s ease\r\n        //           // marginRight: '5px'\r\n        //         },\r\n        //         on: {\r\n        //           click: () => {\r\n        //             this.showErrorDiagnosis(row)\r\n        //           }\r\n        //         }\r\n        //       }, '详情')\r\n        //     ])\r\n        //   }\r\n        // },\r\n        {\r\n          title: '详情',\r\n          width: 50,\r\n          // fixed: 'right',\r\n          align: 'center',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  // marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.$emit('switch', Object.assign({}, { row: row, statusName: 'alarmdetailTab' }, this.getPageParam()))\r\n                  }\r\n                }\r\n              }, '查看')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '日志',\r\n          width: 80,\r\n          align: 'center',\r\n          // fixed: 'right',\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  icon: 'md-reorder'\r\n                },\r\n                style: {\r\n                  margin: '0px',\r\n                  fontSize: '20px',\r\n                  border: 0,\r\n                  padding: '4px 8px',\r\n                  color: '#03399b',\r\n                  backgroundColor: 'transparent'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    let id = row.job\r\n                    if (this.transData.jobStatus) {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobStatus: this.transData.jobStatus, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    } else {\r\n                      this.$emit('switch', Object.assign({}, { id: id, jobData: row, statusName: 'jobRecord' }, this.getPageParam())) // 提交form事件，在parent中显示form\r\n                    }\r\n                  }\r\n                }\r\n              }, '')\r\n            ])\r\n          }\r\n        },\r\n        {\r\n          title: '处理登记',\r\n          align: 'center',\r\n          width: 120,\r\n          render: (h, { column, index, row }) => {\r\n            return h('div', [\r\n              h('a', {\r\n                props: {\r\n                  size: 'small',\r\n                  type: 'info'\r\n                },\r\n                style: {\r\n                  marginRight: '10px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.showErrorHandle(row, index)\r\n                  }\r\n                }\r\n              }, '登记')\r\n\r\n            ])\r\n          }\r\n        }\r\n      ],\r\n      alarmGridData: [],\r\n      // alarmGridData:[{platform:\"BDP\",system:\"DLA\",job:\"BDP_DLA_TEST_1\",errorType:\"JobFailed\",alarmTime:\"2019-06-30 12:01:23\",alarmCount:1,affectKeySys:0,handled:'否',contactUser:\"\"}],\r\n      selection: [],\r\n      page: {\r\n        current: 1,\r\n        total: 100,\r\n        size: 10,\r\n        opt: [10, 50, 100]\r\n      },\r\n      listData: [],\r\n      showData: [],\r\n      timer: null,\r\n      // graph: null,\r\n      platformconcGraph: null,\r\n      nodeGraph: null\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n\t\t * 初始化\r\n\t\t **/\r\n    init () {\r\n      this.search()\r\n      this.getsendTypeList()\r\n      // if (this.transData.currentPage) {\r\n      //   this.alarmBean = this.transData.formBean\r\n      //   this.page.current = this.transData.currentPage\r\n      //   this.page.size = this.transData.pageSize\r\n      // }\r\n      // if (!this.alarmBean.platform) {\r\n      //   if (!platforms.includes('ROLE_ADMIN')) {\r\n      //     this.alarmBean.platform = platforms[0]\r\n      //     this.querySystem()\r\n      //   }\r\n      // }\r\n      // this.loaduser()\r\n      // this.queryPlatform()\r\n      // this.queryjobtypeList()\r\n      // this.querylocationList()\r\n    },\r\n    showCuInfo (row) {\r\n      this.showSendTypeData = []\r\n      this.cuInfoFormBean = {}\r\n      this.cuInfo.show = true\r\n      const config = {\r\n        method: 'GET',\r\n        url: '/alarm/group/getDetailByGroupName',\r\n        params: { groupName: row.noticeGroupName }\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.cuInfoFormBean = resp.data[0]\r\n            console.log(this.cuInfoFormBean.sendParams)\r\n            let oldSendType = JSON.parse(this.cuInfoFormBean.sendParams)\r\n            let sendTypeData = this.sendTypeDataBean[this.cuInfoFormBean.sendType]\r\n            // 循环取出自定义的key和系统中的key\r\n            let oldSendTypeKeys = Object.keys(oldSendType)\r\n            for (let i = 0; i < oldSendTypeKeys.length; i++) {\r\n              let key = oldSendTypeKeys[i]\r\n              let showKey = key\r\n              for (let j = 0; j < sendTypeData.length; j++) {\r\n                if (key === sendTypeData[j][1]) {\r\n                  showKey = sendTypeData[j][0]\r\n                  break\r\n                }\r\n              }\r\n              let param = []\r\n              param.push(showKey)\r\n              param.push(oldSendType[key])\r\n              this.showSendTypeData.push(param)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    showErrorDiagnosis (row) {\r\n      // 初始化数据\r\n      this.$refs.tabs.activeKey = 'checkDepend' // 打开对话框 默认选择作业依赖\r\n      for (let key in this.jobCheck) {\r\n        this.jobCheck[key] = false\r\n      }\r\n      this.keyJobBean = {}\r\n      this.collapseData = []\r\n      this.showDetail(false)\r\n      // 查找后台配置菜单\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getMenuInfo',\r\n        params: {\r\n          platform: row.platform,\r\n          system: row.system,\r\n          job: row.job,\r\n          errorCode: row.alarmType\r\n        }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          if (resp.data && resp.data.length > 0) {\r\n            this.menuData.forEach((menu, index) => {\r\n              resp.data.forEach(d => {\r\n                if (Object.keys(menu)[0] == d) {\r\n                  this.jobCheck[menu[d]] = true\r\n                }\r\n              })\r\n            })\r\n            if (row.alarmLogkeyContent) { // 日志分析\r\n              this.jobCheck.isShowAnalyLog = true\r\n              this.logContent = row.alarmLogkeyContent\r\n            }\r\n            //\r\n            this.row = row\r\n            // let sTime = utils.fmtDate(new Date(new Date().getTime() -1*60*60*1000),'yyyy-MM-dd hh:mm:ss')\r\n            // let eTime = utils.fmtDate(new Date(),'yyyy-MM-dd hh:mm:ss')\r\n            this.searchBaseInfo(row) // 基本信息\r\n            this.searchRecordInfoList(row) // 历史运行情况\r\n            this.searchDepend(row) // 作业依赖\r\n            this.errorDiagnosis.show = true0\r\n          } else {\r\n            this.$Message.warning('当前告警码无报错诊断。')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatYesOrNo (data) {\r\n      return data == 1 ? '是' : '否'\r\n    },\r\n    showDetail (item) {\r\n      // jobType strategy checkWeight\r\n      this.isShowFreOrTime = false\r\n      this.isShowTimeTriggerData = false\r\n      this.isShowFrequencyData = false\r\n      this.isShowWeight = false\r\n      this.isShowStrategy = false\r\n      if (item === 'jobType') {\r\n        if (this.configData.jobType == 'M' || this.configData.jobType == 'W') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowFrequencyData = true\r\n        } else if (this.configData.jobType == 'C') {\r\n          this.isShowFreOrTime = true\r\n          this.isShowTimeTriggerData = true\r\n        } else {\r\n          this.$Message.warning('日作业不存在定时或频度信息。')\r\n        }\r\n      } else if (item === 'strategy') {\r\n        if (this.configData.strategy == '0') {\r\n          this.$Message.warning('该分发策略无策略参数。')\r\n        } else if (this.configData.strategy == '1') {\r\n          this.isShowStrategy = true\r\n        } else {\r\n          this.$Message.warning('该分发策略暂不支持查看。')\r\n        }\r\n      } else if (item === 'checkWeight') {\r\n        if (this.configData.checkWeight == 1) {\r\n          this.isShowWeight = true\r\n        } else {\r\n          this.$Message.warning('未启用资源规则。')\r\n        }\r\n      }\r\n    },\r\n    getsendTypeList () {\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/alarm/group/sendType'\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.data) {\r\n            this.sendTypeList = []\r\n            let keys = Object.keys(resp.data)\r\n            let values = Object.values(resp.data)\r\n            for (let i = 0; i < keys.length; i++) {\r\n              let valueData = values[i]\r\n              let sendType = keys[i].split(';')\r\n              this.sendTypeList.push(sendType)\r\n              this.sendTypeDataBean[sendType[0]] = valueData\r\n            }\r\n          }\r\n        })\r\n    },\r\n    getPlatformconcData (data) { // 平台并发\r\n      // let graph = this.$echarts.init(document.getElementById('platformconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '平台作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.platformconcGraph.hideLoading()\r\n      this.platformconcGraph.setOption(option)\r\n    },\r\n    getNodeData (data) { // 节点并发\r\n      // this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      let option = {\r\n        title: {\r\n          // text: '节点作业状态折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['runningNum', 'dispatcherNum', 'pendingNum']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data['timeList']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'runningNum',\r\n          data: data['running'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: 'red' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'dispatcherNum',\r\n          data: data['dispatcher'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#005eaa' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'pendingNum',\r\n          data: data['pending'],\r\n          type: 'line',\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                { offset: 0, color: '#61a0a8' },\r\n                { offset: 1, color: 'white' }\r\n              ]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      this.nodeGraph.hideLoading()\r\n      this.nodeGraph.setOption(option)\r\n    },\r\n    searchBaseInfo (row) {\r\n      if (!row.job) {\r\n        this.isShowJob = false\r\n      }\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getBaseInfo',\r\n        params: {\r\n          job: row.job,\r\n          alarmId: row.alarmId\r\n        }\r\n      }\r\n      this.baseBean = {}\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          for (let key in resp.data.udsJob) {\r\n            this.baseBean[key] = resp.data.udsJob[key]\r\n          }\r\n          this.baseBean.alarmContent = resp.data.alarmContent\r\n          this.baseBean.mcontactuser = resp.data.mcontactuser\r\n          // 联系人信息\r\n          const config = {\r\n            method: 'GET',\r\n            url: '/alarm/contactUserInfo',\r\n            params: { platform: row.platform, system: row.system, userName: row.mcontactuser }\r\n          }\r\n          this.$ajax(config)\r\n            .then(res => {\r\n              this.baseBean.email = res.data.email\r\n              this.baseBean.phone = res.data.phone\r\n              this.$forceUpdate()\r\n            })\r\n        // alarmCnt: '' // 本月告警次数\r\n        }\r\n      })\r\n    },\r\n    searchRecordInfoList (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = {}\r\n      params.job = row.job\r\n      params.currentPage = 1\r\n      params.pageSize = 3\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getRecordInfoList',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          this.recordData = resp.data.rows\r\n        })\r\n    },\r\n    searchDepend (row) {\r\n      if (!row.job) {\r\n        return\r\n      }\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getDepInfo',\r\n        params: params\r\n      }\r\n      this.frequencyList = []\r\n      this.triggerList = []\r\n      this.downStreamData = []\r\n      let cNumCount = []\r\n      this.depSuccData = []\r\n      this.depFailData = []\r\n      this.rootFailData = []\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (JSON.stringify(resp.data) == '{}') {\r\n              return\r\n            }\r\n            let upChartData = []\r\n            if (resp.data) {\r\n              // 上游第一层依赖>>依赖满足:\r\n              if (resp.data.depSucc && resp.data.depSucc.length > 0) {\r\n                this.depSuccData = resp.data.depSucc\r\n                if (resp.data.depSuccFre) {\r\n                  for (let key in resp.data.depSuccFre) {\r\n                    this.frequencyList.push(resp.data.depSuccFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depSuccTime) {\r\n                  for (let key in resp.data.depSuccTime) {\r\n                    this.triggerList.push(resp.data.depSuccTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depSucc.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 上游第一层依赖>>依赖不满足:\r\n              if (resp.data.depFail && resp.data.depFail.length > 0) {\r\n                this.depFailData = resp.data.depFail\r\n                if (resp.data.depFailFre) {\r\n                  for (let key in resp.data.depFailFre) {\r\n                    this.frequencyList.push(resp.data.depFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.depFailTime) {\r\n                  for (let key in resp.data.depFailTime) {\r\n                    this.triggerList.push(resp.data.depFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.depFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              // 依赖不满足的根源作业>>\r\n              if (resp.data.rootFail && resp.data.rootFail.length > 0) {\r\n                this.rootFailData = resp.data.rootFail\r\n                if (resp.data.rootFailFre) {\r\n                  for (let key in resp.data.rootFailFre) {\r\n                    this.frequencyList.push(resp.data.rootFailFre[key])\r\n                  }\r\n                }\r\n                if (resp.data.rootFailTime) {\r\n                  for (let key in resp.data.rootFailTime) {\r\n                    this.triggerList.push(resp.data.rootFailTime[key])\r\n                  }\r\n                }\r\n                upChartData.push(resp.data.rootFail.length)\r\n              } else {\r\n                upChartData.push(0)\r\n              }\r\n              this.getUpstreamJob(upChartData, this.depSuccData, this.depFailData, this.rootFailData)\r\n              // 下游影响情况>>\r\n              this.isShowDoneStream = false\r\n              if (resp.data.downList) {\r\n                let downList = resp.data.downList\r\n                if (JSON.stringify(downList[0]) !== '{}') {\r\n                  downList.forEach(d => {\r\n                    let temp = []\r\n                    let cNum = 0\r\n                    for (let key in d) {\r\n                      let obj = {}\r\n                      obj.platform = key.split('_')[0]\r\n                      obj.system = key.split('_')[1]\r\n                      obj.affectNum = d[key]\r\n                      temp.push(obj)\r\n                      cNum += d[key]\r\n                    }\r\n                    cNumCount.push(cNum)\r\n                    this.downStreamData.push(temp)\r\n                  })\r\n                } else {\r\n                  this.isShowDoneStream = true\r\n                }\r\n              } else {\r\n                this.isShowDoneStream = true\r\n              }\r\n              setTimeout(() => {\r\n                this.getDownstreamJob(cNumCount)\r\n              }, 200)\r\n            }\r\n          }\r\n        })\r\n      // 影响下游关键作业>>\r\n      this.affectDownStringKeyJobList = []\r\n      this.isShowInflunceSys = false\r\n      if (row.influnceSys === '无') {\r\n        this.isShowInflunceSys = true\r\n        this.jobCheck.isShowAnalyKeyLink = false\r\n      } else {\r\n        let params2 = { job: row.job }\r\n        let httpConfig2 = {\r\n          method: 'GET',\r\n          url: '/merrordiagnosis/getBaseLineInfo',\r\n          params: params2\r\n        }\r\n        this.$ajax(httpConfig2)\r\n          .then(resp => {\r\n            if (resp.status && resp.status === 200) {\r\n              if (resp.data.length === 0) {\r\n                this.isShowInflunceSys = true\r\n                this.jobCheck.isShowAnalyKeyLink = false\r\n              } else {\r\n                this.affectDownStringKeyJobList = resp.data\r\n                this.jobCheck.isShowAnalyKeyLink = true\r\n                this.jobCheck.isShowCheckDepend = true // 下游信息->影响下游关键作业>>\r\n              }\r\n            }\r\n          })\r\n      }\r\n    },\r\n    getUpstreamJob (data, depSuccData, depFailData, rootFailData) {\r\n      let upstreamGraph = this.$echarts.init(document.getElementById('upstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['上游第一层满足', '上游第一层不满足', '根源不满足']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: data,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#afd582', '#528e95', '#cd4f55']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && upstreamGraph.setOption(option)\r\n      // 默认显示上游第一层依赖不满足\r\n      this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n      this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n      this.upJobMsgStyle = 'upJobMsgRed'\r\n      this.upstreamData = depFailData\r\n      // 点击事件\r\n      upstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      upstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (upstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = upstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = upstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.upstreamData = []\r\n          if (xData === '上游第一层满足') {\r\n            this.upJobMsgStyle = 'upJobMsgGreen'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖满足:')\r\n            this.upstreamData = depSuccData\r\n          } else if (xData === '上游第一层不满足') {\r\n            this.upJobMsgStyle = 'upJobMsgRed'\r\n            this.$set(this.upJobInfo, 'message', '上游第一层依赖>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '依赖不满足:')\r\n            this.upstreamData = depFailData\r\n          } else if (xData === '根源不满足') {\r\n            this.$set(this.upJobInfo, 'message', '依赖不满足的根源作业>>')\r\n            this.$set(this.upJobInfo, 'messageSp', '')\r\n            this.upstreamData = rootFailData\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getDownstreamJob (cNumCount) {\r\n      cNumCount[3] = 0\r\n      if (this.affectDownStringKeyJobList) {\r\n        cNumCount[3] = this.affectDownStringKeyJobList.length\r\n      }\r\n      let downstreamGraph = this.$echarts.init(document.getElementById('downstreamJob'))\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['下游第一层', '下游第二层', '下游第三层', '下游关键作业']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 18,\r\n          x2: 10,\r\n          y2: 20\r\n        },\r\n        series: [{\r\n          data: cNumCount,\r\n          type: 'bar',\r\n          barWidth: 30,\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: 'rgba(180,180,180,0.2)'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#3f3b3a'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                let colorList = ['#7bc1f2', '#7bc1f2', '#7bc1f2', '#e09599']\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n      option && downstreamGraph.setOption(option)\r\n      // 点击事件\r\n      downstreamGraph.getZr().off('click') // 避免事件重复执行\r\n      downstreamGraph.getZr().on('click', params => {\r\n        const pointlnPixel = [params.offsetX, params.offsetY]\r\n        if (downstreamGraph.containPixel('grid', pointlnPixel)) {\r\n          let xIndex = downstreamGraph.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0]\r\n          let xData = downstreamGraph.getOption().xAxis[0].data[xIndex]\r\n          this.$set(this.showDownstreamTable, 'showFistFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showSecondFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showThirdFloor', false)\r\n          this.$set(this.showDownstreamTable, 'showKeyJob', false)\r\n          if (xData === '下游第一层') {\r\n            this.$set(this.showDownstreamTable, 'showFistFloor', true)\r\n          } else if (xData === '下游第二层') {\r\n            this.$set(this.showDownstreamTable, 'showSecondFloor', true)\r\n          } else if (xData === '下游第三层') {\r\n            this.$set(this.showDownstreamTable, 'showThirdFloor', true)\r\n          } else if (xData === '下游关键作业') {\r\n            this.$set(this.showDownstreamTable, 'showKeyJob', true)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 匹配定时/频率信息\r\n    matchedData (job, type) {\r\n      this.triggerBean = {}\r\n      this.frequencyBean = {}\r\n      if (type === 'frequency') {\r\n        this.frequencyList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.frequencyBean = d\r\n          }\r\n        })\r\n      }\r\n      if (type === 'trigger') {\r\n        this.triggerList.forEach(d => {\r\n          if (d.job === job) {\r\n            this.triggerBean = d\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 调度配置检测\r\n    searchSchedule (row) {\r\n      let params = { job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getUdsConfigInfo',\r\n        params: params\r\n      }\r\n      this.configData = {}\r\n      this.timeTriggerData = {}\r\n      this.frequencyData = {}\r\n      this.weightList = []\r\n      this.isShowFreOrTime = false\r\n      // this.isShowTimeTriggerData = false\r\n      // this.isShowFrequencyData = false\r\n      // this.isShowWeight = false\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200 && JSON.stringify(resp.data) !== '{}') {\r\n            // 作业配置信息\r\n            for (let key in resp.data.config) {\r\n              this.configData[key] = resp.data.config[key]\r\n            }\r\n            this.configData.strategy = resp.data.system.strategy // 分发策略\r\n            this.configData.strategyPro = resp.data.system.strategyPro\r\n            this.configData.isPlatformServer = resp.data.system.system === '*' ? '是' : '否'\r\n            this.configData.maxRunJob = resp.data.system.maxRunJob\r\n            this.configData.sourceByJob = resp.data.sourceByJob === 1 ? '是' : '否'\r\n            // 调度频率信息\r\n            if (resp.data.timeTrigger) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowTimeTriggerData = true\r\n              for (let key in resp.data.timeTrigger) {\r\n                this.timeTriggerData[key] = resp.data.timeTrigger[key]\r\n              }\r\n            }\r\n            if (resp.data.frequency) {\r\n              // this.isShowFreOrTime = true\r\n              // this.isShowFrequencyData = true\r\n              for (let key in resp.data.frequency) {\r\n                this.frequencyData[key] = resp.data.frequency[key]\r\n              }\r\n            }\r\n            // 资源规则信息\r\n            if (resp.data.weight) {\r\n              // this.isShowWeight = true\r\n              this.weightList = resp.data.weight\r\n            }\r\n            this.$forceUpdate()\r\n          }\r\n        })\r\n    },\r\n    searchLineGraph () {\r\n      let starttime = this.lineSearchBean.start\r\n      let endtime = this.lineSearchBean.end\r\n      let t = (endtime - starttime) / (1000 * 3600)\r\n      if (starttime === '') {\r\n        this.$Message.warning('请输入开始时间')\r\n      } else if (endtime === '') {\r\n        this.$Message.warning('请输入结束时间')\r\n      } else if (starttime > endtime) {\r\n        this.$Message.warning('开始时间大于结束时间')\r\n      } else if (t > 3) {\r\n        this.$Message.warning('时间差值超过3小时')\r\n      } else {\r\n        starttime = utils.fmtDate(starttime, 'yyyy-MM-dd hh:mm:ss')\r\n        endtime = utils.fmtDate(endtime, 'yyyy-MM-dd hh:mm:ss')\r\n        this.searchPlatformC(this.row, starttime, endtime)\r\n      }\r\n      // this.searchPlatformC(this.row,)\r\n    },\r\n    searchPlatformC (row, start, end) {\r\n      this.platformconcGraph = this.$echarts.init(document.getElementById('platformconc'))\r\n      this.platformconcGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      this.nodeGraph = this.$echarts.init(document.getElementById('nodeconc'))\r\n      this.nodeGraph.showLoading({\r\n        text: '数据正在加载...',\r\n        textStyle: { fontSize: 30, color: '#444' }\r\n      })\r\n      let params = { platform: row.platform, system: row.system, start: start, end: end, node: row.serverName, job: row.job, errorCode: row.alarmType }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: '/merrordiagnosis/getConcurrentInfo',\r\n        params: params\r\n      }\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            if (resp.data.platformStatus) {\r\n              this.getPlatformconcData(resp.data.platformStatus)\r\n            }\r\n            if (resp.data.nodeStatus) {\r\n              this.getNodeData(resp.data.nodeStatus)\r\n            }\r\n          }\r\n        })\r\n    },\r\n    searchLog (row) {\r\n      // if(row.alarmLogkeyContent) {\r\n      //   this.jobCheck.isShowAnalyLog = true\r\n      //   this.logContent = row.alarmLogkeyContent\r\n      // }\r\n    },\r\n    searchKeyLink () {\r\n\r\n    },\r\n    searchBaseLine (keyJob) {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: '/mbaselinelines/getKeyLine/' + keyJob\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.status && resp.status === 200) {\r\n          this.isInitialize = false\r\n          if (resp.data.length === 0) {\r\n            this.isInitialize = true\r\n            return\r\n          }\r\n          this.collapseData = resp.data\r\n          this.collapseData.forEach((cData, j) => {\r\n            this.collapseData[j].timelineItemData = []\r\n            this.collapseData[j].baselineBean = {}\r\n            let arr = cData.baselines\r\n            // arr[1].todayRunningStatus = 2 // 测试\r\n            // arr[3].estimatedEndTime = '2021-07-08 16:00' // 测试\r\n            // console.log(arr)\r\n            arr.forEach((bData, i) => {\r\n              let temp = {}\r\n              Object.assign(temp, bData)\r\n              temp.lastStatus = cData.jobs[i].lastStatus\r\n              temp.dispatcherTime = cData.jobs[i].dispatcherTime\r\n              temp.startTime = cData.jobs[i].startTime\r\n              temp.endTime = cData.jobs[i].endTime\r\n              temp.jobDate = cData.jobs[i].jobDate\r\n              temp.jobType = cData.jobs[i].jobType\r\n              // cData.jobs[2].lastStatus = 'Dispatcher' // 测试\r\n              //  temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Pending' ? 'gray' : '#ff9900'))\r\n              // temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : '#ff9900')\r\n              temp.color = bData.todayRunningStatus === 1 ? 'green' : (cData.jobs[i].lastStatus === 'Done' ? 'gray' : (cData.jobs[i].lastStatus === 'Failed' ? 'red' : '#ff9900'))\r\n              if (temp.color === '#ff9900') {\r\n                this.waitSignalFile = false\r\n                let size = this.collapseData[j].timelineItemData.length\r\n                for (let a = 0; a < size; a++) {\r\n                  this.collapseData[j].timelineItemData[a].todayRunningStatus = 1\r\n                  this.collapseData[j].timelineItemData[a].isShowEstimatedTime = false\r\n                  this.collapseData[j].timelineItemData[a].isShowWaitSignalFile = false\r\n                  this.collapseData[j].timelineItemData[a].color = 'green'\r\n                }\r\n              }\r\n              temp.isShowEstimatedTime = bData.todayRunningStatus !== 1\r\n              temp.isShowWaitSignalFile = false\r\n              if (bData.todayRunningStatus == 2 && cData.jobs[i].lastStatus == 'Done') { // 是否等待信号文件\r\n                temp.isShowWaitSignalFile = true\r\n                this.waitSignalFile = true\r\n              }\r\n              if (cData.jobs[i].lastStatus == 'Failed') {\r\n                this.waitSignalFile = true //\r\n              }\r\n              this.collapseData[j].timelineItemData.push(temp)\r\n            })\r\n            this.keyJobBean.jobDate = cData.jobdate\r\n            this.collapseData[j].baselineBean.rootJob = cData.originJob\r\n          })\r\n          if (this.waitSignalFile) { // 不显示预计完成时间 等待信号文件/Failed\r\n            for (let i = 0; i < this.collapseData.length; i++) {\r\n              this.collapseData[i].timelineItemData.map(t => {\r\n                t.isShowEstimatedTime = false\r\n              })\r\n            }\r\n          }\r\n          this.keyJobBean.baselineTime = utils.fmtDate(new Date(resp.data[0].alarmTime), 'yyyy-MM-dd hh:mm:ss')\r\n          this.formatBaselineBean(resp.data[0].alarmTime)\r\n          setTimeout(() => {\r\n            this.defaultPanel = ['0']\r\n          }, 200)\r\n        }\r\n      })\r\n      // this.loadOneKeyJob(keyJob)\r\n    },\r\n    formatBaselineBean (alarmTime) {\r\n      this.collapseData.forEach((d, i) => {\r\n        let index = d.baselines.length - 1\r\n        if (d.baselines[index].estimatedEndTime !== null) {\r\n          let stime = new Date(d.baselines[index].estimatedEndTime)\r\n          let etime = new Date(alarmTime)\r\n          let str1 = this.subtracTime(stime, etime)\r\n          if (etime > stime) {\r\n            this.collapseData[i].baselineBean.restTime = str1\r\n            this.collapseData[i].baselineBean.status = '安全'\r\n          } else {\r\n            this.collapseData[i].baselineBean.restTime = '-' + str1\r\n            this.collapseData[i].baselineBean.status = '破线'\r\n          }\r\n          if (!this.waitSignalFile) {\r\n            this.collapseData[i].baselineBean.estimatedCompTime = d.baselines[index].estimatedEndTime\r\n          }\r\n        }\r\n      })\r\n    },\r\n    changeJobTest (name) {\r\n      if (name === 'checkDepend') {\r\n        this.searchDepend(this.row)\r\n      } else if (name === 'checkSchedule') {\r\n        this.searchSchedule(this.row)\r\n      } else if (name === 'analysisPlatPerformance') {\r\n        let start = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime() - 2 * 60 * 60 * 1000), 'yyyy-MM-dd hh:mm:ss')\r\n        let end = utils.fmtDate(new Date(new Date(this.row.alarmTime).getTime()), 'yyyy-MM-dd hh:mm:ss')\r\n        this.lineSearchBean = { start: start, end: end }\r\n        this.searchPlatformC(this.row, start, end)\r\n      } else if (name === 'analysisLog') {\r\n        this.searchLog(this.row)\r\n      } else if (name === 'analysisKeyLink') {\r\n        // this.searchKeyLink(this.row)\r\n        if (this.affectDownStringKeyJobList) {\r\n          this.searchBaseLine(this.affectDownStringKeyJobList[0])\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 如果传过来的有初始数据则进行数据绑定\r\n     **/\r\n    bindData (fields) {\r\n      try {\r\n        const data = Object.assign({}, this.transData.initFormBean)\r\n        if (fields) { // 进行可选字段初始化\r\n          for (const field of fields) {\r\n            this.formBean[field] = data[field]\r\n          }\r\n        } else { // 进行全量字段初始化（默认是只有主表的主键的）\r\n          this.formBean = Object.assign({}, data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    /**\r\n\t\t * 下载\r\n\t\t **/\r\n    download () {\r\n      let params = {}\r\n      Object.assign(params, this.formBean)\r\n      params.type = 'excel'\r\n      utils.download(RESOURCE_PATH + '/downLoad', params)\r\n    },\r\n    getPageParam () {\r\n      return { formBean: this.alarmBean,\r\n        currentPage: this.page.current,\r\n        pageSize: this.page.size }\r\n    },\r\n    /**\r\n\t\t * 查询\r\n\t\t **/\r\n    search () {\r\n      let params = {}\r\n      params = Object.assign({}, this.alarmBean)\r\n      if (this.alarmBean.localDate) {\r\n        params.localDate = utils.fmtDate(this.alarmBean.localDate, 'yyyy-MM-dd')\r\n      }\r\n      params.current = this.page.current\r\n      params.size = this.page.size\r\n      for (let key in params) {\r\n        if (key === 'job' && params[key]) {\r\n          params[key] = params[key].trim().toUpperCase()\r\n        }\r\n      }\r\n      let httpConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH,\r\n        params: params\r\n      }\r\n      this.loading = true\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData = resp.data.records\r\n            this.page.total = resp.data.total\r\n          }\r\n          this.loading = false\r\n        })\r\n    },\r\n    subtracTime (stime, etime) {\r\n      let result\r\n      if (etime > stime) {\r\n        result = Math.floor((etime - stime) / 1000)\r\n      } else {\r\n        result = Math.floor((stime - etime) / 1000)\r\n      }\r\n      let h = Math.floor(result / 3600) < 10 ? '0' + Math.floor(result / 3600) : Math.floor(result / 3600)\r\n      let m = Math.floor(result % 3600 / 60) < 10 ? '0' + Math.floor(result % 3600 / 60) : Math.floor(result % 3600 / 60)\r\n      let s = result % 3600 % 60 < 10 ? '0' + result % 3600 % 60 : result % 3600 % 60\r\n      let str = h + ':' + m + ':' + s\r\n      return str\r\n    },\r\n    formatTime (minute) {\r\n      let day = 0\r\n      let hour = 0\r\n      if (minute > 60) {\r\n        hour = parseInt(minute / 60)\r\n        minute = parseInt(minute % 60)\r\n        if (hour > 24) {\r\n          day = parseInt(hour / 24)\r\n          hour = parseInt(hour % 24)\r\n        }\r\n      }\r\n      let result = ''\r\n      if (minute > 0) {\r\n        result = '' + parseInt(minute) + '分钟'\r\n      }\r\n      if (hour > 0) {\r\n        result = '' + parseInt(hour) + '小时' + result\r\n      }\r\n      if (day > 0) {\r\n        result = '' + parseInt(day) + '天' + result\r\n      }\r\n      return result\r\n    },\r\n    /**\r\n\t\t * 清空\r\n\t\t **/\r\n    clear () {\r\n      this.alarmBean = {}\r\n      this.page = {\r\n        current: 1,\r\n        size: 10\r\n      }\r\n    },\r\n    /**\r\n\t\t * 新增\r\n\t\t **/\r\n    add () {\r\n      this.$emit('switch')\r\n    },\r\n    /**\r\n\t\t * 删除\r\n\t\t **/\r\n    del () {\r\n      const ids = Array.from(this.selection, e => e.databaseId)\r\n      ids.forEach(id => {\r\n        this.request.delReq.url = RESOURCE_PATH + '/' + id\r\n        this.request.delReq.method = 'DELETE'\r\n        this.$ajax(this.request.delReq)\r\n          .then(resp => {\r\n            this.search()\r\n          })\r\n      })\r\n    },\r\n    /**\r\n\t\t * 数据复选事件\r\n\t\t **/\r\n    select (selection) {\r\n      this.selection = selection\r\n    },\r\n    /**\r\n\t\t * 改变页码事件\r\n\t\t **/\r\n    changePage (currentPage) {\r\n      this.page.current = currentPage\r\n      this.search()\r\n    },\r\n    /**\r\n\t\t * 改变分页大小事件\r\n\t\t **/\r\n    changePageSize (pageSize) {\r\n      this.page.size = pageSize\r\n      this.search()\r\n    },\r\n    cancel () {\r\n\r\n    },\r\n    switchTab (tabName) {\r\n      for (let key in this.tabObj) {\r\n        this.tabObj[key] = false\r\n      }\r\n      this.tabObj[tabName] = true\r\n    },\r\n    haltAlarm (alarmId, alarmStatus, index, row) {\r\n      if (alarmStatus == '1') {\r\n        this.$Message.info('请选择未处理的告警操作')\r\n        return\r\n      }\r\n      if (alarmStatus == '2') {\r\n        alarmStatus = '0'\r\n      } else if (alarmStatus == '0') {\r\n        alarmStatus = '2'\r\n      }\r\n      let httpConfig = {\r\n        url: RESOURCE_PATH,\r\n        data: {\talarmStatus: alarmStatus, job: row.job, authps: row.platform + row.system }\r\n      }\r\n      httpConfig.method = 'PUT'\r\n      httpConfig.url = RESOURCE_PATH + '/' + alarmId\r\n      this.$ajax(httpConfig)\r\n        .then(resp => {\r\n          if (resp.status && resp.status === 200) {\r\n            this.alarmGridData[index].alarmStatus = alarmStatus\r\n          }\r\n        }).catch(error => {\r\n          console.error('login exception:' + error)\r\n        })\r\n    },\r\n    errorHandleOk () {\r\n      this.$refs.alarmHandleForm.validate(valid => {\r\n        if (!valid) return\r\n        let httpConfig = {\r\n          method: 'GET',\r\n          url: RESOURCE_PATH + '/operater',\r\n          params: { key: this.formBean.operationType, alarmId: this.formBean.id }\r\n        }\r\n        this.$ajax(httpConfig)\r\n          .then(resp => {\r\n            console.log(resp)\r\n            if (resp.data === true) {\r\n              // this.alarmGridData[this.formBean.index].alarmStatus = this.formBean.alarmStatus\r\n              this.errorHandle.show = false\r\n              this.search()\r\n            }\r\n          })\r\n      })\r\n    },\r\n    errorHandleBack () {\r\n      this.$refs.operationTypeSelect.classes[1]['ivu-form-item-error'] = false\r\n      if (this.$refs.operationTypeSelect.$el.children[1].children[1]) {\r\n        this.$refs.operationTypeSelect.$el.children[1].children[1].remove()\r\n      }\r\n      this.errorHandle.show = false\r\n    },\r\n    showErrorHandle (errorObj, index) {\r\n      const operaterConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/getOperater',\r\n        params: {}\r\n      }\r\n      this.$ajax(operaterConfig).then(resp => {\r\n        this.formBean = {}\r\n        this.errorHandle.show = true\r\n        this.formBean.id = errorObj.id\r\n        this.formBean.operationUser = sessionStorage.username\r\n        this.formBean.operationTime = utils.fmtDate(new Date(), 'yyyy-MM-dd hh24:mm:ss')\r\n        this.formBean = Object.assign({}, this.formBean)\r\n        if (resp.data) {\r\n          this.operationTypeList = resp.data\r\n        }\r\n      })\r\n    },\r\n    /**\r\n\t\t * 列排序\r\n\t\t **/\r\n    changeSort (column) {\r\n      let classcon = window.event.currentTarget.className\r\n      // let sort, order\r\n      let order\r\n      if (classcon.indexOf('ivu-icon-md-arrow-dropup') > -1) {\r\n        order = 'ASC'\r\n      } else if (classcon.indexOf('ivu-icon-md-arrow-dropdown') > -1) {\r\n        order = 'DESC'\r\n      }\r\n      this.alarmBean.order = order\r\n      this.alarmBean.sort = column.key\r\n      this.search()\r\n    },\r\n    queryAlarmList () {\r\n      this.search()\r\n    },\r\n    loadErrorCodeList () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: RESOURCE_PATH + '/errorCodeList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data.rows) {\r\n          resp.data.rows.forEach(data => {\r\n            let tmp = {}\r\n            tmp.value = data.code\r\n            tmp.label = data.code\r\n            this.alarmTypelist.push(tmp)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    loaduser: function () {\r\n      const loadConfig = {\r\n        method: 'GET',\r\n        url: 'user/getUserList',\r\n        params: {}\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        if (resp.data) {\r\n          resp.data.forEach(data => {\r\n            this.userlist[data.user_id] = data.userchname\r\n            this.userMap[data.username] = data.userchname\r\n          })\r\n        }\r\n        this.search()\r\n      })\r\n    },\r\n    queryPlatform () {\r\n      let platformList = this.$store.getters.getUserPlatform()\r\n      platformList.forEach(data => {\r\n        let tmp = {}\r\n        tmp.value = data\r\n        tmp.label = data\r\n        this.platformData.push(tmp)\r\n      })\r\n    },\r\n    querySystem () {\r\n      this.systemData = []\r\n      this.$refs.refsystem.setQuery('')\r\n      if (this.alarmBean.platform) {\r\n        let userSystemList = this.$store.getters.getUserSystem()\r\n        let userSystem = userSystemList[this.alarmBean.platform]\r\n        userSystem.forEach(data => {\r\n          let tmp = {}\r\n          tmp.value = data\r\n          tmp.label = data\r\n          this.systemData.push(tmp)\r\n        })\r\n      }\r\n    },\r\n    tomain () {\r\n      for (let key in this.transData.tabObj) {\r\n        this.transData.tabObj[key] = false\r\n      }\r\n      this.transData.tabObj['alarmTab'] = true\r\n    },\r\n    scrollInter () {\r\n      this.showData.splice(0, 1)\r\n      setTimeout(() => {\r\n        this.listData.push(this.listData[0])\r\n        // this.showData = [];\r\n        // this.showData.splice(0,1);\r\n        this.showData.splice(0, 1, this.listData[0])\r\n        this.listData.shift()\r\n      }, 0)\r\n    },\r\n    enter () {\r\n      clearInterval(this.timer)\r\n    },\r\n    leave () {\r\n      this.timer = setInterval(this.scrollInter, 10000)\r\n    },\r\n    downloadLogfile (row) {\r\n      let params = {}\r\n      params.job = row.job\r\n      params.logDir = row.logDir\r\n      params.logName = row.logName\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadLogfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '日志不存在,请检查作业是否为虚作业!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/merrordiagnosis/downloadLogfile', params)\r\n          }\r\n        })\r\n    },\r\n    downloadScriptfile (row) {\r\n      let params = {}\r\n      params.scriptName = row.scriptName\r\n      params.job = row.job\r\n      params.platform = row.platform\r\n      params.system = row.system\r\n      params.check = '1'\r\n      let config = {\r\n        url: '/merrordiagnosis/downloadScriptfile',\r\n        method: 'GET',\r\n        params: params\r\n      }\r\n      this.$ajax(config)\r\n        .then(resp => {\r\n          if (resp.data.returnCode && resp.data.returnCode == 'fail') {\r\n            this.$Message.warning({\r\n              content: '脚本不存在,请检查脚本是否存在!',\r\n              duration: 5,\r\n              closable: true\r\n            })\r\n          } else {\r\n            params.check = '0'\r\n            utils.download('/udsjobsteprecord/downloadScriptfile', params)\r\n          }\r\n        })\r\n    },\r\n    addZero (time) {\r\n      let str = time\r\n      if (time < 10) {\r\n        str = '0' + time\r\n      }\r\n      return str\r\n    },\r\n    queryjobtypeList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'jobtype' }\r\n      }\r\n      this.$ajax(loadConfig)\r\n        .then(resp => {\r\n          this.jobtypeList = {}\r\n          resp.data.rows.forEach(data => {\r\n            this.jobtypeList[data.dicValue] = data.dicName\r\n          })\r\n        })\r\n    },\r\n    querylocationList () {\r\n      let loadConfig = {\r\n        method: 'GET',\r\n        url: '/dictionary',\r\n        params: { dicCode: 'location' }\r\n      }\r\n      this.$ajax(loadConfig).then(resp => {\r\n        this.locationList = {}\r\n        resp.data.rows.forEach(data => {\r\n          this.locationList[data.dicValue] = data.dicName\r\n        })\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  /**\r\n\t * 视图挂载\r\n\t **/\r\n  mounted () {\r\n    // this.loaduser();\r\n    this.alarmBean.localDate = utils.fmtDate(new Date(), 'yyyy-MM-dd')\r\n    // this.loadErrorCodeList()\r\n    this.init()\r\n    // this.listMUdsDutyByChDay()\r\n    this.queryPlatform()\r\n    this.timer = setInterval(this.scrollInter, 10000)\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n</script>\r\n<style>\r\n#alarmList table td div{\r\n\tpadding-left: 0;\r\n\tpadding-right: 3px;\r\n}\r\n#alarmList table th div{\r\n\tpadding-left: 0;\r\n\tpadding-right: 3px;\r\n}\r\n\r\n.slide-enter-active,.slide-leave-active {\r\n\ttransition: all 0.5s linear;\r\n}\r\n.slide-leave-to {\r\n\ttransform: translateY(-20px);\r\n}\r\n.slide-enter {\r\n\ttransform: translateY(20px);\r\n\r\n}\r\n.marquee-wrap {\r\n\twidth: 80%;\r\n\theight: 20px;\r\n\tborder-radius:0px;\r\n\tbackground: rgba($color: #000000, $alpha: 0.6);\r\n\tmargin: 0 0;\r\n\toverflow: hidden;\r\n\t.marquee-list {\r\n\t\tli {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\ttext-overflow: ellipsis;\r\n\t\t\toverflow: hidden;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tpadding: 0 20px;\r\n\t\t\tlist-style: none;\r\n\t\t\tline-height: 40px;\r\n\t\t\ttext-align: center;\r\n\t\t\tcolor: #fff;\r\n\t\t\tfont-size: 40px;\r\n\t\t\tfont-weight: 400;\r\n\t\t\tfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\t\t}\r\n\t}\r\n\t.animate-up {\r\n\t\ttransition: all 0.5s linear;\r\n\t\ttransform: translateY(-20px);\r\n\t}\r\n}\r\n.duty{\r\n\tfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\tcolor: #2d8cf0;\r\n\tfont-size: 14px;\r\n\tcursor:pointer;\r\n\tfont-weight: 540;\r\n}\r\n.dutys {\r\nfont-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\r\n\tcolor: #ff9900;\r\n\tfont-size: 16px;\r\n\tcursor:pointer;\r\n\tfont-weight: 540;\r\n}\r\n.list-item {\r\n\tdisplay: block;\r\n\tmargin-right: 10px;\r\n}\r\n.list-enter-active, .list-leave-active {\r\n\ttransition: all 0.5s;\r\n}\r\n.list-leave-to {\r\n\topacity: 0;\r\n\ttransform:translateY(-20px);\r\n}\r\n.list-enter {\r\n\topacity: 0;\r\n\ttransform:translateY(20px);\r\n}\r\n.diag-title {\r\n  /* color#495060;font-size:14px */\r\n  font-size: 14px;\r\n  color: #495060;\r\n  /* font-weight: bold; */\r\n}\r\n#errorDiagnosisOp .ivu-modal .ivu-modal-content .ivu-modal-body {\r\n  width: 100%;\r\n}\r\n.base-title {\r\n  font-size: 15px;\r\n}\r\n.base-message {\r\n  /* color: #464c5b; */\r\n  /* color: #5d6b8b; */\r\n  color: #3e3f4b;\r\n  margin-left: 10px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  /* white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden; */\r\n  /* width: 50%; */\r\n}\r\n.line_box {\r\n  height: 31vh;\r\n  /* width: 700% !important; */\r\n  width: 100%;\r\n  padding-left: 0px;\r\n}\r\n.bar_box {\r\n  height: 100px;\r\n  width: 90%;\r\n  padding-left: 0px;\r\n}\r\n.baseInfo .ivu-tabs {\r\n  /* max-height: 50px; */\r\n  height: 5%;\r\n  min-height: 50px !important;\r\n}\r\n#timeTriggerOp span {\r\n  font-size: 15px;\r\n}\r\n#frequencyOp span {\r\n  font-size: 15px;\r\n}\r\n#tabs .ivu-tabs-nav .ivu-tabs-tab {\r\n  display: inline-block;\r\n  height: 100%;\r\n  width: 33vmin;\r\n  text-align: center;\r\n  padding: 8px 16px;\r\n  margin-right: 16px;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  position: relative;\r\n  transition: color .3s ease-in-out;\r\n}\r\n.upJobMsgGreen {\r\n  margin-left:1%;\r\n  color:#afd582;\r\n}\r\n.upJobMsgRed {\r\n  margin-left:1%;\r\n  color:#528e95;\r\n}\r\n#frequencyOp .ivu-modal-body{\r\n  width: 100% !important;\r\n}\r\n</style>\r\n"]}]}